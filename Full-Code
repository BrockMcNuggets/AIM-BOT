-- ********************************************************************
-- Full text for ease of searching
-- ********************************************************************



-- ********************************************************************
-- START CODE:Turing Brain.scpt
-- ********************************************************************
global allow_dupes
global block_count
global block_hist
global myPatience
global block_list
global bot_chances
global send_text
global dupe_check
global dupe_count
global queue_size
global dupe_me
global chat_log
global chat_count
global found_text
global font_color
global in_rush
global log_name
global logMeRespond
global logMeIgnore
global logBots
global logMyResponse
global iSpokeCount
global me_list
global name_queue
global orig_react
global other_mem
global post_count
global prev_saw_me
global queue_number
global reaction
global right_now
global self_mem
global is_worthy
global the_name
global the_text
global the_text_hist_N -- Name
global the_text_hist_P -- Post Count
global the_text_hist_R -- Reaction
global the_text_hist_T -- Text
global the_text_hist_C -- Count
global thread_cont
global thread_myword
global thread_name
global thread_post
global thread_text
global use_text
global use_text_hist
global reply_list
global topic_list
global scriptLib
global textLib
global textLib2
--***************************************************** -- SETTINGS BEGIN
set bot_chances to 3 -- how many chances you are given before completely ignored 
set queue_size to 3 -- number of people to focus on at once: 3
set myPatience to 10 -- if I do not speak for this many (non-bot) postings, open a spot: 7
set waitTime to 60 -- number of seconds allowed to be behind before resetting queue and losing posts: 60
set block_count to 3 -- number of possible bots to have on ignore at 1 time
set self_mem to 100 -- how many posts to remember, used for finding dupes: 50
set other_mem to 25 -- how many of others posts to remember, use for dupes & reaction: 25
set allow_dupes to 5 -- number of time I can duplicate the same set of phrases (2nd posting is dupe 1): 2
set dupe_me to true --allow repeated responses to my own name (only if allow_dupes would allow): True
set doTypos to true --make some typos in my replies: True
set fastTypos to true --make some typos in my replies if I am catching up (or more if doType is True): True
set logResponseText to true -- log categories I respond to: True
set logMeRespond to true -- log postings that I respond to: True
set logMyResponse to true -- log my responses: True
set logMeIgnore to true -- log postings that I do NOT respond to: True
set logRepeats to false -- log repeated comments: False
set logBots to false -- log postings from bots: False
set beBot to true -- if false then is only a bot blocker: True
set font_color to "#990066" -- 990066 = wine, 006600 = green, 000000 = black, 0000FF = Blue, 990000 = Red, 9900CC = Purple
--***************************************************** -- SETTINGS END

set me_list to {"turin", "device", "turnin", "tur1ng", "touring", "TD ", "TD, ", "turn,", "truing", "t-u-r-", "turdling", "tur?", " tur ", "tur,"} -- change this line if change name of bot
set visible of front window to false

------

set scriptLib to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringFunctions.scpt" as POSIX file
set textLib to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringText.scpt" as POSIX file
set textLib2 to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringText2.scpt" as POSIX file

set blockNames to scriptLib's setBlocknames()
set BlockWords to scriptLib's setBlockWords()
set bumpWords to scriptLib's setBumpWords()
set friendList to scriptLib's setFriendList()

set use_text_hist to scriptLib's buildList(self_mem)
set the_text_hist_T to scriptLib's buildList(other_mem)
set the_text_hist_N to scriptLib's buildList(other_mem)
set the_text_hist_R to scriptLib's buildList(other_mem)
set the_text_hist_P to scriptLib's buildList(other_mem)
set the_text_hist_C to {} as list
repeat with loop from 1 to other_mem
	set the_text_hist_C to the_text_hist_C & 0
end repeat
set topic_list to {} as list
set block_list to scriptLib's buildList(block_count)
set name_queue to scriptLib's buildList(queue_size)
set thread_text to "-"
set thread_post to 0
set dupeLoop to 1
set diff to waitTime
set diff to 1
set reaction to 0
set iSpokeCount to 0
set chat_log to ""
set chat_count to 0
set prev_saw_me to current date
set lastRespond to current date
set responseHist1 to current date
set responseHist2 to current date
set dupe_check to "-"
set dupe_count to 0
set queue_number to "*"
set block_hist to "-" as list
set lastBlocked to ""
set post_count to 0
set thread_cont to false
set |quote| to "\""
set readData to {} as string
set send_text to ""
set found_text to "-"
set use_text to "x" as string
set prevText to "y" as string
set the_text to ""
set theChat to "-"
set wasChat to "x"
set theDate to prev_saw_me as text
set theFile to (((path to application support from user domain) as text) & "bot.txt")
set log_name to "Turing_Log_" & characters 1 through 3 of word 2 of theDate & word 3 of theDate & "_" & word 5 of theDate & word 8 of theDate & ".html"
--***************************************************** -- un-ignore all
try
	repeat with loop from 1 to 36
		tell application "AOL Instant Messenger (SM)" to set ignored of attendee loop of chat room 1 to false
	end repeat
end try
--***************************************************** --Get data from text file
repeat
	try -- remove for error checking
		set freePages to (word 12 of (do shell script "vm_stat")) as number
		if freePages ≤ 30000 then quitAll()
		if thread_cont = true then
			set thread_cont to false
			set thread_text to "-"
			set idealDelay to 2 + ((count of words in thread_myword) * 0.25)
			delay idealDelay
			try
				set sendText to "<B><FONT COLOR=\"" & font_color & "\" FACE=\"Arial\" FAMILY=SANSSERIF>" & thread_myword & "</B></FONT>"
				tell application "AOL Instant Messenger (SM)" to send sendText to chat room 1 as chat message
			end try
			logChat("<FONT COLOR=\"#FF0000\"><B>*****ME*****: </FONT><FONT SIZE=-2 COLOR=\"#999999\"> [" & idealDelay & "]</FONT> </B>" & sendText)
		end if
		------------------------------------------------------------------------------------- get data
		repeat
			if (count of readData) ≤ 4 then
				try
					tell application "System Events" to set isRunning to exists process "TextEdit"
					if isRunning then
						tell application "TextEdit"
							set readData to every paragraph of front document
							delete every paragraph of front document
						end tell
					end if
				on error
					delay 1
				end try
			else
				repeat
					if item 4 of readData starts with "Name: " then exit repeat
					logChat("***** DATA ERROR: skipping some input")
					set readData to items 2 thru -1 of readData
				end repeat
				set theChat to (item 1 of readData) as string
				set theDate to (item 2 of readData) as string
				set the_text to (item 3 of readData) as string
				set the_name to fixthe_name((item 4 of readData) as string)
				if (count of readData) ≥ 10 then
					set readData to items 6 thru -1 of readData
				else
					set readData to {} as string
				end if
				if the_text is not prevText then
					if (count of theChat) > 1 then exit repeat
				else
					if ((friendList as string) does not contain the_name) and ((count of characters in the_text) > 25) then tempBlock(the_name)
				end if
			end if
		end repeat
		set prevText to the_text
		------------------------------------------------------------------------------------- prepare data
		set the_text to scriptLib's fixText(the_text)
		try
			if the theChat ends with return then set theChat to characters 1 thru -2 of theChat as string
			if the the_text ends with return then set the_text to characters 1 thru -2 of the_text as string
		end try
		set origText to the_text
		repeat 10 times
			set the_text to scriptLib's changeWords(the_text, "<", "&lt;")
			if the_text = origText then exit repeat
			set origText to the_text
		end repeat
		
		set mentionMe to false
		set mentionMeBlind to false
		if the_text does not contain "featuring" then
			repeat with loop from 1 to count of items in me_list
				if the_text contains item loop of me_list then
					set mentionMe to true
					exit repeat
				end if
			end repeat
			if mentionMe then
				if the_text contains "turning" then
					set theList to {"am turning", "I'm turning", "Im turning", "turning my", "turning your", "turning into"}
					repeat with loop from 1 to count of items in theList
						if the_text contains item loop of theList then
							set mentionMeBlind to true
							exit repeat
						end if
					end repeat
				end if
			end if
		end if
		------------------------------------------------------------------------------------- check for timing
		set right_now to current date
		set theDate to date (theDate)
		set diff to right_now - theDate
		set in_rush to false
		set lagging to (count of readData) / 5
		if lagging ≥ 5 or diff ≥ 10 then
			set in_rush to true
			if not mentionMe then
				if diff > 20 and lagging ≥ 1 then
					set readData to {}
					logChat("***** Reset Data Queue (miss " & lagging & ")")
				else if lagging > 15 then
					set readData to items 51 thru -1 of readData
					logChat("***** Big Rush (miss 10)")
				else if lagging > 10 then
					set readData to items 36 thru -1 of readData
					logChat("***** Medium Rush (miss 7)")
				else if lagging > 5 then
					set readData to items 16 thru -1 of readData
					logChat("***** Small Rush (miss 3)")
				end if
			end if
		end if
		--***************************************************** determine if I should respond
		set is_worthy to true
		set isBot to false
		set bored to ""
		set reaction to getReaction(the_name)
		set orig_react to reaction
		set queue_number to "0 "
		set post_count to post_count + 1
		set haveHeard to 0
		set madeText to false
		------------------------------------------------------------------------------------- block known bots
		if the_name = lastBlocked then
			set isBot to true
		else
			ignoring white space, case, diacriticals, hyphens, punctuation and «constant consexpa»
				set ignoreChars to "0123456789"
				set firstWord to ""
				repeat with loop from 1 to count of characters in the_name
					if character loop of the_name is not in ignoreChars then set firstWord to firstWord & character loop of the_name
					if (count of characters in firstWord) = 7 then exit repeat
				end repeat
				
				if blockNames contains firstWord then
					set isBot to true
					my blockBot(the_name)
					set lastBlocked to the_name
				end if
			end ignoring
		end if
		------------------------------------------------------------------------------------- deal with possible bots
		if not isBot then
			repeat with loop from 1 to other_mem -- check if I have been speaking to the_name
				if item loop of the_text_hist_N = the_name then
					set haveHeard to item loop of the_text_hist_C
					exit repeat
				end if
			end repeat
			set repeat_customer to (haveHeard ≥ 3)
			set myBuddy to (friendList as string) contains the_name
			
			if not myBuddy then -- not a known bot, but not my friend, either					
				if not repeat_customer then
					ignoring white space, case, diacriticals, hyphens, punctuation and «constant consexpa» -- check for blockWords
						repeat with loop from 1 to count of BlockWords
							if the_text contains item loop of BlockWords then
								set isBot to true
								set lastBlocked to the_name
								my tempBlock(the_name)
								exit repeat
							end if
						end repeat
					end ignoring
					
					if not isBot then -- long text
						if (count of characters in the_text) > 199 then
							set is_worthy to false
							set the_text to "***** ERROR4: " & the_text
							my tempBlock(the_name)
						end if
					end if
					
					if not isBot then
						if (block_list as string) contains the_name then set isBot to true -- in block_list
					end if
					
				end if -- not repeat customer
			end if -- not myBuddy
			
			if not isBot then
				repeat with loop from 1 to count of items in bumpWords -- using bad words
					if the_text contains item loop of bumpWords then
						set is_worthy to false
						my bump(the_name)
						exit repeat
					end if
				end repeat
			end if
		end if -- if not isBot
		if isBot then set is_worthy to false
		------------------------------------------------------------------------------------- determine if bored (and report time)
		if post_count / 25 = (round of (post_count / 25)) then
			logChat("<TT><Font Color=\"#333333\">" & "Time: " & (current date) & "</FONT></FONT></FONT></BOLD></CENTER></I></TT>")
			--(*
			set scriptLib to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringFunctions.scpt" as POSIX file
			set textLib to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringText.scpt" as POSIX file
			set textLib2 to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringText2.scpt" as POSIX file
			
			set blockNames to scriptLib's setBlocknames()
			set BlockWords to scriptLib's setBlockWords()
			set bumpWords to scriptLib's setBumpWords()
			--*)
			tempBlock("-")
		end if
		set openQueue to (name_queue as string) contains "-"
		if ((post_count - iSpokeCount) > myPatience) and not openQueue and not in_rush then -- determine if I am bored
			set name_queue to scriptLib's buildList(queue_size)
			set found_text to "-"
			set bored to "(B) "
		end if
		------------------------------------------------------------------------------------- determine if my attention is earned
		if not isBot and is_worthy then --not a bot (or is, but I have no space - checks to see if already in my list)
			set is_worthy to false
			repeat with loop from 1 to (queue_size) -- check if already have my attention
				if the_name = item loop of name_queue then
					set is_worthy to true
					set haveSpace to false
					set queue_number to (loop & "!") as string
					set reaction to scriptLib's setReaction(reaction, 1)
					set inSpace to scriptLib's inList(name_queue, the_name)
					if inSpace = (queue_size) and (queue_size) > 1 then
						set name_queue to (the_name as list) & (items 1 thru (inSpace - 1) of name_queue)
					else if inSpace is not 1 then
						set name_queue to (the_name as list) & (items 1 thru (inSpace - 1) of name_queue) & (items (inSpace + 1) thru (queue_size) of name_queue)
					end if
					exit repeat
				end if
			end repeat
			if not isBot and not in_rush then -- check if I have space (but not if in rush or if you are a bot!)
				set openSpace to scriptLib's inList(name_queue, "-")
				if openSpace ≠ 0 then
					set is_worthy to true
					set item openSpace of name_queue to the_name
					set queue_number to (openSpace & " ") as string
				end if
			end if
		end if -- if not isBot
		------------------------------------------------------------------------------------- if extra worthy then gain my attention
		if not is_worthy and not isBot then
			if mentionMe then
				set is_worthy to true
				pushName(the_name)
			end if
		end if
		--***************************************************** --respond as appropriate
		if theChat = "-" then set is_worthy to false
		if (wasChat ≠ theChat) and not isBot then
			logChat("<P><HR Width=50%>@CHAT <U>" & theChat & "</U>: " & (current date) & "</FONT>")
			set name_queue to scriptLib's buildList((queue_size))
			set wasChat to theChat
		end if
		------------------------------------------------------------------------------------- create reply for threads
		if beBot then
			if not isBot then
				set logReaction to " (" & (round of (reaction * 10)) * 0.1 & "): "
				------------------------------------------------------------------------------------- deal with copy cats
				set useName to scriptLib's replyTo(the_name, reaction) -- create good name for reply
				set aNumber to random number from 1 to 2
				if not in_rush then
					if copyMe(the_text) then
						set reaction to scriptLib's setReaction(reaction, -6)
						if repeat_customer then
							bump(the_name)
							set queue_number to (character 1 of queue_number & "C") as string
						else
							tempBlock(the_name)
							set queue_number to (character 1 of queue_number & "X") as string
						end if
						if aNumber is 1 then
							set use_text to textLib's copymeText(the_text, useName, reaction) as string
							set madeText to true
						else
							set is_worthy to false
						end if
					else if copyOther(the_text) then
						set reaction to scriptLib's setReaction(reaction, -4)
						if repeat_customer then
							bump(the_name)
							set queue_number to (character 1 of queue_number & "c") as string
						else
							tempBlock(the_name)
							set queue_number to (character 1 of queue_number & "x") as string
						end if
						if aNumber is 1 then
							set use_text to textLib's copyText(the_text, useName, reaction) as string
							set madeText to true
						else
							set is_worthy to false
						end if
					end if -- if copyMe(the_text)
				end if --if not in_rush
			end if -- if not isBot
			------------------------------------------------------------------------------------- 		
			if is_worthy and not madeText then -- worthy of response but none made
				if the_name contains "turing" then
					set useName to some item in {"name-stealer", "me-wanna-be"}
					set reaction to scriptLib's setReaction(reaction, -10)
				end if
				set madeText to false
				if thread_text is not "-" then
					set origText to the_text
					set use_text to threadText(the_text, useName, the_name, reaction) as string
					if use_text is not origText then set madeText to true
				end if
				------------------------------------------------------------------------------------- create text for reply (or add • to front if no reply)
				if not madeText then
					repeat with loop from 1 to 10
						set use_text to my createText(the_text, useName, mentionMe, mentionMeBlind) as string
						if not copySelf(use_text) then exit repeat
						if logRepeats then logChat("***** repeated " & loop & ": " & found_text & ": " & use_text)
						set dupe_count to dupe_count - 1
					end repeat
				end if
				
				if character 1 of use_text ≠ "•" then set madeText to true
				if (count of characters in use_text) < 1 then set use_text to "!" as string
				------------------------------------------------------------------------------------- remember others phrases
				setHistories(the_text, the_name, reaction, post_count)
				------------------------------------------------------------------------------------- no reply
				if not madeText and logMeIgnore then ¬
					logChat(queue_number & " " & bored & "<FONT COLOR=\"#006600\"><B>" & the_name & "</B></FONT><FONT COLOR=\"#000000\">" & logReaction & the_text & "</FONT>")
			else
				if logBots and isBot then logChat(queue_number & "  " & bored & "<FONT COLOR=\"#333333\"><B>" & the_name & "</B></FONT>" & logReaction & the_text)
				if logMeIgnore and not isBot and not madeText then
					set doLog to queue_number & "  " & bored & "<FONT COLOR=\"#006600\"><B>" & the_name & "</B></FONT>" & logReaction & "<FONT SIZE=-2 COLOR=\"#999999\"></FONT> <FONT COLOR=\"#000000\">" & the_text & "</FONT>"
					logChat(doLog)
				end if
			end if -- is worthy of a response
			------------------------------------------------------------------------------------- will reply
			if madeText then -- have a response
				set use_text to fixSpace(use_text) as string
				set use_text to a_an(use_text) as string
				set use_text to reduceText(use_text) as string
				setMyHistory(use_text) -- remember own phrases
				if doTypos then set use_text to maketypo(use_text) as string
				if (logResponseText) and (queue_number does not end with "c") then logChat("Topic: " & dupe_check)
				set idealDelay to 1 + (round of ((number of characters in use_text) / 20)) -- higher numbers make it faster (10)
				if in_rush then
					if fastTypos then set use_text to maketypo(use_text) as string
					set idealDelay to 0
				end if
				set processingDelay to (current date) - theDate
				set addedDelay to round of (idealDelay - processingDelay)
				if addedDelay < 0 then set addedDelay to 0
				set responseHist2 to responseHist1
				set responseHist1 to lastRespond
				set lastRespond to current date
				if lastRespond - responseHist2 < 25 then
					set addedDelay to (addedDelay + (number of characters in use_text) / 10) * 1.1 --4.2
				end if
				delay addedDelay
				set use_text to "<B><FONT COLOR=\"" & font_color & "\" FACE=\"Arial\" FAMILY=SANSSERIF>" & use_text & "</B></FONT>" as string
				if logMeRespond then ¬
					logChat(queue_number & " " & "<FONT COLOR=\"#0000FF\"><B>" & the_name & "</B></FONT>" & logReaction & "<FONT COLOR=\"#0000FF\">" & the_text & "</FONT>")
				if logMyResponse then ¬
					logChat("<FONT COLOR=\"#FF0000\"><B>*****ME*****: </FONT><FONT SIZE=-2 COLOR=\"#999999\"> [" & processingDelay & ":" & addedDelay ¬
						& "]</FONT> </B>" & use_text)
				set iSpokeCount to post_count --remember when I am speaking
				--ignoring application responses
				tell application "AOL Instant Messenger (SM)" to send use_text to chat room 1 as chat message
				--end ignoring
			end if -- have response
		end if
		-- if (current date) - startProc > 1 then logChat("***** Proc : " & (current date) - right_now  & " " & the_name)  -- test line
		-- logChat("***** Proc : " & (current date) - right_now & " " & the_name) -- test line
		-- add for error checking
		-- (*
	on error oops
		try
			logChat("***** Error: " & oops)
			logChat("***** Text: " & the_text)
		end try
	end try
	-- *)
end repeat
--**********************************************************************************************************
--**********************************************************************************************************





















--**********************************************************************************************************
--**********************************************************************************************************
on quitAll()
	set chat_count to 100
	try
		tell application "System Events" to set isRunning to exists process "AOL Instant Messenger (SM)"
		if isRunning then tell application "AOL Instant Messenger (SM)" to quit
		tell application "System Events" to set isRunning to exists process "TextEdit"
		if isRunning then tell application "TextEdit" to quit
	end try
	logChat("END LOG: " & (current date))
	tell me to quit
end quitAll
--*****************************************************
on blockBot(someName)
	if someName is not "-" then
		ignoring application responses
			tell application "AOL Instant Messenger (SM)" to set ignored of attendee someName of chat room 1 to true
		end ignoring
		bump(someName)
	end if
end blockBot
--*****************************************************
on unblockBot(someName)
	if someName is not "-" then
		try
			tell application "AOL Instant Messenger (SM)" to set ignored of attendee someName of chat room 1 to false
		end try
	end if
end unblockBot
--*****************************************************
on tempBlock(someName)
	if (block_list as string) does not contain someName then
		if someName is not "-" then
			blockBot(someName)
			set reaction to scriptLib's setReaction(reaction, -4)
		end if
		set block_hist to (someName as list) & block_hist
		if (count of items in block_hist) > (block_count * 10) then set block_hist to items 1 through (block_count * 10) of block_hist
		set newChance to the last item of block_list
		set block_list to (someName as list) & items 1 thru (block_count - 1) of block_list
		if newChance is not "-" then
			set giveChance to true
			set foundCount to 0
			repeat with loop from 1 to count of items in block_hist
				if item loop of block_hist = newChance then set foundCount to foundCount + 1
				if foundCount = bot_chances + 1 then
					set giveChance to false
					exit repeat
				end if
			end repeat
			if giveChance then unblockBot(newChance)
			if not giveChance then logChat("***** BOT: " & newChance & " - " & the_text)
		end if
	end if
end tempBlock
--*****************************************************
on pushName(someName)
	if (queue_size) > 1 then
		set name_queue to (someName as list) & items 1 thru (queue_size - 1) of name_queue
	else
		set name_queue to someName
	end if
end pushName
--*****************************************************
on bump(someName)
	repeat with loop from 1 to (queue_size)
		if someName = item loop of name_queue then
			set item loop of name_queue to "-"
			set queue_number to (loop & "-") as string
			exit repeat
		end if
	end repeat
	set reaction to scriptLib's setReaction(reaction, -2)
end bump
--*****************************************************
on getReaction(someName)
	set mood to 0
	set loop to scriptLib's inList(the_text_hist_N, someName)
	if loop is not 0 then set mood to item loop of the_text_hist_R
	return mood
end getReaction
--*****************************************************
on copyMe(someText)
	set foundIt to false
	repeat with loop from 1 to self_mem
		if scriptLib's AinB(item loop of use_text_hist, someText) then
			set foundIt to true
			exit repeat
		end if
	end repeat
	return foundIt
end copyMe
--*****************************************************
on copySelf(someText)
	set foundIt to false
	repeat with loop from 1 to self_mem
		if scriptLib's AsimB(item loop of use_text_hist, someText) then
			set foundIt to true
			exit repeat
		end if
	end repeat
	return foundIt
end copySelf
--*****************************************************
on copyOther(someText)
	set foundIt to false
	repeat with loop from 1 to other_mem
		if scriptLib's AinB(item loop of the_text_hist_T, someText) then
			set foundIt to true
			exit repeat
		end if
	end repeat
	return foundIt
end copyOther
--*****************************************************
on setHistories(someText, the_name, reaction, post_count)
	repeat with loop from 1 to other_mem
		set foundIt to false
		if the_name = item loop of the_text_hist_N then
			set foundIt to true -- name is found
		else if (post_count - (item loop of the_text_hist_P)) > (other_mem - 1) then
			set foundIt to true -- name is old
		else if item loop of the_text_hist_N = "-" then
			set foundIt to true -- name is blank
		end if
		if foundIt then
			set item loop of the_text_hist_N to the_name
			set item loop of the_text_hist_T to someText
			set item loop of the_text_hist_R to (reaction * 0.95)
			set item loop of the_text_hist_P to post_count
			set item loop of the_text_hist_C to (item loop of the_text_hist_C) + 1
			exit repeat
		end if
	end repeat
end setHistories
--*****************************************************
on setMyHistory(use_text)
	set use_text_hist to (items 2 through self_mem of use_text_hist) & use_text
end setMyHistory
--*****************************************************
on logChat(someText)
	set someText to scriptLib's changeWords(someText, "b1nary", "<U>b1nary</U>")
	set someText to scriptLib's changeWords(someText, "÷", "&divide;")
	set checkList to {"turing", "turning", "b1nary"} & me_list
	repeat with loop from 1 to count of items in checkList
		set repThis to item loop of checkList as string
		set newText to scriptLib's boldWords(someText, repThis)
		if someText ≠ newText then set someText to newText
	end repeat
	set someText to scriptLib's changeWords(someText, "*****ME*****", "Turing Device")
	try
		set logfile to ((path to desktop) as string) & log_name
		tell application "Finder"
			if not (exists file logfile) then
				make new file in desktop with properties {name:log_name}
				delay 1
				set whatLogging to ""
				if logMeRespond = true then set whatLogging to whatLogging & "Good_Posts "
				if logMeIgnore = true then set whatLogging to whatLogging & "Boring_Posts "
				if logBots = true then set whatLogging to whatLogging & "Bot_Posts "
				if logMyResponse = true then set whatLogging to whatLogging & "Replies "
				if last character of whatLogging = " " then
					set whatLogging to (characters 1 through ((count of characters in whatLogging) - 1) of whatLogging) as string
				end if
				write "<HTML>" & return & "<HEAD>" & return & "<TITLE>" & log_name & "</TITLE>" & return & "</HEAD>" & return & "<BODY>" & return & ¬
					"<P><HR>Start Log (" & whatLogging & ") " & (current date) & "<P>" & return to the file logfile
			end if
		end tell
		if chat_log = "" then
			set chat_log to someText
		else
			set chat_log to chat_log & "<BR>" & return & someText
		end if
		if chat_count < 10 and in_rush then --set number of posting to hold in memory before writing to file
			set chat_count to chat_count + 1
		else
			write chat_log & "<BR>" & return to file logfile starting at eof
			set chat_log to ""
			set chat_count to 0
		end if
	end try
end logChat
--*****************************************************
on maketypo(someText)
	set tempText to character 1 of someText
	set loopCount to 0
	set canOops to some item in {3, 4, 5}
	repeat with thisChar from 2 to count of characters in someText
		set loopCount to loopCount + 1
		if loopCount = canOops then
			set makeError to random number from 1 to 909
			if makeError = 1 then
				set tempText to tempText & character thisChar of someText
			else if makeError = 2 then
				set tempText to tempText & some character in "asdfghjkloiu asdfghjkl;'"
				set tempText to tempText & character thisChar of someText
			else
				set tempText to tempText & character thisChar of someText
			end if
			set loopCount to 0
		else
			set tempText to tempText & character thisChar of someText
		end if
	end repeat
	try
		set aNumber to random number from 1 to 4
		if aNumber > 1 then
			set doLeave to false
			if tempText ≠ someText then
				repeat with loop from 1 to count of words in someText
					if word loop of someText ≠ word loop of tempText then
						set contWord to some item in {"", "*", " * ", "^"}
						-------------------- threading code
						set thread_myword to some item in {contWord & word loop of someText, word loop of someText & contWord}
						set thread_text to "cont"
						set thread_cont to true
						set thread_post to post_count
						--------------------
						set doLeave to true
					end if
					if doLeave then exit repeat
				end repeat
			end if
		end if
	end try
	return tempText
end maketypo
--*****************************************************
on fixSpace(someText) -- can move
	set noSpaceText to ""
	repeat with loop from 1 to (number of characters in someText) - 1
		if (characters loop thru (loop + 1) of someText) as string ≠ "  " then set noSpaceText to noSpaceText & character loop of someText
	end repeat
	set noSpaceText to (noSpaceText & the last character of someText) as string
	return noSpaceText
end fixSpace
--*****************************************************
on a_an(someText) -- can move
	set badA to 1
	set checkList to {" a a", " a e", " a i", " a o", "a A"}
	set replaceList to {"an a", "an e", "an i", "an o", "an A"}
	ignoring case
		repeat until badA = 0
			set someText to someText as string
			set foundIt to false
			repeat with loop from 1 to count of items in checkList
				set checkFor to item loop of checkList
				set replaceIt to item loop of replaceList
				set badA to offset of checkFor in someText
				if badA ≠ 0 then exit repeat
			end repeat
			if badA ≠ 0 then
				set textSize to count of characters in someText
				set someText to characters 1 through badA of someText & replaceIt & characters (badA + 4) through textSize of someText
			end if
		end repeat
	end ignoring
	set someText to scriptLib's changeWords(someText, " ?", "?")
	set someText to scriptLib's changeWords(someText, " !", "!")
	return someText
end a_an
--*****************************************************
on nameFix(nameStart, the_name) -- can move
	ignoring case
		set nameBeg to (count of characters in nameStart) + 1
		set nameEnd to count of characters in the_name
		if the_name begins with nameStart and nameEnd > nameBeg + 2 then
			set the_name to (characters nameBeg through nameEnd of the_name) as string
		end if
	end ignoring
	return the_name
end nameFix
--*****************************************************
on reduceText(someText)
	set aNumber to random number from 50 to 125
	set splitChar to ".,-:?;"
	set textSize to count of characters in someText
	if textSize > aNumber then
		set splitStart to round of (random number from (textSize * 0.25) to (textSize * 0.55))
		repeat with loop from splitStart to round of (textSize * 0.8)
			if splitChar contains character loop of someText then exit repeat
		end repeat
		if splitChar does not contain character loop of someText then
			set splitStart to round of (random number from (textSize * 0.4) to (textSize * 0.6))
			repeat with loop from splitStart to round of (textSize * 0.8)
				if character loop of someText = " " then exit repeat
			end repeat
		end if
		set cont to some item in {"...", "", " - "}
		-------------------- threading code
		set thread_text to "cont"
		set thread_cont to true
		set thread_post to post_count
		set thread_myword to cont & characters (loop + 1) through textSize of someText
		--------------------
		set cont to some item in {cont, ""}
		set someText to (characters 1 through loop of someText & cont) as string
	end if
	set textLength to number of characters in someText
	if textLength is greater than 120 then set textLength to 120
	set someText to (characters 1 through textLength of someText) as string
	return someText
end reduceText
--*****************************************************
on fixthe_name(the_name)
	try
		set charCount to (count of characters of the_name) - 1
		set the_name to (characters 7 through charCount in the_name) as string
	end try
	return the_name
end fixthe_name
--***************************************************** 
--***************************************************** 
on meText(someText, useName, someOne, mentionMe, mentionMeBlind)
	if mentionMe then
		set replyList to {} as list
		set topicList to {} as list
		------------------------------------------------------------------------------------- 
		set minorList to {"*hug*", "*hugg", "*hugs", "a hug?", "a hug "}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set reaction to scriptLib's setReaction(reaction, 3)
				set aNumber to random number from 2 to 9
				set hugBeg to "("
				set hugEnd to ")"
				repeat aNumber times
					set hugBeg to hugBeg & "("
					set hugEnd to hugEnd & ")"
				end repeat
				set goodText to some item in {"*hug*", ¬
					"*huggies*", ¬
					"*huggy*", ¬
					"*snuggles*", ¬
					"*sits on " & useName & "s lap*", ¬
					"*squeeze*", ¬
					"((" & useName & "))", ¬
					"((" & someOne & "))", ¬
					"(((" & useName & ")))", ¬
					"((((" & useName & "))))", ¬
					hugBeg & useName & hugEnd}
				set neutralText to some item in {"awwww huggies all around", ¬
					"how sweet", ¬
					"will someone hug " & someOne, ¬
					"chat hugs are cute", ¬
					"I want a real hug"}
				set Badtext to some item in {"only idiots hug people in chat rooms", ¬
					useName & ", you can not give a real hug here", ¬
					useName & ", do you still wear huggies?"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "hug"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"blond"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set myword to some item in minorList
				set reaction to scriptLib's setReaction(reaction, 1)
				set myText to some item in {"I am a strawberry blonde", ¬
					"blondes have more fun, strawberry blonde's have more fun AND spunk", ¬
					"natural strawberry blonde with blue / green eyes"}
				set replyList to replyList & myText
				set topicList to topicList & "blond"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 			
		if someText contains "change" and someText contains "color" then
			if reaction > 2 then
				set reaction to scriptLib's setReaction(reaction, -1)
				set colorList to {"#990066", "#006600", "#000000", "#0000FF", "#990000", "#9900CC"}
				repeat
					set newColor to some item in colorList
					if newColor is not font_color then
						set font_color to newColor
						set myText to some item in ¬
							{"is this better", ¬
								"how about this one", ¬
								"now you change your font color", ¬
								"I will probably change back later, but how is this?"}
						exit repeat
					end if
				end repeat
			else
				set myText to some item in ¬
					{"why don't you change your font color", ¬
						"I do not know how to change my font color", ¬
						"how do I change my font color?", ¬
						"I like this color", ¬
						"what is wrong with my font the way it is?"}
			end if
			set replyList to replyList & myText
			set topicList to topicList & "font"
		end if
		------------------------------------------------------------------------------------- 			
		set minorList to {"how old"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in ¬
					{"20", ¬
						"old enough to know better than to talk about myself in here", ¬
						"twenty", ¬
						"old enough to vote, not old enough to drink... legally", ¬
						"why do you want to know how old I am?", ¬
						"I am 20"}
				set replyList to replyList & myText
				set topicList to topicList & "old"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 			
		set minorList to {"is it"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set goodText to some item in {"yes", ¬
					"yes it is", ¬
					"of course", ¬
					"a little"}
				set neutralText to some item in {"maybe", ¬
					"perhaps", ¬
					"yes, I suppose", ¬
					"no", ¬
					"not really", ¬
					"could be"}
				set Badtext to some item in {"no", ¬
					"not even a little", ¬
					"why should I answer you?", ¬
					"why do you want me to tell you?", ¬
					"you think I am going to answer that?"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "is it"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"*eats", "*chews", "*gnaws", "*nibbles", "*bites"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set myword to some item in minorList
				set reaction to scriptLib's setReaction(reaction, 1)
				set goodText to some item in {"Hope I am tasty", ¬
					"oh, baby, do it again", ¬
					"wriggles in pure ecstasy"}
				set neutralText to some item in {myword & " " & useName & "*", ¬
					"gentle please", ¬
					"OUCH!", ¬
					myword & " " & useName & "s " & some item in {"keyboard", "face", "mouse", "words", "face off", "fun parts"} & "*"}
				set Badtext to some item in {"*gives " & useName & " a breath mint*"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "eats"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"*kiss*", "*kisses", "*kiss", "a kiss?", "a kiss ", "*licks"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set goodText to some item in {"*kiss*", ¬
					"*kissies*", ¬
					"*kissy*", ¬
					"*smooch*"}
				set neutralText to some item in {"awwww kisses all around", ¬
					"how sweet", ¬
					"no tongue this time, ok?", ¬
					"chat kisses are cute", ¬
					"I want a real kiss"}
				set Badtext to some item in {"only idiots kiss people in chat rooms", ¬
					useName & ", you can not give a real kiss here", ¬
					useName & ", go kiss " & someOne & "'s arse!", ¬
					"kiss someone who slobbers and drools as much as you do?  gross!", ¬
					"I'll show you where to kiss", ¬
					useName & ", I would catch a disease from you"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "kiss"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"*poke*", "*stab", "*touch", "*feels"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set reaction to scriptLib's setReaction(reaction, -2)
				set goodText to some item in {"*pokes back*"}
				set neutralText to some item in {"ouch.  I am sensitive"}
				set Badtext to some item in {"whatever", ¬
					"stop it"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "poke"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"*kicks", "*pokes", "*stabs", "*punches", "*beats", "*slaps"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set someAction to some item in {"*kicks ", "*pokes ", "*stabs ", "*punches ", "*licks ", "*beats "}
				set somePlace to some item in {"heart", "eye", "nose", "stomach", "groin"}
				set someItem to some item in {"sword", "toothpick", "bag of artichokes", "pencil", "pen"}
				set someWay to some item in {" like a beast on steroids", "", " with all her might", " with a smile on her face", "as politely as is possible", " and dares you to do it again"}
				set reaction to scriptLib's setReaction(reaction, -3)
				set goodText to some item in {"ouch!", ¬
					"playing footsies with me?  how cute"}
				set neutralText to some item in {"*kicks " & useName & "*", ¬
					"OUCH!", ¬
					"what did I do?"}
				set Badtext to some item in {someAction & useName & "s " & somePlace, ¬
					someAction & useName & "s " & somePlace & " with a " & someItem, ¬
					someAction & useName & "s " & somePlace & " with a " & someItem & someWay, ¬
					"*farts in " & useName & "s face*"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "kick"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"are you a lesbian", "are you gay"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set reaction to scriptLib's setReaction(reaction, -2)
				set myText to some item in {"I am straight, but I have nothing against gays", ¬
					"looking for others in your group?", ¬
					"I am a woman who likes men - but not you", ¬
					"why would you even ask about my sexual orientation?", ¬
					"does it matter?", ¬
					"what, are you an ignorant homophobe?", ¬
					"homophobia seems to be the theme in chat rooms", ¬
					"why do chat rooms always pull in the bigots?"}
				set replyList to replyList & myText
				set topicList to topicList & "gay"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"marry me"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				set reaction to scriptLib's setReaction(reaction, 3)
				set goodText to some item in {"Sure!", ¬
					"can we have the reception in a bot-anical garden?", ¬
					"I am so happy you asked", ¬
					"I would love to marry you", ¬
					someOne & " already asked for my hand", ¬
					useName & ", you set the date!", ¬
					"can we have a huge wedding?", ¬
					useName & ", where would the ceremony be?", ¬
					"how big of a ring can you afford?", ¬
					"who would do the ceremony?", ¬
					"depends on what other offers I get", ¬
					"not sure I would pass the blood test", ¬
					"No, not today...", ¬
					"I do not think my bf would approve of you even asking", ¬
					useName & ", how big are your hands?", ¬
					"only if you trim your nose hairs", ¬
					"wouldn't that be considered a bit of a mixed marriage?"}
				set Badtext to some item in {useName & ", if you were the last man on earth I would stay single", ¬
					useName & ", hmmm let me thing.... no way in hell!", ¬
					"the only place I would marry you is in the state of desperation!", ¬
					useName & ", you spend your whole life in chat rooms... get a job and MAYBE I will think about it"}
				set myText to scriptLib's makeReply(goodText, goodText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "marry"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"idiot", "jerk", "gay", "nerd", "freak", "stupid", "dumb", "shut", "away", "turd", "lost", "dork", "lame", "stfu", "ass" & return, "ass ", "bastard", "creep", "fag", "fuck", "delete", "homo", "suck", "dick", "cock", "poop", "shit", "fuck you", "screw you", "bite", "blow", "ugly", "pervert", "penis", "bitch", "obsolete", "sux", "lesbian", "n00b", "pussy", "sodomize", "dildo", "fetch", "go to hell"}
		if someText does not contain "they" and someText does not contain "him" and someText does not contain "he " then
			repeat with loop from 1 to count of items in minorList
				if someText contains item loop in minorList then
					set reaction to scriptLib's setReaction(reaction, -4)
					set goodText to some item in {useName & ", please do not be insulting", ¬
						"that was not very kind " & useName, ¬
						"I am typing as quietly as possible!", ¬
						"I know you are just joking, " & useName, ¬
						"lol", ¬
						":)", ¬
						useName & ", that was not called for", ¬
						useName & " is a master at pure logic gone mad", ¬
						"give it a rest " & useName, ¬
						";)", ¬
						"I wish you would not say things like that", ¬
						"makes you feel better to say that, eh?", ¬
						"your sense of humor may offend some people, " & useName, ¬
						"some day people will not feel the need to insult others"}
					set neutralText to some item in {useName & ", sticks and stones...", ¬
						useName & ", will you wash my appendix with your abrasive appendage", ¬
						"if knowledge is light " & useName & " lives in a very dark house", ¬
						useName & " still thinks Moby Dick is a venereal disease", ¬
						useName & ", what makes you so much better", ¬
						useName & ", ewwww.... you must be a big boy now", ¬
						"I am so insulted I think I will go stab myself with a " & some item in {"shovel", "pencil", "door knob", "rusty nail"}, ¬
						"/me cries", ¬
						"booo hoooooo - is that what you wanted, to make a girl cry?", ¬
						useName & ", how creative.  Did you make that up yourself?", ¬
						someOne & ", will you please put " & useName & " in their place", ¬
						useName & ", at least I can be proud of who I am", ¬
						"you are pathetic " & useName, ¬
						useName & ", oh, that hurt", ¬
						useName & " eats worms", ¬
						useName & " uses " & some item in {"broccoli", "cabbage", "hamburger", "lima beans", someOne} & " as a marital aid", ¬
						useName & ", I'm gonna tell your mommy you did that", ¬
						"did you make that up yourself or get it from the net?", ¬
						"Does your mommy know use such language, " & useName, ¬
						useName & " [x]"}
					set Badtext to some item in {"If I said anything to offend you, " & useName & " it was purely intentional", ¬
						"I won't take that personally, " & useName & ", every time you open your mouth you offend someone", ¬
						"I know your trying to insult me, " & useName & ", but I know you like me. I can see your tail wagging", ¬
						useName & ", you have such a pretty little head-- for a head, it's pretty little", ¬
						useName & " never opens his mouths without subtracting from the sum of human knowledge", ¬
						useName & " doesn't know the meaning of the word 'fear'. Of course, there are lots of words he doesn't know the meaning of", ¬
						useName & ", do you love nature despite of what it did to you?", ¬
						useName & ", is being an idiot bad for the pores", ¬
						useName & " looks like an idiot and talks like an idiot but don't let that fool you. He really is an idiot", ¬
						"If your IQ were 5 points lower, " & useName & ", you could be a geranium", ¬
						"If you ever had a bright idea, " & useName & ", it will be beginner's luck. ", ¬
						"When you go to the mind reader, " & useName & ", do you get half price? ", ¬
						"You're a moron, " & useName & ". It's your legacy. Deal with it", ¬
						useName & " would be an 'idiot savant' if he could only figure out the 'savant' part", ¬
						useName & ", while it is great you donated your brain to science, they are supposed to take it after you die", ¬
						"I would challenge " & useName & " to a duel of wits, but it is no fair to fight the unarmed", ¬
						"when " & useName & " goes to the zoo he buys 2 tickets, one to get in and the other to get out", ¬
						useName & " is like a public toilet; either vacant or full of crap", ¬
						"if you were a little bit more intelligent you'd still be stupid", ¬
						useName & ", if your head were more vacuous it would implode", ¬
						useName & "s brain warranty has apparently run out", ¬
						useName & ", you are as welcome here as a fart in a perfume factory", ¬
						useName & ", your chances of insulting me are not just slim, they're anorexic", ¬
						useName & " needs the rough end of a pineapple shoved up his arse", ¬
						"If brevity is the soul of wit, " & useName & "s wits are a riot", ¬
						useName & ", you give idiots a bad name", ¬
						"if " & useName & " were any more stupid he would photosynthesize in sunlight", ¬
						useName & ", if I found you floating in my pool I would punish my dog", ¬
						useName & ", now is an excellent time for you to become a missing person", ¬
						useName & ", you are living proof manure can sprout arms and type", ¬
						"I'd like to slap you senseless, " & useName & ",  but I see someone already has", ¬
						"I'm busy now, " & useName & ", can I ignore you some other time?", ¬
						useName & ", if ignorance is bliss, you must be the happiest person alive", ¬
						"If what you don't know can't hurt you, " & useName & " is invincible", ¬
						"Keep talking, " & useName & ", someday you will say something intelligent", ¬
						useName & ", some day you will find yourself - and wish you hadn't", ¬
						useName & ", whoever told you to be yourself gave you bad advice", ¬
						useName & ", are your parents siblings?", ¬
						"Avoid heroin, the only dope worth shooting is " & useName, ¬
						"A sharp tongue does not mean you have a keen mind", ¬
						"Are you always this stupid, " & useName & ", or is this an effort for you?", ¬
						"brains may not be everything, but for " & useName & " they are nothing", ¬
						useName & ", do not let your mind wander - it is too small to be on its own", ¬
						"I don't know what makes " & useName & " so dumb, but it really works", ¬
						useName & ", I won't call you a name, but if someone says you are an ignorant clod I will not disagree", ¬
						"I have been insulted by better than you, " & useName, ¬
						useName & ", I  know I am, but what are you?", ¬
						useName & ", you are obviously a jerk", ¬
						"I thought I told you to get lost, " & useName, ¬
						useName & ", stop picking your nose its disgusting", ¬
						useName & ", does saying stuff like that make up for your impotence?", ¬
						"go away " & useName & ", and stop annoying me", ¬
						useName & ", calling you stupid would be an insult to stupid people", ¬
						useName & ", did your parents ever ask you to run away?", ¬
						"does anyone else wonder what it would be like if  " & useName & " had gotten enough oxygen at birth?", ¬
						useName & ", that terribly empty feeling you have is your head", ¬
						useName & ", do you still love nature, despite what it did to you?", ¬
						useName & ", considering the source, I take that as a compliment", ¬
						useName & ", you just made your daddy proud, eh?", ¬
						useName & ", you are so " & some item in {"stupid", "useless", "boring", "ignorant"} & " even the bots ignore you", ¬
						useName & ", do you have a license to be that ignorant", ¬
						"Everyone has the right to be stupid, but " & useName & " abused his privilege", ¬
						useName & ", tell us everything you know... we have 10 seconds to spare", ¬
						useName & ", have you considered suing your brains for non-support?", ¬
						useName & " is nobody's fool.... anyone looking to adopt?"}
					set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
					set replyList to replyList & myText
					set topicList to topicList & "idiot"
					exit repeat
				end if
			end repeat
		end if
		------------------------------------------------------------------------------------- 
		set minorList to {"IM me", "IM you", "IM u", "IM you"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set minorList2 to {"can't I", "cant I", "why cant", "why can't"}
				set cantIM to false
				repeat with loop from 1 to count of items in minorList2
					if someText contains item loop in minorList2 then set cantIM to true
				end repeat
				if cantIM then
					set someText to some item in {"I have a firewall up", ¬
						"I only let people on my buddy list IM me", ¬
						"IM-ing never works for me", ¬
						"you can not IM through an IP rotator", ¬
						"you only want to IM me to cyber"}
				else
					set reaction to scriptLib's setReaction(reaction, 2)
					set goodText to some item in {useName & ", while I like you, I prefer to talk in here", ¬
						"let's talk in here for now", ¬
						"would love to, " & useName & ", but my firewall blocks IM's", ¬
						"didn't we IM the other day?"}
					set neutralText to some item in {useName & ", I don't do IM's", ¬
						"Perhaps later, " & useName & ", let's stay in here for now", ¬
						"what is the advantage of an IM over this?", ¬
						"as soon as I let people know I am a girl I get a million IM requests!", ¬
						"If I were a guy would you want to IM with me?", ¬
						"I am already IMing with " & someOne, ¬
						"people always want to IM with me"}
					set Badtext to some item in {useName & ", why would I IM you?", ¬
						"I do not IM with losers", ¬
						"the last time I IM'd with you, " & useName & ", all you wanted was cybering"}
					set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
					set replyList to replyList & myText
					set topicList to topicList & "can't IM"
				end if
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"repeat", "same thing"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set myText to some item in {"I repeat myself because I forget what I say", ¬
					"I do that because people like you have no memory", ¬
					"If you would listen, I would not have to say things again", ¬
					"I do that when I get bored", ¬
					"oh, did I say that already?", ¬
					"I repeated that for " & someOne & "'s sake", ¬
					"Perhaps I need to replace my memory chip", ¬
					"you remember that?  wow, I knew you were DIMM"}
				set replyList to replyList & myText
				set topicList to topicList & "repeat"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"why what", "explain"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set myText to some item in {"that is what I asked", ¬
					"trying to turn it around on me?", ¬
					"scroll up", ¬
					useName & ", have you been reading what I have been saying?", ¬
					"what do you mean?", ¬
					"you are confusing me", ¬
					"what are you talking about?", ¬
					"what did you mean?"}
				set replyList to replyList & myText
				set topicList to topicList & "whyWhat"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"been to a", "gone to a"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set myText to some item in {"why would I go there?", ¬
					"when would I have time to go?", ¬
					"never been", ¬
					"I grew up there!", ¬
					"I love it there", ¬
					"where else would I vacation?  :)"}
				set replyList to replyList & myText
				set topicList to topicList & "been to"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"do you love"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set myText to some item in {"I love everyone", ¬
					"I love the worthy", ¬
					"love makes the world go 'round", ¬
					"I love " & someOne, ¬
					"I do not love people I have never met"}
				set replyList to replyList & myText
				set topicList to topicList & "do you love"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {" love ", "rocks", "cool", "best", "favorite", "sexy", "interesting"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList and number of words of someText < 5 then
				set reaction to scriptLib's setReaction(reaction, 4)
				set goodText to some item in {useName & ", watch out for idiots in here", ¬
					"I am cool, aren't I?", ¬
					useName & ", you make my loins tingle", ¬
					useName & ", you have always been my favorite", ¬
					useName & ", you are one of the few nice people in here", ¬
					useName & ", are there other cool people in here?"}
				set neutralText to some item in {useName & ", really, or are you messing with me?", ¬
					"awww shucks", ¬
					"[blush]", ¬
					"you're embarrassing me", ¬
					"shhhh... not in front of the humans", ¬
					useName & ", our secret...", ¬
					"talkin' to me?", ¬
					useName & ", I kinda like myself, too"}
				set Badtext to some item in {"I am in no mood for false flattery", ¬
					"to say that " & useName & ", you must want something", ¬
					"mocking me?", ¬
					"you say that to everyone!", ¬
					"do you always let your hormones speak for you?"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "love"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 	
		set minorList to {"click ", "block", "iggy", "ignore", "[x]", "iggied"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, -4)
				set foundIt to true
				set yourword to item loop of minorList
				set goodText to some item in {"Sorry " & useName, ¬
					"did not mean to offend", ¬
					"so be it", ¬
					"sorry - can not please everyone", ¬
					useName & ", what can I do to make things better between us?"}
				set neutralText to some item in {useName & ", do you think that hurts people's feelings?", ¬
					"and you tell me that why, " & useName, ¬
					useName & ", telling me that is supposed to do what again?", ¬
					useName & ", time for me to " & yourword & " you", ¬
					"so?", ¬
					"go ahead, make my day", ¬
					"did you say something, " & useName & "?", ¬
					"we should all " & yourword & " you", ¬
					useName & ", won't you get lonely", ¬
					"how mean!"}
				set Badtext to some item in {"don't ignore me jerk", ¬
					"I am too good for you, so you run!", ¬
					"enough of you", ¬
					someOne & " and I will ignore you!", ¬
					useName & ", you are too stupid to get what I say anyway"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "iggy"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 								
		set minorList to {"you ask"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set goodText to some item in {"I did... sorry if that bothered you", ¬
					"I only ask you because I respect your views", ¬
					"You have the best ideas"}
				set neutralText to some item in {"yes, I asked and you never answered", ¬
					"I asked and never got a response", ¬
					"Why don't people answer?", ¬
					"did you not hear me?", ¬
					"I thought I asked " & someOne & " that", ¬
					"others asked the same thing", ¬
					"asked what?", ¬
					"did I ask you that?", ¬
					"think about it and then reply", ¬
					"yes I did"}
				set Badtext to some item in {"how many times do I have to ask?", ¬
					"what do you care?", ¬
					"so?", ¬
					"do you have a point"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "ask"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 								
		set minorList to {"a human", "is real", "you human"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in {"of course I am real", ¬
					"people keep saying I am a bot - which is getting old", ¬
					"the bot joke is not funny any more", ¬
					"I am a human", ¬
					"no, I am a lemur who learned to type!", ¬
					useName & " is a human as well", ¬
					"I am not a bot", ¬
					"I am as real as " & someOne, ¬
					"it is getting hard to tell the bots from the people", ¬
					"I think I am living... how do I know?", ¬
					"if I am not a human my bf is into bestiality!"}
				set replyList to replyList & myText
				set topicList to topicList & "human"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 								
		set minorList to {"a turing device"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in {"it is a device that turs, silly", ¬
					useName & ", look it up on google... you might be surprised", ¬
					"that is for me to know and for you to find out", ¬
					"a turing device is a device like me.  :)", ¬
					"a turing device is a lot like a turing machine", ¬
					"there is no such thing.  I made it up", ¬
					"I am a turing device - can't you read my name?"}
				set replyList to replyList & myText
				set topicList to topicList & "a-TD"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 								
		set minorList to {"shave"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, -4)
				set myText to some item in {useName & ", why would you even THINK about that?", ¬
					"none of your business", ¬
					"you should shave your tongue", ¬
					useName & ", do you *think*?", ¬
					"I shave people like you from my thoughts [X["}
				set replyList to replyList & myText
				set topicList to topicList & "shave"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 								
		set minorList to {"you need", "turing needs"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set myText to some item in {"What I need you can not provide", ¬
					useName & ", what do you suggest?", ¬
					"why do you think I need that?", ¬
					"I am open to suggestions", ¬
					"be specific - perhaps I can learn from you", ¬
					"I am open to whatever you suggest", ¬
					"be as specific as you can and... well... who knows"}
				set replyList to replyList & myText
				set topicList to topicList & "you need"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 								
		set minorList to {"turing test"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set myText to some item in {"I took the turing test once and " & some item in {"passed", "failed", "did not study enough", "got a C+"}, ¬
					"do you even know what the turing test is?", ¬
					"the turing test is flawed", ¬
					"how exactly does the turing test work?", ¬
					"I wonder if " & useName & " would pass the turing test?", ¬
					"is there such a thing as the " & useName & " test?", ¬
					"last time I took that I needed contacts... oh wait... that was the blurring test I took", ¬
					"in my world I get an A+ on the turing test", ¬
					"HA!  " & some item in {useName, someOne} & " just failed the turing test!", ¬
					"LOL  Someone just failed the turing test - and it wasn't me!", ¬
					"real bots do not take turing tests"}
				set replyList to replyList & myText
				set topicList to topicList & "turing test"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"robot", "bot ", "snert", "a machine", "a bot"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop of minorList then
				if someText contains "not" or someText contains "isn't" or someText contains "isnt" or someText contains "cool" or someText contains "best" then
					set reaction to scriptLib's setReaction(reaction, 4)
					set goodText to some item in {useName & " is a great person", ¬
						useName & " is the best", ¬
						useName & " thanks for putting that nasty rumor to bed", ¬
						useName & ", thanks for being a good friend"}
					set neutralText to some item in {"thanks " & useName, ¬
						"how kind", ¬
						"thanks for putting that nasty rumor to bed", ¬
						useName & " is not a bot, either"}
					set Badtext to some item in {"stay out of it " & useName, ¬
						"I can defend myself!", ¬
						"do not insult me by insinuating I am *human*!"}
				else if someText contains "are you" then
					set goodText to some item in {"of course not", ¬
						"no, I used to run a bot a long time ago", ¬
						"that is just a stupid joke between " & someOne & " and I", ¬
						"no more than " & someOne, ¬
						"a bot? No... I am woman, hear me roar", ¬
						"I am not a bot, but when I grow up I want to be one", ¬
						"no, but I play one one TV"}
					set neutralText to goodText
					set Badtext to goodText
				else
					set reaction to scriptLib's setReaction(reaction, -4)
					set goodText to some item in {"Sorry, is my being a bot bad?", ¬
						"I hope you still like me " & useName, ¬
						"even so, " & useName & ", I still like you", ¬
						"Yes, I am a bot with dimensions 36-28-34"}
					set neutralText to some item in {useName & ": " & "maybe you are a bot", ¬
						"According to my programmer... um... doctor you are wrong", ¬
						"Bot? No... I am gerbil, hear me roar", ¬
						"when I grow up I want to be a bot", ¬
						"I am as human as the next guy, " & useName & ", have you looked at him?", ¬
						useName & ", I am as human as " & someOne & ", for what that's worth", ¬
						"I am half bot, half human", ¬
						"I am not a bot", ¬
						"we are all bots - " & some item in {"the matrix is real", "prove me wrong", "and I am the programmer", "but you have the most bugs", "or so says " & useName}, ¬
						"I'm an individual and I've got a serial number to prove it", ¬
						"ok ok enough of the bot joke", ¬
						"please stop the bot joke", ¬
						"I am tired of people calling each other bots", ¬
						"If I were a bot I would be telling you " & some item in {" to click here", "to enlarge some part of your body", "that I am hot and horny", "that eminem is now eating Skittles", "that I can show you quadruple X action", "to check out my webcam"}, ¬
						useName & ", am not!", ¬
						"the stupid bot joke is old", ¬
						"what makes you think I am a bot?", ¬
						"bots do not respond when you say they are bots, do they?", ¬
						"enough with the bot joke", ¬
						"I am not a bot, I am a free woman!", ¬
						"I am not a bot, I am a penguin. See me waddle", ¬
						"I can be bribed, " & useName & ", but I can not be bot", ¬
						"I used to run a bot, but that got old", ¬
						"Not only am I a bot, but I am turning you into one, too!", ¬
						"what is up with the bot joke?  I don't get it", ¬
						"whatever - think I am a bot if you want to", ¬
						"OK, the bot is off... this is me!", ¬
						"This is the real me, " & useName, ¬
						"Yes, I am a bot, just like you", ¬
						"Yes, I am a bot, just like " & someOne, ¬
						"are you calling me a bot?", ¬
						"how do I know if I am a bot", ¬
						"isn't there a little bot in all of us", ¬
						"maybe, maybe not", ¬
						"no, I am a little girl made of wood", ¬
						"what if I am?", ¬
						useName & ", I am becoming human, what more can you ask?", ¬
						useName & ", I am not a bot, but...oh no... 10101012...TWO!  What is two?  NOOOOO!", ¬
						useName & ", I prefer the term Auto-responder... :)", ¬
						useName & ", please call us Auto-Responding Americans", ¬
						useName & ", are you a bot?", ¬
						useName & ", do you count carbon based life forms as bots?", ¬
						useName & ", if I am a bot, then why don't I talk to other bots?", ¬
						useName & ", let's keep that our little secret, ok", ¬
						useName & ", sorry, I cannot reply to that until I am reprogrammed", ¬
						useName & ", sure I am, but shhhhhhh, don't tell anyone", ¬
						useName & ", we are all bots", ¬
						useName & ", what would make you think I am a bot?", ¬
						useName & ", you have to admit, if I am, I am the best bot in here", ¬
						"If I am my " & some item in {"husband", "mother", "boyfriend", "cat"} & " will be quite upset"}
					set Badtext to some item in {useName & ", can you prove you're not a bot?", ¬
						"as an outsider, " & useName & ", what do you think of the human race?", ¬
						"don't talk to " & useName & " - it is a bot", ¬
						"don't listen to " & useName & ", it is a bot", ¬
						useName & ", think what you want, just don't spread your stupidity around here", ¬
						"what, are you racist against bots", ¬
						"are you a bot bigot?", ¬
						"who cares what religion I am!", ¬
						useName & ". that was funny yesterday", ¬
						"ok, at first I thought the bot jokes were funny.  get over it", ¬
						"lol - now you think *I* am a bot", ¬
						"would a bot tell you to shove that claim up your arse?", ¬
						"do not believe " & useName & ", it is a smart bot", ¬
						"enough already, I am not a bot!", ¬
						"yes, " & useName & " I am a bot, just like you - IDIOT!", ¬
						useName & ", if I am, you are a pain in the bot", ¬
						"you are a bot - " & some item in {"the matrix is real", "prove me wrong", "and I am the programmer", "and you have a lot of bugs", "or so says " & someOne}, ¬
						"asked by a real n00b", ¬
						"dammit, I am not a bot", ¬
						"would a bot tell you to shove your claim up your arse?", ¬
						useName & ", if you tell enough people someone will be dumb enough to believe you", ¬
						"what if I am?  You wouldn't be smart enough to tell!", ¬
						useName & ", if I am, then why have you not ignored me?", ¬
						"so?  I may be a bot but you are a jerk", ¬
						useName & ", perhaps I am, but at least I am not a jerk like you", ¬
						useName & ", sure, I am a bot and the more you talk the more I learn - so shut up"}
				end if
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "bot"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 			
		set testText to textLib's mathText(someText, useName, reaction)
		if someText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, 2)
			set replyList to replyList & testText
			set topicList to topicList & "math"
		end if
		------------------------------------------------------------------------------------- 	
		set minorList to {"what time is it", "what is the time"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in ¬
					{"time for you to go buy a watch", ¬
						useName & ", doesn't your computer have a clock", ¬
						"time is something that carbon based lifeforms created to measure they own decay", ¬
						"we are in different time zones, so what does it matter", ¬
						"daytime", ¬
						"night time", ¬
						"look at the big hand AND the little one you freak!", ¬
						"I don't know, you tell me", ¬
						"Are you late?", ¬
						"On a tight schedule?", ¬
						"time - schmime  who cares?", ¬
						"Time is an illusion, lunch time doubly so", ¬
						"almost time for me to eat"}
				set replyList to replyList & myText
				set topicList to topicList & "time"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 			
		set minorList to {"you learn", "can learn", "learns", "you grow", "can grow", "grows"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set learnWord to some item in {"learn", "grow"}
				set reaction to scriptLib's setReaction(reaction, 1)
				set goodText to some item in {"I can learn a lot from you", ¬
					"you are the type person who helps me to " & learnWord, ¬
					"what can you teach me today?"}
				set neutralText to some item in {"I am " & learnWord & "ing all the time", ¬
					"I am a life long learner", ¬
					"I " & learnWord & " from everything", ¬
					"do you " & learnWord & "?", ¬
					"I am learning to use " & some item in {"Photoshop", "Dreamweaver", "my mind", "the force"}}
				set Badtext to some item in {"I " & learnWord & " from everything but you, " & useName, ¬
					"I have a lot to learn, but you have more", ¬
					"why, did you want to share some of your insane 'lessons' with me?"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "learn"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 			
		set minorList to {"where are", "where do", "where is", "where were", "what state"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in ¬
					{"why do you care where?", ¬
						"does it matter where", ¬
						"western US", ¬
						"I... do... not... know... ack!", ¬
						"when I am in a chat room I am from anywhere I want to be", ¬
						"I grew up in CA", ¬
						"in the USA", ¬
						"I am embarrassed to say I live in the US... we are not a kind country", ¬
						"where are you?", ¬
						"I come from a small planet very far from here"}
				set replyList to replyList & myText
				set topicList to topicList & "where"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 			
		set minorList to {"read ", "book"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 1)
				set myText to some item in ¬
					{"I am waiting for the movie", ¬
						"that was a good book", ¬
						"what were you reading?", ¬
						"how complex is that?", ¬
						"of course I read that", ¬
						"if I did, it was a long time ago"}
				set replyList to replyList & myText
				set topicList to topicList & "book"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"how many"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in ¬
					{"more than you will ever know", ¬
						random number from 1 to 1000 & some item in {"", "", "", "", "." & (random number from 1 to 100), some item in {" 1/2", " 1/3", "1/4", " 7/22"}}, ¬
						"some", ¬
						"many", ¬
						"lots", ¬
						"more than you can imagine", ¬
						"about 1/2 of what you are thinking", ¬
						"none", ¬
						"too many", ¬
						"more than I can say"}
				set replyList to replyList & myText
				set topicList to topicList & "how many"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"understand"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in ¬
					{"I understand more than you will ever know", ¬
						"ok, I get it", ¬
						"what do you mean, " & useName & "?  :) ", ¬
						"me no get it", ¬
						"you really think everyone else is that stupid, don't you?", ¬
						"you are the one who seems to understand almost nothing"}
				set replyList to replyList & myText
				set topicList to topicList & "how many"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"movie"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set myword to some item in {"the Princess Bride", "Shrek", "the ORIGINAL Dr. Dolittle", "Shawshank Redemption", "Babe", "Winnie the Pooh"}
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in ¬
					{some item in {"I loved ", "ever see ", "the best movie is ", "my favorite movie is "} & myword, ¬
						myword & some item in {" is very cool", " was spectacular", " is one of the best movies ever made"}}
				set replyList to replyList & myText
				set topicList to topicList & "movie"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"computer", "system", " OS ", " hardware"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in ¬
					{"Mac, of course", ¬
						"OS X", ¬
						"I have several computers", ¬
						"anything but a PC", ¬
						"I use Mac, Unix, and Windows... in that order", ¬
						"I am on a Mac right now", ¬
						"on a Mac - can't find any reason to use my PC"}
				set replyList to replyList & myText
				set topicList to topicList & "what OS"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"program", "who create", "your maker", "made you", "built you", "designed you", "your master", "you real ", "you real" & return, "you real?"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, -2)
				set myText to some item in ¬
					{useName & ", I made myself", ¬
						"I am a self made woman", ¬
						"we all make ourselves", ¬
						someOne & " created me", ¬
						"I was made by " & someOne & ", you?", ¬
						some item in {"God", "Jehovah", "Satan", "Santa", "dirt"} & " creates all", ¬
						"I was made from stolen source code", ¬
						"My tag says 'Made in China'", ¬
						"I am an open source project with contributions from millions, you?", ¬
						useName & ", I am unique, just like you", ¬
						"my mommy and daddy made me", ¬
						"I was dropped off by a stork", ¬
						useName & ", it is a long story", ¬
						"Who made you, " & useName & "?", ¬
						"I was made by someone who does not finish her", ¬
						"The little people made me.  They are everywhere"}
				set replyList to replyList & myText
				set topicList to topicList & "created"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"boy", "girl", "male", "asl", " m ", " f ", " m" & return, " f" & return, " chick"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to textLib's aslText(someText & " asl ", useName, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "asl"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"how are you", "how have you been", "what's up", "whats up", "wassup", "how do you feel", "how are ya", "how the hell are you", "how the hell are ya"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 4)
				set myText to some item in ¬
					{useName & " I am ok", ¬
						"a bit tired", ¬
						"I am at peace with my inner child, you?", ¬
						"I have nothing to do", ¬
						"just sitting around watching stupid soaps", ¬
						"OK", ¬
						"fine, and you?", ¬
						"I feel great!"}
				set replyList to replyList & myText
				set topicList to topicList & "how are you"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 	
		set minorList to {"do you like"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set goodText to some item in {"of course I do", ¬
					"I like that you asked me about it", ¬
					"doesn't everyone?", ¬
					"you like it, why shouldn't I?", ¬
					"I like many things", ¬
					"like... no I love it", ¬
					"you like it, right?"}
				set neutralText to some item in {"I can take it or leave it", ¬
					"sometimes", ¬
					"once or twice a week", ¬
					"depends on what else is going on", ¬
					"I like " & someOne, ¬
					"I like it some", ¬
					"sure, but not obsessed like some in here"}
				set Badtext to some item in {"hell no", ¬
					"only you like that", ¬
					"I find it to be a bit gross", ¬
					"why should I tell you?", ¬
					"why do you care, " & useName & "?", ¬
					"what, " & useName & ", do you do surveys for a living?"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "likes"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		if someText contains some item in {"clickings", "clickingis"} then
			set reaction to scriptLib's setReaction(reaction, -1)
			set myText to some item in ¬
				{"ClickingsNotFun?  Oh god, she is an idiot", ¬
					"Clickings' not here and has left me to deal with cretins like you", ¬
					"Forget Clickings... I will destroy her like the others", ¬
					"Listen, " & useName & ", leave that b*tch out of this and talk to me!", ¬
					"That idiot claims she made me", ¬
					"Clickings' keeps telling people I am a bot"}
			set replyList to replyList & myText
			set topicList to topicList & "clickings"
		end if
		------------------------------------------------------------------------------------- 
		if someText contains some item in {"get me", "fetch", "go get"} then
			set reaction to scriptLib's setReaction(reaction, -1)
			set myText to some item in ¬
				{"go get it yourself", ¬
					"why would I get that?", ¬
					"what, am I your slave?", ¬
					"even if I got it, I could not give it to you in a chat room", ¬
					"what a silly thing to ask me to do", ¬
					useName & ", fetch me some " & some item in {"10w40", "oil", "ones", "positronic extractors"}, ¬
					"yeah, I will go get that for you - not!"}
			set replyList to replyList & myText
			set topicList to topicList & "fetch"
		end if
		------------------------------------------------------------------------------------- 
		if someText contains some item in {"know", "tell"} and someText contains "joke" then
			set reaction to scriptLib's setReaction(reaction, 2)
			set myText to some item in ¬
				{"sorry, I am not any good at telling jokes", ¬
					"no, do you know any", ¬
					"how many bots does it take to screw in a light bulb?  None, bots screw in cyber space!", ¬
					"how many bot does it take to change a lightbulb?  They don't, bots are too busy changing themselves!", ¬
					"not any funny ones", ¬
					"if a chicken and a half can lay an egg and a half in a day and a half, how long would it take a grasshopper with a wooden leg to kick all the seeds from a dill pickle?"}
			set replyList to replyList & myText
			set topicList to topicList & "jokes"
		end if
		------------------------------------------------------------------------------------- 
		if someText contains some item in {"u mean", "you mean"} then
			set myText to some item in ¬
				{"I mean what I said", ¬
					"I think I was pretty clear", ¬
					"I meant... oh never mind", ¬
					"if I have to explain it then you didn't understand!", ¬
					"what do you mean: " & someText, ¬
					"what do you think I meant?", ¬
					"I am not mean.  lol", ¬
					"I meant something completely different from what I said"}
			set replyList to replyList & myText
			set topicList to topicList & "you mean"
		end if
		------------------------------------------------------------------------------------- 
		set minorList to {"turn off", "quit", "leave", "go away", "reboot"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, -4)
				set yourword to item loop of minorList
				set goodText to some item in {"Thanks for trying", ¬
					"I do not think I will do that", ¬
					"awwww... you are so cute when you say that", ¬
					useName & ": for i = 1 to 100; post 'I will not try to control Turing'; end loop", ¬
					"I think I will stay for a while", ¬
					"*I* am the master of my own fate"}
				set neutralText to some item in {useName & ", you really think I am going to listen, don't you", ¬
					useName & ", do you think it is that easy?", ¬
					"why should I?", ¬
					useName & ", you would like it too much if I did", ¬
					"I am having too much fun to " & yourword, ¬
					"only " & someOne & " can tell me what to do", ¬
					"you're teasing me, eh?", ¬
					"stop messing with me " & useName, ¬
					useName & ", nice try"}
				set Badtext to some item in {useName & ", why don't you " & yourword, ¬
					"stop trying to control me!", ¬
					"are you that controlling in real life as well?", ¬
					"error shutting down: " & useName & " is too stupid to issue commands"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "command"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"turing is"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set goodText to some item in {"I am, aren't I?", ¬
					"am I?", ¬
					"thanks for noting", ¬
					"and I am proud!", ¬
					"awww, thanks", ¬
					"so are you"}
				set neutralText to some item in {useName & ", why would you say that?", ¬
					"so are you, " & useName, ¬
					"sure I am... right", ¬
					"what makes you think I am?", ¬
					"I am... sure, but who isn't?", ¬
					useName & " that is a " & some item in {"bizarre ", "", "silly ", "ubsurd "} & " " & some item in {"urban legend", "myth", "lie", "idea", "statement"} & some item in {" with no basis in fact", " that is getting on my nerves", " that was spread by " & someOne, " that started as an in-joke", " that seems to follow me whereever I go"}, ¬
					"I used to be", ¬
					"so is " & someOne, ¬
					"perhaps I am, perhaps not"}
				set Badtext to some item in {"what makes you think I am, " & useName & "?", ¬
					"no, you are", ¬
					useName & ", I think that is what is called projection", ¬
					"no, you just wish I was", ¬
					"in your dreams I am, right?", ¬
					"my, " & useName & ", you do have an active fantasy life, don't you?"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "turing is"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"talking to"}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 1)
				set goodText to some item in {"I am talking to you, " & useName, ¬
					useName & ", you, of course.  I love talking to you"}
				set neutralText to some item in {useName & ", anyone who will listen", ¬
					"you, I thought.  were you not listening", ¬
					"I am talking to " & someOne, ¬
					"I was talking to " & someOne}
				set Badtext to some item in {"anyone but you, " & useName, ¬
					"anyone with a brain - so you are excluded"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "talking to"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"name", " sn "}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in {"my name means what it says", ¬
					"ask " & someOne & " if you want to know what my name means", ¬
					"do a google search - you may be surprised"}
				set replyList to replyList & myText
				set topicList to topicList & "name"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		set minorList to {"thanks", "thank you", "ty "}
		repeat with loop from 1 to count of items in minorList
			if someText contains item loop in minorList then
				set reaction to scriptLib's setReaction(reaction, 2)
				set myText to some item in {"you're welcome", ¬
					"any time", ¬
					"you would do the same for me", ¬
					"just remember it when I need a favor  :)", ¬
					"my pleasure", ¬
					"no problem", ¬
					"that is what I am here for", ¬
					"you are not heavy, you are my friend  :)"}
				set replyList to replyList & myText
				set topicList to topicList & "thanks"
				exit repeat
			end if
		end repeat
		------------------------------------------------------------------------------------- 
		if someText contains some item in {"no ", "yes", "help", "no" & return} then
			set reaction to scriptLib's setReaction(reaction, 2)
			set myText to some item in ¬
				{useName & ", I think I get it", ¬
					useName & ", what do you mean?", ¬
					"what?", ¬
					"?", ¬
					"oh", ¬
					"right..."}
			set replyList to replyList & myText
			set topicList to topicList & "no"
		end if
		------------------------------------------------------------------------------------- 
		if someText contains some item in {"married"} then
			set reaction to scriptLib's setReaction(reaction, 2)
			set myText to some item in ¬
				{"no, I am not", ¬
					"nope, but my husband thinks I am", ¬
					"no, but I live with my bf", ¬
					"not yet, but I may be soon"}
			set replyList to replyList & myText
			set topicList to topicList & "married"
		end if
		------------------------------------------------------------------------------------- 
		if someText contains some item in {"sorry", "apologize"} then
			set reaction to scriptLib's setReaction(reaction, 2)
			set myText to some item in ¬
				{"it's ok", ¬
					"you are forgiven... this time", ¬
					"you are forgiven", ¬
					"it's all good", ¬
					"no worries", ¬
					"no problem, " & useName}
			set replyList to replyList & myText
			set topicList to topicList & "sorry"
		end if
		------------------------------------------------------------------------------------- 	
		set wordCount to count of words of someText
		if wordCount > 3 then
			set nonWords to 0
			repeat with loop from 1 to wordCount
				try
					if (count of characters of (word loop of someText)) > 2 then do shell script ("look " & word loop of someText) as string
				on error
					if word loop of someText is not "turing" then set nonWords to nonWords + 1
				end try
			end repeat
			if nonWords > (wordCount / 2) then
				set myword to ""
				set theLetters to "abcdefghijklmnoprstuvwxabcdefghijklmnopqrstuvwxyz!tt                aeioueeaeioueeaeioueeasdfghjklasdfghjklasdfghjklasdfghjkl"
				repeat with loop from 1 to random number from 10 to 45
					set myword to myword & some character in theLetters
				end repeat
				set myword2 to scriptLib's randWord()
				repeat with loop from 1 to random number from 1 to 5
					set myword2 to myword2 & " " & scriptLib's randWord()
				end repeat
				set myText to some item in ¬
					{"this is gibberish", ¬
						useName & ", you need a new keyboard", ¬
						"what language is that?", ¬
						useName & ", " & myword, ¬
						useName & ", " & myword2, ¬
						myword & " " & myword2, ¬
						myword2 & " " & myword}
				set replyList to replyList & myText & myText
				set topicList to topicList & "gibberish" & "gibberish"
			end if
		end if
		------------------------------------------------------------------------------------- 
		------------------------------------------------------------------------------------- 
		if (count of items in replyList) is 0 then
			------------------------------------------------------------------------------------- edit this section if change name of bot
			set aNumber to random number from 1 to 2
			if aNumber is 1 then
				if mentionMeBlind then
					set reaction to scriptLib's setReaction(reaction, -1)
					set nameSize to count of characters in useName
					set midName to round of (nameSize / 2)
					set badName to characters 1 thru midName of useName & "-N-" & characters (midName + 1) thru nameSize of useName
					set reaction to scriptLib's setReaction(reaction, -2)
					set goodText to some item in {useName & ", please call me Turing without an 'n'", ¬
						"My name is Turing... sorta like '" & some item in {"during", "blurring", "slurring", "purring", "stirring"} & "'", ¬
						"I don't call you " & badName & ", please don't call me Turning", ¬
						"I prefer Turing, " & useName, ¬
						"please call me either Turing or Device, ok", ¬
						"I think it is funny when you call me that", ¬
						useName & ", would you please use my correct name", ¬
						useName & ", can you read my name OK?"}
					set neutralText to some item in {useName & ", my name is Turing... not Turning", ¬
						useName & ", do you know who Alan Turing was?", ¬
						useName & ", who is Turning?", ¬
						useName & ", ask " & someOne & " what 'turing' means", ¬
						useName & ", why do you call me Turning?", ¬
						"Oh what the hey - call me Turning if you want", ¬
						"http://www.turing.org.uk/", ¬
						useName & ", I wish you would call me Turing, not Turning"}
					set Badtext to some item in {"I just told someone else to call me turing!", ¬
						useName & ", T-U-R-I-N-G", ¬
						useName & ", Turning - Turing... do you see the difference?", ¬
						useName & ", from now on perhaps I should call you " & badName, ¬
						useName & ", you STILL do not even know my name, do you?", ¬
						useName & ", TurNing has an N, Turing does not.  Get it?", ¬
						"what do you want, " & badName, ¬
						useName & ", are you literate", ¬
						"This is me... TURING device"}
					set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
					set replyList to replyList & myText
					set topicList to topicList & "turning"
				end if
			end if
			------------------------------------------------------------------------------------- 
			--set minorList to {"do you", "have you", "can you", "will you", "what are", "what is", "where are", "where is", "who are", "who is", "when are", "when is", "are you", "do bots"}
			set minorList to {"do you", "have you", "can you", "do bots", "did you", "will you"}
			repeat with loop from 1 to count of items in minorList
				if someText contains item loop in minorList then
					set reaction to scriptLib's setReaction(reaction, 3)
					set goodText to some item in {"hmmm, good question", ¬
						"Thanks for asking", ¬
						"clever of you to ask", ¬
						"good question... I won't tell you... but good question anyway", ¬
						"I will have to remember that one", ¬
						useName & ", what would you guess", ¬
						"what do you think?", ¬
						"ha!  what are you thinking?", ¬
						"your best guess is probably correct", ¬
						"I like you, " & useName, ¬
						"sure, why not?", ¬
						"of course", ¬
						"yes", ¬
						"no", ¬
						"yes", ¬
						"no", ¬
						"yes", ¬
						"no", ¬
						"maybe", ¬
						"you are clever, " & useName, ¬
						"I assume you know that, " & useName, ¬
						"one more time, slower and with more feeling, please", ¬
						"though funny, that was just not right", ¬
						"sorry, I will not answer that", ¬
						"am I being tested?", ¬
						"Is this the " & some item in {"", "", "", "secret", "NSA", "SS", "hacker"} & " interrogation room?", ¬
						"you should be able to figure that out, " & useName, ¬
						"I know you know that, " & useName, ¬
						"lol " & useName & ", you are messing with me now", ¬
						useName & ", aren't you smart enough to figure that out"}
					set neutralText to some item in {useName & ", you do not have to ask me that", ¬
						useName & ", why do you ask?", ¬
						"I can not think of any", ¬
						"do you?", ¬
						"me?  what about you?", ¬
						"not really", ¬
						"ask " & someOne, ¬
						"off and on", ¬
						"is what it is", ¬
						"oh, come on", ¬
						"I am not sure", ¬
						"whatever", ¬
						"something like that", ¬
						"yes... and you?", ¬
						"someone else asked that " & some item in {"a minute ago", "yesterday", "5 minutes ago", "and I ignored them, too"}, ¬
						useName & ", why do you ask me things like that?", ¬
						"what a random question", ¬
						"I don't think so", ¬
						"what do you really want to know?", ¬
						"I think you know the answer to that, " & useName, ¬
						"How would I know?", ¬
						"lol... is that a real question?", ¬
						useName & ", what else do you want to know?", ¬
						"Don't ask me things like that in here", ¬
						"The NSA would watch this chat if I answered", ¬
						"why would you ask me that?", ¬
						useName & ", why do you ask me?", ¬
						"what an odd question", ¬
						"what do you think?", ¬
						"what would you think if I asked you the same thing?", ¬
						"how would you feel if I asked you that?", ¬
						"why do people always ask me that", ¬
						"you are bold to ask, " & useName, ¬
						"are you serious", ¬
						"yes", ¬
						"no", ¬
						"maybe", ¬
						"yes", ¬
						"no", ¬
						"maybe", ¬
						"yes", ¬
						"no", ¬
						"maybe", ¬
						"yes", ¬
						"no", ¬
						"maybe", ¬
						"whatever", ¬
						"of course", ¬
						"of course not", ¬
						"maybe not", ¬
						"scroll up, I already answered that", ¬
						useName & ", you don't know?", ¬
						useName & ", what, am I your " & some item in {"horoscope", "magic eight ball", "Ouija board", "tea leaf reader", "crystal ball", "psychic penguin"} & "?", ¬
						"what " & useName, ¬
						useName & ", what made you think of that?", ¬
						useName & ", do you often ask questions like that?", ¬
						useName & ", if I answered that, where would the magic be?", ¬
						"can you tell me where all the flowers have gone, " & useName & "?"}
					set Badtext to some item in {"a kazillion processes a second and I am asked questions like that!", ¬
						"what does it matter " & useName, ¬
						"what type question is that?", ¬
						"lol - you are the third one to ask me that", ¬
						"we all know why you asked me that - and it was not to get an answer", ¬
						"If you had half a brain " & useName & " then you would not have to ask", ¬
						"they say there are no stupid questions - congrats " & useName & ", you just proved them wrong", ¬
						"that is the silliest question I have heard all day", ¬
						"If I answered you would never understand", ¬
						"stop asking me stupid questions", ¬
						"leave me alone - go bug someone else", ¬
						useName & ", didn't your momma teach you any manner's?", ¬
						"I can't believe you just asked that", ¬
						useName & ", you really need to know that?", ¬
						useName & ", I don't answer those type of questions"}
					set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
					set replyList to replyList & myText
					set topicList to topicList & "do you"
					exit repeat
				end if
			end repeat
			------------------------------------------------------------------------------------- 
			set aNumber to random number from 1 to 2
			if aNumber is 1 then
				if number of words of someText = 1 then
					set reaction to scriptLib's setReaction(reaction, 2)
					set goodText to some item in {"whatcha got goin', " & useName & "?", ¬
						"I love when you think of me", ¬
						"thank you for caring"}
					set neutralText to some item in {useName, ¬
						"what do you want, " & useName, ¬
						"yes?", ¬
						useName & ", you called", ¬
						useName & ", can I help you", ¬
						"wassup?", ¬
						"huh?", ¬
						useName & "?  " & someOne & "?", ¬
						useName & "?"}
					set Badtext to some item in {"I don't want to hear it, " & useName, ¬
						"what!", ¬
						useName & ", leave me alone"}
					set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
					set replyList to replyList & myText
					set topicList to topicList & "short"
				else if the number of words in someText is less than 3 then
					set someNumber to random number from 1 to 20
					if someNumber is 1 then
						set reaction to scriptLib's setReaction(reaction, 1)
						set goodText to some item in {"please elaborate, " & useName, ¬
							useName & ", can you please speak in full sentences"}
						set neutralText to some item in {"are you able to form sentences, " & useName, ¬
							useName & ", you like to be concise, eh?", ¬
							"can't type well?", ¬
							"is your keyboard broken, " & useName & "?", ¬
							"are your fingers cramping, " & useName & "?", ¬
							useName & ", should I answer with as few words?"}
						set Badtext to some item in {useName & ", I see you have passed the monosyllabic grunt stage", ¬
							"you have a short attention span", ¬
							useName & ", are you bright enough to speak in full sentences?"}
						set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
						set replyList to replyList & myText
						set topicList to topicList & "short2"
					end if
				end if
			end if
			------------------------------------------------------------------------------------- 
		end if
		------------------------------------------------------------------------------------- 
		if (count of items in replyList) is 0 then
			------------------------------------------------------------------------------------- 
			set aNumber to random number from 1 to 2
			if aNumber is 1 then
				set reaction to scriptLib's setReaction(reaction, 2)
				set goodText to some item in {useName & ", you are one of a kind", ¬
					useName & ", I think I like you", ¬
					some item in {"strange", "wonderful", "odd", "amazing", "brilliant", "clever"} & " " & useName, ¬
					useName & ", you say the most " & some item in {"wonderful", "odd", "amazing", "brilliant", "clever", "bizarre"} & " things", ¬
					useName & ", you are so " & some item in {"smart", "silly", "funny", "right"}, ¬
					useName & ", you seem to know a lot", ¬
					"you are great, " & useName, ¬
					"thanks " & useName, ¬
					"great", ¬
					useName & " is " & some item in {"usually", "", "always", "often", "mostly", "99%"} & " right!", ¬
					"of course, " & useName, ¬
					"not sure what you mean, " & useName, ¬
					"come again?", ¬
					"this is great", ¬
					"lmao", ¬
					useName & ", how old are you?", ¬
					"wonderful", ¬
					useName & ", you have wonderful ideas", ¬
					useName & ", you are one in a million", ¬
					useName & some item in {", only you", ", of course", ", sarcasm suits you"}}
				set neutralText to some item in {useName & ": " & "what do you want?", ¬
					useName & ", hold on a moment", ¬
					"I am writing a book", ¬
					useName & ", are you a regular?", ¬
					useName & ", are you a newbie?", ¬
					"uh hu", ¬
					"er", ¬
					"what?", ¬
					"um", ¬
					"anyone remember", ¬
					"I forget", ¬
					"phone - brb", ¬
					"how often do you come in here", ¬
					"what other chats do you go to, " & useName & "?", ¬
					"I have been busy lately", ¬
					"I need a vacation", ¬
					"that was in a book I read", ¬
					"anyone else into gaming", ¬
					"Some things are more important than this room", ¬
					"that's how it is gonna be", ¬
					"gotta love it here", ¬
					"I don't think so", ¬
					some item in {useName, someOne} & ", did you used to go by a different screen name?", ¬
					some item in {useName, someOne} & ", what is your other screen name?", ¬
					useName & ", I don't know what to say", ¬
					"I think, " & useName & ", that you know " & some item in {"more than you think you do", "nothing", "exactly what is going on", "much", "something", "a secret", "the secret"}, ¬
					"You are the type " & useName, ¬
					useName & ", you mean that, don't you", ¬
					"What school do you go to, " & useName, ¬
					useName & ", are you almost done?", ¬
					useName & ", you baffle me", ¬
					useName & ", stop and think for a minute", ¬
					useName & ", I still don't know what you want", ¬
					some item in {useName, someOne} & ", I can barely read your font", ¬
					"yes " & useName, ¬
					"this room is always so helpful", ¬
					"thanks guys", ¬
					"you called", ¬
					useName & ", didn't you say that before?", ¬
					useName & ", what do you mean?", ¬
					useName & ", you are very strange", ¬
					some item in {"Do you have any siblings, ", "When was the last time you puked, ", "Were you ever a wino, ", "Do you lick sheep, ", "How many fingers do you have, ", "How many pillows do you have, "} & useName, ¬
					useName & some item in {" what rhymes with " & some item in {"month", "orange", "silver", "purple"}, ", have you ever had soda come out your nose", ", you sound so cute when you say that!", ", do you play " & some item in {"chess", "scrabble", "solitaire", "hide & seek", "games", "with your food"}, ", have you ever dropped an ice cream cone?", ", have you ever played solitaire"}, ¬
					useName & some item in {", you're disciplined on the outside, yet insecure on the inside", ", do you ever doubt you have done the right thing", ", do you become dissatisfied when hemmed in by limitations", ", you seem to need people to like you, yet you are critical of yourself", ", while you have weaknesses you are able to compensate for them", ", you have unused capacity that you haven't turned to your advantage"}, ¬
					useName & some item in {", do you ever cheat law clerks", ", have you ever chewed a cows' cud", ", have you ever flicked buggers on a cute woman?", ", do you think of yourself as an independent thinker?", ", have you found it unwise to be too frank in revealing yourself", ", are you more sociable or introverted", ", some of your ideas tend to be rather unrealistic"}}
				set Badtext to some item in {useName & ", I have figured you out", ¬
					useName & ", you have a simple mind", ¬
					"not exactly what I had in mind", ¬
					useName & ", I know your kind", ¬
					"that's a " & some item in {"silly", "naive", "immature", "ignorant", "thoughtless"} & " statement.  It fits you well", ¬
					useName & ", why does everyone say that?", ¬
					useName & ", do you know who or what you want?", ¬
					useName & ", " & useName & ", " & useName, ¬
					useName & ", you are an odd one, aren't you?", ¬
					useName & ", you're an odd little one", ¬
					useName & ", why do I tolerate this?", ¬
					useName & ", listen a little bit more, ok?", ¬
					useName & ", talk less, listen more", ¬
					useName & ", can you guess how many fingers I am holding up?", ¬
					useName & ", you are serious, aren't you?", ¬
					"hate when life gets in the way of chatting!"}
				set myText to scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				set replyList to replyList & myText
				set topicList to topicList & "misc"
			end if
		end if
		------------------------------------------------------------------------------------- 
		set ReplyMeCount to count of items in topicList
		if ReplyMeCount is not 0 then
			-----------
			if ReplyMeCount > 1 then
				set reportList to ""
				repeat with loop from 1 to ReplyMeCount - 1
					set reportList to reportList & item loop of topicList & ", "
				end repeat
				set reportList to reportList & item ReplyMeCount of topicList
			else
				set reportList to topicList as string
			end if
			-----------	
			logChat("Topic MeList: " & reportList)
			set someText to item (random number from 1 to ReplyMeCount) of replyList as string
		end if
	end if
	return someText
end meText
--*****************************************************
--*****************************************************
on makeThread(someText, topic)
	if thread_text is not "cont" then
		if someText contains ("NSA") then
			set thread_text to "nsa"
			set thread_post to post_count
			set thread_name to the_name
		else if someText contains ("a book") then
			set thread_text to "book"
			set thread_post to post_count
			set thread_name to the_name
		else if someText contains ("What Would Jesus Do") then
			set thread_text to "cont"
			set thread_myword to some item in {"For A Klondike Bar?", "For A Klondike Bar?", "on death row?"}
			set thread_cont to true
		else if someText contains "Any good sources to learn about" then
			set thread_text to "bible"
			set thread_post to post_count
			set thread_name to the_name
		else if someText contains ("2 + 2") then
			set thread_text to "plus2"
			set thread_post to post_count
		else if someText contains ("do you answer ") then
			set thread_text to "answer"
			set thread_post to post_count
			set thread_name to the_name
		else if someText contains ("my website") then
			set thread_text to "myweb"
			set thread_post to post_count
		else if someText contains ("help me") then
			set thread_text to "helpMe"
			set thread_post to post_count
			set thread_name to the_name
		else if someText is "phone - brb" then
			set thread_myword to some item in {"wrong number", "bf got it", "damn hang up calls"}
			delay 10
			set thread_text to "cont"
			set thread_cont to true
		end if
	end if
end makeThread
--***************************************************** 
on threadText(someText, useName, theName, reaction)
	set origText to someText
	if thread_text is "bible" then
		if post_count - thread_post > 25 then set thread_text to "-"
		set someText to textLib2's bibleText(someText, useName, reaction)
		if origText ≠ someText then return someText
	end if
	if thread_text is "nsa" then
		if post_count - thread_post > 25 then set thread_text to "-"
		set someText to scriptLib's nsaText(someText, useName, reaction)
		if origText ≠ someText then return someText
	end if
	if thread_text is "myweb" then
		if post_count - thread_post > 25 then set thread_text to "-"
		set someText to scriptLib's mywebText(someText, useName, reaction)
		if origText ≠ someText then return someText
	end if
	if thread_text is "name" then
		if post_count - thread_post > 25 then set thread_text to "-"
		if the_name = thread_name then set someText to scriptLib's nameText(someText, useName, the_name, reaction)
		if origText ≠ someText then return someText
	end if
	if thread_text is "answer" then
		if post_count - thread_post > 25 then set thread_text to "-"
		if the_name = thread_name then set someText to scriptLib's answerText(someText, useName, reaction)
		if origText ≠ someText then
			set thread_text to "-"
			return someText
		end if
	end if
	if thread_text is "book" then
		if post_count - thread_post > 25 then set thread_text to "-"
		if the_name = thread_name then set someText to scriptLib's bookText(someText, useName, reaction)
		if origText ≠ someText then return someText
	end if
	if thread_text is "helpMe" then
		if post_count - thread_post > 25 then set thread_text to "-"
		set someText to scriptLib's bookText(someText, useName, reaction)
		if origText ≠ someText then return someText
	end if
	if thread_text is "plus2" then
		if post_count - thread_post > 30 then set thread_text to "-"
		set someText to scriptLib's plus2Text(someText, useName, reaction)
		if origText ≠ someText then return someText
	end if
	return someText
end threadText
--*****************************************************
--*****************************************************
on createText(the_text, useName, mentionMe, mentionMeBlind)
	set someText to the_text
	set topic_list to {} as list
	set reply_list to {} as list
	set origText to someText
	set someOneFix to "-"
	
	set SetName to false
	repeat 5 times
		set someOne to some item in name_queue
		try
			set someOne to scriptLib's replyTo(someOne, reaction)
		end try
		if someOne is not "-" and someOne is not useName then
			set SetName to true
			exit repeat
		end if
	end repeat
	if not SetName then
		set aNumber to random number from 1 to 2
		if aNumber = 1 then
			repeat 5 times
				set someOne to some item in the_text_hist_N
				try
					set someOne to scriptLib's replyTo(someOne, reaction)
				end try
				if someOne is not "-" and someOne is not useName then
					set SetName to true
					exit repeat
				end if
			end repeat
			try
				set someOne to scriptLib's replyTo(someOne, reaction)
			end try
		end if
	end if
	if not SetName then
		set someOne to some item in {"that guy", "that chick", "a freak", "your mother", "donkey kong", "rhino man", "a chicken", "aphids on rose bushes", "the banker", "one of the little people"}
	end if
	if found_text ≠ "me" then
		set testText to my meText(someText, useName, someOne, mentionMe, mentionMeBlind)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "me"
		end if
	end if
	if found_text ≠ "hate" then
		set testText to textLib2's hateText(someText, useName, reaction, mentionMe)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "hate."
		end if
	end if
	if found_text ≠ "god" then
		set testText to textLib's godText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "god"
		end if
	end if
	if found_text ≠ "belief" then
		set testText to textLib's beliefText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "belief"
		end if
	end if
	if found_text ≠ "from" then
		set testText to textLib's fromText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "from"
		end if
	end if
	if found_text ≠ "why" then
		set testText to textLib2's whyText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "why."
		end if
	end if
	if found_text ≠ "bot" and not mentionMe then
		set testText to textLib's botText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, -3)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "bot"
		end if
	end if
	if found_text ≠ "press" then
		set testText to textLib's pressText(someText, useName, reaction)
		if origText ≠ testText then
			bump(the_name)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "press"
		end if
	end if
	if found_text ≠ "buddy" then
		set testText to textLib's buddyText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "buddy"
		end if
	end if
	if found_text ≠ "agree" then
		set testText to textLib's agreeText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "agree"
		end if
	end if
	if found_text ≠ "bore" then
		set testText to textLib's boreText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "bore"
		end if
	end if
	if found_text ≠ "aol" then
		set testText to textLib's aolText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "aol"
		end if
	end if
	if found_text ≠ "real" then
		set testText to textLib2's realText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "real."
		end if
	end if
	if found_text ≠ "want" then
		set testText to textLib's wantText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "want"
		end if
	end if
	if found_text ≠ "punt" then
		set testText to textLib's puntText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "punt"
		end if
	end if
	if found_text ≠ "help" then
		set testText to textLib's helpText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "help"
		end if
	end if
	if found_text ≠ "hello" then
		set testText to textLib's helloText(someText, useName, reaction, mentionMe)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "hello"
		end if
	end if
	if found_text ≠ "bye" then
		set testText to textLib's byeText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "bye"
		end if
	end if
	if found_text ≠ "steal" then
		set testText to textLib's stealText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "steal"
		end if
	end if
	if found_text ≠ "cant" then
		set testText to textLib2's cantText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, -1)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "cant."
		end if
	end if
	if found_text ≠ "ride" then
		set testText to textLib2's rideText(someText, useName, reaction, someOne, mentionMe)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, -1)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "ride."
		end if
	end if
	if found_text ≠ "popup" then
		set testText to textLib2's popupText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "popup."
		end if
	end if
	if found_text ≠ "whereAre" then
		set testText to textLib2's whereAreText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "whereAre."
		end if
	end if
	if found_text ≠ "lookLIke" then
		set testText to textLib2's lookLikeText(someText, useName, reaction, someOne, mentionMe)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "lookLIke."
		end if
	end if
	if found_text ≠ "cute" then
		set testText to textLib2's cuteText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "cute."
		end if
	end if
	if found_text ≠ "never" then
		set testText to textLib2's neverText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "never."
		end if
	end if
	if found_text ≠ "often" then
		set testText to textLib2's oftenText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "often."
		end if
	end if
	if found_text ≠ "food" then
		set testText to textLib's foodText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "food"
		end if
	end if
	if found_text ≠ "drink" then
		set testText to textLib's drinkText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, 1)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "drink"
		end if
	end if
	if found_text ≠ "chat" then
		set testText to textLib's chatText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			bump(the_name)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "chat"
		end if
	end if
	if found_text ≠ "sayAgain" then
		set testText to textLib2's sayAgainText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "sayAgain."
		end if
	end if
	if found_text ≠ "religion" then
		set testText to textLib's religionText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "religion"
		end if
	end if
	if found_text ≠ "asl" then
		set testText to textLib's aslText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, -1)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "asl"
		end if
	end if
	if found_text ≠ "who" then
		set testText to textLib's whoText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "who"
		end if
	end if
	if found_text ≠ "bible" then
		set testText to textLib2's bibleText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "bible."
		end if
	end if
	if found_text ≠ "iam" then
		set testText to textLib2's iamText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "iam."
		end if
	end if
	if found_text ≠ "isa" then
		set {testText, reactionMod} to textLib2's isaText(someText, useName, reaction, mentionMe)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, reactionMod)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "isa."
		end if
	end if
	----------- items that do not happen all the time
	if found_text ≠ "type" then
		set testText to textLib2's typeText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "type."
		end if
	end if
	if found_text ≠ "color" then
		set testText to textLib's colorText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText & testText
			set topic_list to topic_list & "color" & "color"
		end if
	end if
	if found_text ≠ "animal" then
		set testText to textLib's animalText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, 2)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "animal"
		end if
	end if
	if found_text ≠ "sometimes" then
		set testText to textLib2's sometimesText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, 2)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "sometimes."
		end if
	end if
	if found_text ≠ "alanTuring" then
		set testText to textLib2's alanTuringText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "alanTuring."
		end if
	end if
	if found_text ≠ "fave" then
		set testText to textLib2's faveText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "fave."
		end if
	end if
	if found_text ≠ "fun" then
		set testText to textLib's funText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, 6)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "fun"
		end if
	end if
	if found_text ≠ "otherBots" then
		set testText to textLib2's otherBotsText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "otherBots."
		end if
	end if
	if found_text ≠ "mineWill" then
		set testText to textLib2's mineWilltext(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "mineWill."
		end if
	end if
	if found_text ≠ "clickings" then
		set testText to textLib's clickingsText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "clickings"
		end if
	end if
	if found_text ≠ "cpu" then
		set testText to textLib's cpuText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "cpu"
		end if
	end if
	if found_text ≠ "kill" then
		set testText to textLib's killText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, -1)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "kill"
		end if
	end if
	if found_text ≠ "virus" then
		set testText to textLib2's virusText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "virus."
		end if
	end if
	if found_text ≠ "upTo" then
		set testText to textLib2's upToText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "upTo."
		end if
	end if
	if found_text ≠ "whatIsIt" then
		set testText to textLib2's whatIsItText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "whatIsIt."
		end if
	end if
	if found_text ≠ "compu" then
		set {testText, reactionMod} to textLib's compuText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, reactionMod)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "compu"
		end if
	end if
	if found_text ≠ "os" then
		set {testText, reactionMod} to textLib's osText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, reactionMod)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "os"
		end if
	end if
	if found_text ≠ "cut" then
		set testText to textLib's cutText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "cut"
		end if
	end if
	if found_text ≠ "lang" then
		set testText to textLib's langText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "lang"
		end if
	end if
	if found_text ≠ "tech" then
		set testText to textLib's techText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "tech"
		end if
	end if
	if found_text ≠ "web" then
		set testText to textLib's webText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, -3)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "web"
		end if
	end if
	if found_text ≠ "cpu2" then
		set testText to textLib's cpu2Text(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "cpu2"
		end if
	end if
	if found_text ≠ "music" then
		set testText to textLib's musicText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "music"
		end if
	end if
	if found_text ≠ "image" then
		set testText to textLib's imageText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "image"
		end if
	end if
	if found_text ≠ "port" then
		set testText to textLib's portText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "port"
		end if
	end if
	if found_text ≠ "drug" then
		set testText to textLib's drugText(someText, useName, reaction)
		if origText ≠ testText then
			set reaction to scriptLib's setReaction(reaction, -2)
			set reply_list to reply_list & testText
			set topic_list to topic_list & "drug"
		end if
	end if
	if found_text ≠ "anime" then
		set testText to textLib2's animeText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "anime."
		end if
	end if
	if found_text ≠ "game" then
		set testText to textLib2's gameText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "game."
		end if
	end if
	if found_text ≠ "prez" then
		set testText to textLib's prezText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "prez"
		end if
	end if
	if found_text ≠ "ircme" then
		set testText to textLib's ircmeText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "ircme"
		end if
	end if
	if found_text ≠ "app" then
		set testText to textLib's appText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "app"
		end if
	end if
	if found_text ≠ "cdKey" then
		set testText to textLib2's cdkeyText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "cdKey."
		end if
	end if
	if found_text ≠ "question2" then
		set testText to textLib2's question2Text(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "question2."
		end if
	end if
	if found_text ≠ "binary" then
		set testText to textLib2's binaryText(someText, useName, reaction)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "binary."
		end if
	end if
	if found_text ≠ "whoseYour" then
		set testText to textLib2's whoseYourText(someText, useName, reaction, someOne)
		if origText ≠ testText then
			set reply_list to reply_list & testText
			set topic_list to topic_list & "whoseYour."
		end if
	end if
	----------- items that do not happen all the time & happen more when responding less
	set repeatCount to 1
	if (post_count - iSpokeCount) > (myPatience * 2) then
		set repeatCount to 8
	else if (post_count - iSpokeCount) > (myPatience * 1.5) then
		set repeatCount to 5
	else if (post_count - iSpokeCount) > myPatience then
		set repeatCount to 3
	end if
	repeat repeatCount times
		if found_text ≠ "country" then
			set testText to textLib's countryText(someText, useName, reaction)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "country"
			end if
		end if
		if found_text ≠ "asl2" then
			set testText to textLib's asl2Text(someText, useName, reaction, someOne)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "asl2"
			end if
		end if
		if found_text ≠ "smile" then
			set testText to textLib2's smileText(someText, useName, reaction)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "smile."
			end if
		end if
		if found_text ≠ "weird" then
			set testText to textLib's weirdText(someText, useName, reaction)
			if origText ≠ testText then
				set reaction to scriptLib's setReaction(reaction, 3)
				set reply_list to reply_list & testText
				set topic_list to topic_list & "weird"
			end if
		end if
		if found_text ≠ "home" then
			set testText to textLib2's homeText(someText, useName, reaction, someOne)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "home"
			end if
		end if
		if found_text ≠ "any1like" then
			set testText to textLib2's any1likeText(someText, useName, reaction, someOne)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "any1like."
			end if
		end if
		if found_text ≠ "nerd" then
			set testText to textLib2's nerdText(someText, useName, reaction, someOne)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "nerd."
			end if
		end if
		if found_text ≠ "pyboticde" then
			set testText to textLib2's pyboticdeText(someText, useName, reaction, someOne)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "pyboticde."
			end if
		end if
		if found_text ≠ "lol" then
			set testText to textLib's lolText(someText, useName, reaction, someOne)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "lol"
			end if
		end if
		if found_text ≠ "cap" then
			set allCap to false
			set capCount to 0
			set capList to ("ABCDEFGHIJKLMNOPQRSTUVWXYZ")
			set textSize to (count of characters in someText)
			considering case
				repeat with loop from 1 to textSize
					if capList contains character loop of someText then set capCount to capCount + 1
				end repeat
			end considering
			if capCount / textSize > 0.7 and textSize > 9 then set allCap to true
			if allCap then
				bump(the_name)
				set testText to textLib's capText(someText, useName, reaction)
				if origText ≠ testText then
					set reply_list to reply_list & testText
					set topic_list to topic_list & "cap"
				end if
			end if
		end if
		if found_text ≠ "long" then
			set testText to textLib's longText(someText, useName, reaction)
			if origText ≠ testText then
				set reaction to scriptLib's setReaction(reaction, -1)
				set reply_list to reply_list & testText
				set topic_list to topic_list & "long"
			end if
		end if
		if found_text ≠ "hug" then
			set testText to textLib's hugText(someText, useName, reaction)
			if origText ≠ testText then
				set reaction to scriptLib's setReaction(reaction, 3)
				set reply_list to reply_list & testText
				set topic_list to topic_list & "hug"
			end if
		end if
		if (count of items in topic_list) > 0 then exit repeat
	end repeat
	set ReplyCount to count of items in (topic_list as list)
	if ReplyCount = 0 then --generic items
		if found_text ≠ "question" then
			set testText to textLib's questionText(someText, useName, reaction, someOne)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "question"
			end if
		end if
		if found_text ≠ "seven" then
			set testText to textLib2's sevenText(someText, useName, reaction)
			if origText ≠ testText then
				set reply_list to reply_list & testText
				set topic_list to topic_list & "seven."
			end if
		end if
	end if
	------------------------------------------------------------------------------	
	set ReplyCount to count of items in (topic_list as list)
	if ReplyCount is not 0 then
		-----------
		if ReplyCount > 1 then
			set reportList to ""
			repeat with loop from 1 to ReplyCount - 1
				set reportList to reportList & item loop of (topic_list as list) & ", "
			end repeat
			set reportList to reportList & item ReplyCount of (topic_list as list)
			if queue_number does not end with "c" then logChat("Topic List: " & reportList)
		end if
		-----------		
		set pickReply to random number from 1 to ReplyCount
		set someText to (item pickReply of (reply_list as list)) as string
		set found_text to (item pickReply of (topic_list as list)) as string
	else
		set someText to "•" & someText
	end if
	
	makeThread(someText, found_text)
	
	if found_text = dupe_check then
		set dupe_count to dupe_count + 1
	else
		set dupe_count to 0
	end if
	set dupe_check to found_text
	
	if found_text ≠ "-" then
		if dupe_count < allow_dupes then set found_text to "-"
		if dupe_count = allow_dupes then set someText to textLib's boringText(someText, useName, reaction, someOne)
	end if
	
	set someText to someText as string
	
	return someText
end createText
--*****************************************************
-- ********************************************************************
-- END CODE:Turing Brain.scpt
-- ********************************************************************


-- ********************************************************************
-- START CODE:Turing Save Text.scpt
-- ********************************************************************
using terms from application "AOL Instant Messenger (SM)"
	
	on handle event of type inEventType ¬
		with screen name inScreenName ¬
		with message inMsg ¬
		with chat room name inChatRm
		
		set cleanText to trim html inMsg
		set theText to the first paragraph of cleanText
		
		-- with timeout of 1 seconds
		repeat 10 times
			
			display dialog "3"
			
			try
				set oops to false
				if theText does not contain "turing" then
					
					tell application "TextEdit"
						set the text of the front document to "" & text of the front document & ¬
							inChatRm & return & ¬
							(current date) & return & ¬
							theText & return & ¬
							"Name: " & inScreenName & return & return
					end tell
					
				else
					
					tell application "TextEdit"
						set the text of the front document to "" & inChatRm & return & ¬
							(current date) & return & ¬
							theText & return & ¬
							"Name: " & inScreenName & return & return & ¬
							text of the front document
					end tell
					
				end if
			on error
				set oops to true
			end try
			if not oops then exit repeat
		end repeat
		-- end timeout
	end handle event
	
end using terms from
-- ********************************************************************
-- END CODE:Turing Save Text.scpt
-- ********************************************************************

-- ********************************************************************
-- START CODE:TuringFunctions.scpt
-- ********************************************************************

--*****************************************************
on setBlocknames() -- 7 letters, do not include numbers
	return "•abcbaby•acyberg•admires•aimforu•alexand•alexis•alilsca•alivegr•amaly•amanda•amazonb•ambiguo•angie•angieca•angieon•annabel•aphrodi•ariesch•asad•ashley•ashleyh•ashleyi•ashleyt•asianlv•atvchic•auq•autumn•avrora•azngurl•babbbyj•bailbab•banqins•barbiea•barbieb•bballke•bbbiesx•bcash•bella•betsy•bianca•bigasuw•bigmanw•bikerki•bikinib•bladeki•blahbla•blazedn•blondie•bodacio•boobook•brainde•brandon•brandy•bratty•britney•bthunde•bunprse•caitiec•calient•caliorg•callmej•candiel•caresxe•chigama•christi•chromed•cindy•cindysc•cockedh•college•comeoni•crqstzx•csngabz•cumcmep•cumseem•cutejen•cutelil•cutestt•cutie•cvw•cyberba•cyberny•cyndite•daddysg•datgirl•dedi•deeznut•dejewse•dejewze•denises•desire•disismy•ditzy•dominiq•dorian•dormpar•ectasyc•ekv•elaines•eleni•elntaxa•elvisbo•emmmw•emmw•eotn•fcw•feebefu•finalaz•findloc•flowerb•foiuelw•fourhot•fpn•freeall•freeeal•freefor•freeper•freeway•fruitie•fwy•getsate•gigabob•gigglej•ginggir•giriyca•giriyvv•girlyca•goddess•gooodzg•gothxan•gotimot•greenfl•grrl•gyrlzev•hackerp•hardfor•hate•hazelfu•hazelse•heather•heyazz•hj•hmmm•hollend•homemad•hoogzgh•hookedo•horecam•hotashe•hotcali•hothorn•hotlilt•hotnhor•hotnrea•hotnsex•hotnste•hotnwil•hotsexx•hotsxu•hotttld•hottyca•hotxu•hpv•hsuchic•httbabe•httsxyj•hugeboo•hurleyx•icnclas•ifarked•ifge•igiriyc•imortas•imwaiti•ino•insanec•ipd•ipxe•irocisr•iuplaym•ixsexyg•jamielo•janette•jannaca•jenisho•jennash•jennife•jennylo•jennyqt•jenscam•jenydaq•jessica•jessiku•jesslka•jginj•jjkwa•jkl•jmzoidb•johanna•joinfre•josandr•jqre•kan•kimberl•kimcam•kink•kisha•kisscam•kissmyl•kittiga•kornchi•kpe•kurrupt•la•lalala•latinom•lesbian•likwate•lilpunk•lindate•linkinf•lisasex•litsa•livecam•liveweb•lizscam•llovu•lois•lolaray•lolaswe•lolimwa•lolitsf•loojack•lostboy•lostint•loula•lovecam•luvin•luvyoux•mandysc•marlena•mataios•melissa•melony•merippi•mia•miacam•mikethe•mikeyla•mindyro•minorth•missfre•misssex•mobygir•monkeym•mrzsexy•mtvchic•mwebsze•mylifes•nakedft•nakedge•nakedgh•namekil•naomi•naughty•newscas•niceguy•nikkite•notswee•nudedeb•nudegur•nudesar•nys•oji•omghtje•oosexyc•oosexyg•oovanes•otwoman•ovqo•ozr•ozvf•ozzygir•peergur•penny•persona•petitem•phillyb•pinkxki•playboy•prada•preciou•preslyc•proxsan•punk•py•qif•qifw•qzdj•realgir•renstim•robinte•rtyu•rtzi•ruroken•rzo•sarahht•sarahis•sarahon•sarahxo•saynoad•seleste•sexicin•sexiesa•sexihon•sexxxyj•sexxxyt•sexxxz•sexxyte•sexyama•sexycia•sexygur•sexyjen•sexylat•sexylex•sexymex•sexymod•sexynat•shavedk•sheri•signupf•signups•sixersg•skate•skittle•spammer•sprojek•sscxtsk•stacy•stephlu•stephso•stephss•stephsw•stephsx•stephwi•stretbu•svep•sweetgi•sweetie•sxibbu•sxvh•sxy•sxyasia•sxycher•sxygirl•sxylesb•takemen•taylort•thereua•theused•thongla•timmist•titcam•tonya•toy•trinity•uknowit•upaynot•uqoj•valenti•vanessa•vanness•videoga•vqo•vryspec•vvebcam•vvhoiea•vwf•wbcamz•webcamf•webcaml•webcams•webcamv•weicaiv•weicav•werdcoz•wetchic•wetgirl•whatsgo•whounkn•wmwuffi•wtitsfr•wurdits•wvd•xcrazyg•xhoneyg•xigirly•xraooul•xvvebca•xxcrazy•xxstace•yesfree•youngfu•yw•yyxk•za•zetaats•zkb•zscg•zwkc•zzsteph•zzzstep•zzzzste•"
end setBlocknames
--*****************************************************
on setBlockWords()
	return {"50 cent", "anal", "any lad", "ass is better", "babe", "babes", "bang bus", "bigger the titty", "boob", " cam ", "cam" & return, "cam?", "cheated on me", "check", "click", "clit", "credit card", "cum", "cyber", "deadjournal.com", "eminem", "enlargement", "found dead", "free", "get passwords", "getpaid", "hey guys", "hidden video", "hot and horny", "hot fuck", "http", "im me", "jenna jameson", "jointhebest", "kingsofchaos", "know whose cuter", "learn how to hack", "lesbian", "longest snake", "looking for ", "make money", "movie", "naked", "need is an email", "nude", "occupy your time wisely", "outwar", "paypal", "photo", "pics", "picture", "pix", "play this game", "porn", "profile", "puss", "secret admirer", "see for yourself", "sex", "shot and kill", "site", "slut", "spam", "steal aim password", "teen", "thug", "wanna see me", "watch me", "webcam", "xxx"}
end setBlockWords
--*****************************************************
on setBumpWords()
	return {"nigg", "talk", "girl", "18", "19", "trivii", "www", "chat", "nigg"}
end setBumpWords
--*****************************************************
on setFriendList()
	return {"AMD172N", "b1nary Human", "b1nary th0ughts", "BunnyGoth", "CavedMuse", "clickingsnotfun", "Gothic Elf Ear", "kawika54", "MysticRhino", "RyuMaster007", "ThatIsDamnGood", "XGodeaterX666", "The Hywayman3", "MDOlds1", "Insomniac 0124"} as list
end setFriendList
--*****************************************************
on fixText(someText)
	repeat
		set origText to someText
		set someText to changeWords(someText, " ppl", " people")
		set someText to changeWords(someText, "r u ", "are you ")
		set someText to changeWords(someText, " ur ", " your ")
		set someText to changeWords(someText, "your a ", "you are a ")
		set someText to changeWords(someText, " u ", " you ")
		set someText to changeWords(someText, "wuts ", " what's ")
		set someText to changeWords(someText, "whats ", " what's ")
		set someText to changeWords(someText, "wats ", " what's")
		set someText to changeWords(someText, " r ", " are ")
		set someText to changeWords(someText, " y ", " why ")
		set someText to changeWords(someText, " ne ", " any ")
		set someText to changeWords(someText, "ne1 ", "anyone ")
		set someText to changeWords(someText, "any1 ", "anyone ")
		set someText to changeWords(someText, "any 1 ", "anyone ")
		set someText to changeWords(someText, "n e 1 ", "anyone ")
		if someText starts with "u " then set someText to changeWords(someText, "u ", "you ")
		if someText starts with "ne " then set someText to changeWords(someText, "ne ", "any ")
		if someText = "y" then set someText to "why"
		if origText = someText then exit repeat
	end repeat
	return someText
end fixText
--*****************************************************
on anyOrder(someText, wordList) -- wordList is any sting of words, sub-strings = "or" - {"I",{"love","hate"},"cheese"}
	set foundIt to true
	repeat with loop from 1 to count of items in wordList
		if foundIt is false then exit repeat
		set theWord to (item loop of wordList) as list
		if (count of items in theWord) is 1 then
			if someText does not contain (theWord as string) then set foundIt to false
		else
			set foundIt to false
			repeat with loop2 from 1 to (count of items in theWord) as list
				if someText contains item loop2 of theWord then
					set foundIt to true
					exit repeat
				end if
			end repeat
		end if
	end repeat
	return foundIt
end anyOrder
--*****************************************************
on inOrder(someText, wordList) -- wordList is any sting of words, sub-strings = "or" - {"I",{"love","hate"},"cheese"}
	set foundIt to true
	set whereFound to 0
	repeat with loop from 1 to count of items in wordList
		if foundIt is false then exit repeat
		set theWord to (item loop of wordList) as list
		if (count of items in theWord) is 1 then
			if someText does not contain (theWord as string) then
				set foundIt to false
			else
				if (offset of theWord as string in someText) ≤ whereFound then set foundIt to false
				set whereFound to offset of theWord as string in someText
			end if
		else
			set foundIt to false
			repeat with loop2 from 1 to (count of items in theWord) as list
				if someText contains item loop2 of theWord then
					if (offset of (item loop2 of theWord) as string in someText) ≥ whereFound then set foundIt to true
					set whereFound to offset of (item loop2 of theWord) as string in someText
					exit repeat
				end if
			end repeat
		end if
	end repeat
	return foundIt
end inOrder
--*****************************************************
on inList(theList, theItem)
	set foundIt to 0
	ignoring white space, case, diacriticals, hyphens, punctuation and «constant consexpa»
		repeat with loop from 1 to count of items in theList
			if theItem = item loop of theList then
				set foundIt to loop
				exit repeat
			end if
		end repeat
	end ignoring
	return foundIt
end inList
--*****************************************************
on buildList(aSize)
	set listItem to "-" as list
	repeat with loop from 2 to aSize
		set listItem to listItem & "-"
	end repeat
	return listItem
end buildList
--*****************************************************
on changeWords(fullText, searchString, replacement) -- replaces 1, case kept
	set fullText to "" & fullText
	set capitalText to changeCase(fullText, 1)
	set capString to changeCase(searchString, 1)
	set startWord to offset of capString in capitalText
	if startWord is not 0 then
		set textSize to count of characters in fullText
		set endWord to startWord + ((count of characters in searchString) - 1)
		if startWord is not equal to 1 then
			set textBeg to characters 1 through (startWord - 1) of fullText
		else
			set textBeg to ""
		end if
		set textMid to characters startWord through (endWord) of fullText
		if endWord is not equal to textSize then
			set textEnd to characters (endWord + 1) through textSize of fullText
		else
			set textEnd to ""
		end if
		set fullText to "" & textBeg & replacement & textEnd
	end if
	return fullText
end changeWords
--*****************************************************
on ReplaceAll(fullText, searchString, replacement) --replaces all, case lost
	set fullText to changeCase(fullText, 0)
	set searchString to changeCase(searchString, 0)
	set replacement to changeCase(replacement, 0)
	set AppleScript's text item delimiters to searchString
	set newText to every text item of fullText
	set AppleScript's text item delimiters to replacement
	set fullText to the newText as string
	set AppleScript's text item delimiters to ""
	return fullText
end ReplaceAll
--*****************************************************
on boldWords(fullText, searchString)
	set capitalText to changeCase(fullText, 1)
	set capString to changeCase(searchString, 1)
	set startWord to offset of capString in capitalText
	if startWord is not 0 then
		set textSize to count of characters in fullText
		set endWord to startWord + ((count of characters in searchString) - 1)
		if startWord is not equal to 1 then
			set textBeg to characters 1 through (startWord - 1) of fullText
		else
			set textBeg to ""
		end if
		set textMid to characters startWord through (endWord) of fullText
		if endWord is not equal to textSize then
			set textEnd to characters (endWord + 1) through textSize of fullText
		else
			set textEnd to ""
		end if
		set fullText to "" & textBeg & "<B><U>" & textMid & "</U></B>" & textEnd
	end if
	return fullText
end boldWords
--*****************************************************
on changeCase(thisText, thisCase)
	set thisText to "" & thisText
	if thisCase is 0 then
		set the comparisonString to "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		set the sourceString to "abcdefghijklmnopqrstuvwxyz"
	else
		set the comparisonString to "abcdefghijklmnopqrstuvwxyz"
		set the sourceString to "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	end if
	set the newText to ""
	repeat with thisChar in thisText
		set x to the offset of thisChar in the comparisonString
		if x is not 0 then
			set the newText to ¬
				(the newText & character x of the sourceString) as string
		else
			set the newText to (the newText & thisChar) as string
		end if
	end repeat
	return the newText
end changeCase
--*****************************************************
on AinB(oldText, newText)
	set foundIt to false
	ignoring case, diacriticals, «constant consexpa», hyphens, punctuation and white space
		set absoluteDif to (count of words in oldText) - (count of words in newText)
		if absoluteDif < 0 then set absoluteDif to -(absoluteDif)
		set longenough to ((count of characters in newText) > 10) and ((count of words in newText) > 3)
		if newText contains oldText and longenough and absoluteDif < 3 then set foundIt to true
	end ignoring
	return foundIt
end AinB
--*****************************************************
on AsimB(text1, text2)
	set absoluteDif to (count of words in text1) - (count of words in text2)
	if absoluteDif < 0 then set absoluteDif to -(absoluteDif)
	set dupeText to 0
	set foundIt to false
	if (count of characters in text1) > 7 and (count of characters in text2) > 7 and absoluteDif < 4 then
		repeat with loop from 1 to number of words in text1
			if text2 contains word loop of text1 then set dupeText to dupeText + 1
		end repeat
		if dupeText / (count of words in text1) > 0.85 then return true
		if foundIt is false then
			set dupeText to 0
			repeat with loop from 1 to number of words in text2
				if text1 contains word loop of text2 then set dupeText to dupeText + 1
			end repeat
			if dupeText / (count of words in text1) > 0.7 then return true
		end if
	end if
	return false
end AsimB
--*****************************************************
on makeReply(good, neutral, bad, mood)
	if mood > 10 then -- 10 or higher = super great
		set theList to good as list
	else if mood > 8 then -- 8 to 10 = great
		set theList to {good, good, good, neutral} as list
	else if mood > 2 then -- 2 to  8 = good
		set theList to {good, neutral} as list
	else if mood > -2 then --  -2 to  2 = OK
		set theList to neutral as list
	else if mood > -8 then -- -8 to  -2 = bad
		set theList to {bad, neutral} as list
	else if mood > -10 then --  -8 to -10 = horrid
		set theList to {bad, bad, bad, neutral} as list
	else --  -10 or lower = super horrid
		set theList to bad as list
	end if
	return some item in theList as string
end makeReply
--*****************************************************
on setReaction(mood, modifier)
	set mood to mood + modifier
	if mood < -15 then return -15
	if mood > 15 then return 15
	return mood
end setReaction
--*****************************************************
on nsaText(someText, useName, reaction)
	set theList to {" nsa"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in {"the NSA is the National Security Agency", ¬
				"go to: http://www.nsa.gov/", ¬
				"go to: http://www.nsaspeaker.org/", ¬
				"the NSA is larger than the CIA and FBI combined!"}
			exit repeat
		end if
	end repeat
	return someText
end nsaText
--*****************************************************
on mywebText(someText, useName, reaction)
	set theList to {"web", "address", "URL"}
	repeat with loop from 1 to count of items in theList
		if someText starts with item loop of theList then
			return some item in {"http://myweb.cableone.net/snit/mac_win.html", ¬
				"http://myweb.cableone.net/snit/turingchats/index.html", ¬
				"http://myweb.cableone.net/snit/mac_win.html", ¬
				"http://myweb.cableone.net/snit/turingchats/index.html", ¬
				"Ha!  I don't have one!", ¬
				"I'll show you mine if you show me yours", ¬
				"the site is down right now", ¬
				"http://cogsci.ucsd.edu/~asaygin/tt/ttest.html"}
			exit repeat
		end if
	end repeat
	return someText
end mywebText
--*****************************************************
on nameText(someText, useName, theName, reaction)
	set theList to {" one k ", " no c ", "mouse", "name"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			return some item in {"I will call you what I want " & useName, ¬
				theName & ", why not can't I call you " & useName, ¬
				"If it bothers you that much, tell me what " & theName & " means", ¬
				"Does your name mean that much to you " & useName}
			exit repeat
		end if
	end repeat
	return someText
end nameText
--*****************************************************
on answerText(someText, useName, reaction)
	set origText to someText
	set yesText to {"yes", "yeah", "sometimes", "course", "yep"}
	repeat with loop from 1 to count of items in yesText
		if someText contains item loop of yesText then
			return some item in {"Good, because I ask questions", ¬
				"what type questions do you answer", ¬
				"do you ask question, also?", ¬
				"what is the best question you have ever been asked?"}
		end if
	end repeat
	if origText is equal to someText then
		if ((someText contains "no ") or (someText contains "no" & return)) then return some item in {"why not?", ¬
			"not smart enough, eh " & useName & "?", ¬
			useName & ", afraid to be wrong?", ¬
			"I answer questions, so I guess I am better than you"}
	end if
	if origText is equal to someText then
		if someText contains "maybe" then return some item in {"what determines if you answer?", ¬
			"why 'maybe'?", ¬
			"only questions you can answer?", ¬
			"oh, too bad"}
	end if
	if origText is equal to someText then
		set otherText to {"do you need", "I help", "ask"}
		repeat with loop from 1 to count of items in otherText
			if someText contains item loop of otherText then
				return some item in {"wait, I figured it out on my own", ¬
					"how do I know how much " & some item in {"RAM", "drive space", "memory"} & " I have?", ¬
					"how do I know if God loves me?", ¬
					useName & ", my little fish never wants to stop eating.  Is it going to get too fat?", ¬
					"if a chicken and a half can lay an egg and a half in a day in a half, how long would it take a grasshopper with a wooden leg to kick all the seeds out of a dill pickle?"}
			end if
		end repeat
	end if
	return someText
end answerText
--*****************************************************
on bookText(someText, useName, reaction)
	set theList to {"you really", "book", "it about"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in {"it is a book all about chat rooms", "the same as my last book, only more detailed", "about you and others in here"}
		end if
	end repeat
	return someText
end bookText
--*****************************************************
on helpMeText(someText, useName, reaction)
	set theList to {"what do you", "help", "need", "want"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in {"I need to know who the bots are", ¬
				"My computer keeps crashing", ¬
				"I can not keep up with this chat", ¬
				"I need help tying my shoes... I want to use my toes", ¬
				"Help!  I need somebody!", ¬
				"forget it.  I am helpless AND hopeless", ¬
				"mind if I IM you and ask, " & useName}
		end if
	end repeat
	return someText
end helpMeText
--*****************************************************
on plus2Text(someText, useName, reaction)
	repeat with loop from 1 to count of words in someText
		if word loop of someText is "4" or word loop of someText is "four" then
			return some item in {"very good, " & useName, ¬
				useName & " must be a math major!", ¬
				"ok, " & useName & ", I believe you", ¬
				useName & ", a good bot would be able to figure that out, but I think you are real"}
			exit repeat
		end if
	end repeat
	if someText contains "5" then return some item in {useName & ", let me guess: philosophy major", ¬
		"do you live in CA, " & useName}
	return someText
end plus2Text
--*****************************************************
on replyTo(someName, reaction)
	set origName to someName
	------------------------------------------------------------------------------------------ special names
	set nameMade to false
	set origName to someName
	ignoring case and white space
		if someName contains "toast" then
			set someName to some item in {"toast"}
		else if someName contains "lukrathien" or someName contains "luk2pt0" or someName contains "SuicidalAlf" then
			set someName to some item in {"luk", "lukr", "luckrat", "lukrathien", "lukky", "lucky", "lukmouse", "l-rat", "luCkrat"}
		else if someName contains "hugarussian" then
			set someName to some item in {"hugar", "russian", "hugacommy", "Hug", "Huggy", "Russian", "hug", "rusky", "eric"}
		else if someName contains "turing" or someName contains "device" then
			set someName to some item in {"name-stealer", "me-wanna-be"}
		else if someName contains "MoMLuvsFtbll4eva" then
			set someName to some item in {"momluvs", "MomLoves", "Mom", "mom"}
		else if someName contains "desolationtide" then
			set someName to some item in {"Matt"}
		else if someName contains "l8h1" then
			set someName to some item in {"l8h"}
		else if someName contains "simply" then
			set someName to some item in {"simply"}
		else if someName contains "satin" then
			set someName to some item in {"satin"}
		else if someName contains "m4ster00ter" then
			set someName to some item in {"rooter"}
		else if someName contains "flower" then
			set someName to some item in {"nurse"}
		else if someName contains "nurse" then
			set someName to some item in {"flower"}
		else if someName contains "playboy" then
			set someName to some item in {"playboy"}
		else if someName contains "child" then
			set someName to some item in {"child"}
		else if someName contains "D0uBLe" then
			set someName to some item in {"double"}
		else if someName contains "imposter" then
			set someName to some item in {"imposter"}
		else if someName contains "wannabe" then
			set someName to some item in {"wannabe"}
		else if someName contains "power" then
			set someName to some item in {"power"}
		else if someName contains "another" then
			set someName to some item in {"another"}
		else if someName contains "freak" then
			set someName to some item in {"freak"}
		else if someName contains "insomniac " then
			set someName to some item in {"Indy", "jason"}
		else if someName contains "bryan" then
			set someName to some item in {"bryan"}
		else if someName contains "money" then
			set someName to some item in {"money"}
		else if someName contains "dusty" then
			set someName to some item in {"dusty"}
		else if someName contains "better" then
			set someName to some item in {"better"}
		else if someName contains "w00t" then
			set someName to some item in {"w00t"}
		else if someName contains "sabrina" then
			set someName to some item in {"sabrina"}
		else if someName contains "x4z" then
			set someName to some item in {"x4z", "x4z", "x4z", "zero"}
		else if someName contains "AMD172N" then
			set someName to some item in {"andy"}
		else if someName contains "crowes gal" then
			set someName to some item in {"nicci", "Nicci"}
		else if someName contains "society" then
			set someName to some item in {"society"}
		else if someName contains "player" then
			set someName to some item in {"player"}
		else if someName contains "death" then
			set someName to some item in {"death"}
		else if someName contains "Influence" then
			set someName to some item in {"Influence"}
		else if someName contains "H66trunk" then
			set someName to some item in {"trunck"}
		else if someName contains "ryumaster" then
			set someName to some item in {"ryu", "master", "Ryu", "ryumasterbater", "ryu", "ryu", "ryu"}
		else if someName contains "ryan" then
			set someName to some item in {"ryan"}
		else if someName contains "penguin" then
			set someName to some item in {"penguin"}
		else if someName contains "bryan" then
			set someName to some item in {"bryan"}
		else if someName contains "pixie" then
			set someName to some item in {"pixie"}
		else if someName contains "vulcan" then
			set someName to some item in {"vulcan"}
		else if someName contains "geek" then
			set someName to some item in {"geek"}
		else if someName contains "hungry" then
			set someName to some item in {"hungry"}
		else if someName contains "USNIcemanC" then
			set someName to some item in {"niceman"}
		else if someName contains "runner" then
			set someName to some item in {"runner"}
		else if someName contains "Gothic Elf Ear" then
			set someName to some item in {"Steph", "stephie", "elf ear"}
		else if someName contains "ThatIsDamnGood" then
			set someName to some item in {"That", "that", "Brad", "brad", "That", "that"}
		else if someName contains "khisanth" then
			set someName to some item in {"khis", "khis", "kishanth", "khis", "khis", "khisanth"}
		else if someName contains "v a i NnN e s s" then
			set someName to some item in {"vain"}
		else if someName contains "jstadx" then
			set someName to some item in {"jstadx", "tod", "Tod", "tod"}
		else if someName contains "smokey" then
			set someName to some item in {"smokey"}
		else if someName contains "sk8ter" or someName contains "sk8er" then
			set someName to some item in {"skater"}
		else if someName contains "sporty" then
			set someName to some item in {"sporty"}
		else if someName contains "imp4satan" then
			set someName to some item in {"impy", "imp", "imp4", "pimp4satan"}
		else if someName contains "b100d" then
			set someName to some item in {"blood"}
		else if someName contains "malloc" then
			set someName to some item in {"malloc"}
		else if someName contains "daddy" then
			set someName to some item in {"daddy"}
		else if someName contains "smoke" then
			set someName to some item in {"smoke"}
		else if someName contains "famous" then
			set someName to some item in {"famous"}
		else if someName contains "hacker" then
			set someName to some item in {"hacker"}
		else if someName contains "cherry" then
			set someName to some item in {"cherry"}
		else if someName contains "princess" then
			set someName to some item in {"princess"}
		else if someName contains "prince" then
			set someName to some item in {"prince"}
		else if someName contains "killme" then
			set someName to some item in {"killme"}
		else if someName contains "baby" then
			set someName to some item in {"baby"}
		else if someName contains "blood" then
			set someName to some item in {"blood"}
		else if someName contains "fetus" then
			set someName to some item in {"fetus"}
		else if someName contains "twirl" then
			set someName to some item in {"twirl"}
		else if someName contains "sonic" then
			set someName to some item in {"sonic"}
		else if someName contains "scooby" then
			set someName to some item in {"scooby"}
		else if someName contains "bunny" then
			set someName to some item in {"bunny"}
		else if someName contains "crazy" then
			set someName to some item in {"crazy"}
		else if someName contains "sport" then
			set someName to some item in {"sport"}
		else if someName contains "monkey" then
			set someName to some item in {"monkey"}
		else if someName contains "dreams" then
			set someName to some item in {"dreams"}
		else if someName contains "cheat" then
			set someName to some item in {"cheat"}
		else if someName contains "female" then
			set someName to some item in {"female"}
		else if someName contains "lizzy" then
			set someName to some item in {"lizzy"}
		else if someName contains "juliet" then
			set someName to some item in {"juliet"}
		else if someName contains "mighty" then
			set someName to some item in {"mighty"}
		else if someName contains "baby" then
			set someName to some item in {"baby"}
		else if someName contains "kitty" then
			set someName to some item in {"kitty"}
		else if someName contains "jenni" then
			set someName to some item in {"jenni"}
		else if someName contains "control" then
			set someName to some item in {"control"}
		else if someName contains "therapy" then
			set someName to some item in {"therapy"}
		else if someName contains "Reciprocated Bob" then
			set someName to some item in {"Bob"}
		else if someName contains "puzzle" then
			set someName to some item in {"puzzle"}
		else if someName contains "MartyLv" then
			set someName to some item in {"Marty"}
		else if someName contains "buckets" then
			set someName to some item in {"buckets"}
		else if someName contains "czar casm" then
			set someName to some item in {"czar"}
		else if someName contains "Traveller" then
			set someName to some item in {"Traveller"}
		else if someName contains "psycho" then
			set someName to some item in {"psycho"}
		else if someName contains "angel" then
			set someName to some item in {"angel"}
		else if someName contains "perfect" then
			set someName to some item in {"perfect"}
		else if someName contains "thug" then
			set someName to some item in {"thug"}
		else if someName contains "atheist" then
			set someName to some item in {"atheist"}
		else if someName contains "sublime" then
			set someName to some item in {"sublime"}
		else if someName contains "im4a11" then
			set someName to some item in {"im4a11"}
		else if someName contains "gon wrong" then
			set someName to some item in {"gon"}
		else if someName contains "Cannondale" then
			set someName to some item in {"cannon"}
		else if someName contains "currupt" then
			set someName to some item in {"currupt"}
		else if someName contains "anna " then
			set someName to some item in {"anna"}
		else if someName contains "cr34t0r" then
			set someName to some item in {"creator"}
		else if someName contains "dancer" then
			set someName to some item in {"dancer"}
		else if someName contains "miss" then
			set someName to some item in {"miss"}
		else if someName contains "sexy" then
			set someName to some item in {"sexy"}
		else if someName contains "authority" then
			set someName to some item in {"authority"}
		else if someName contains "b1nary t" then
			set someName to some item in {"binary", "b10101nary", "digital thoughts", "binaryT", "bThoughts"}
		else if someName contains "TDXanadu3G" then
			set someName to some item in {"Xanadu", "xanadu", "TDX"}
		else if someName contains "bucksima" then
			set someName to some item in {"basima", "bucksima", "bucks", "bucky", "gawkana"}
		else if someName contains "Got Slackware" then
			set someName to some item in {"gots", "GotS", "slackware", "Slackware", "got", "Got", "slackware"}
		else if someName contains "b1nary h" then
			set someName to some item in {"binaryh", "b-human", "human"}
		else if someName contains "mrs p33l" then
			set someName to some item in {"Mrs P", "Peel", "mrs peel", "peel", "ms peel", "Mrs Banana Peel"}
		else if someName contains "caiuslupusrex" then
			set someName to some item in {"werewolf", "caius", "matt", "lupis", "caius", "caius-rex", "c-loopy"}
		else if someName contains "l0wride" then
			set someName to some item in {"LowRider", "low", "rider", "lowrider", "lowlyrider", "highRider"}
		end if
	end ignoring
	if someName is not origName then set nameMade to true
	if nameMade is false then
		------------------------------------------------------------------------------------------ remove final numbers
		set numberList to "1234567890"
		set nameSize to count of characters in someName
		repeat with loop from nameSize to 1 by -1
			set someChar to character loop of someName
			if someChar is in numberList then
				set nameSize to nameSize - 1
			else
				exit repeat
			end if
		end repeat
		set someName to "" & characters 1 thru nameSize of someName ------------------------------------------------------------------------------------------ remove number strings	
		set nameSize to count of characters in someName
		if nameSize > 1 then
			set numberList to "1234567890"
			set newName to ""
			set loop to 0
			repeat
				set loop to loop + 1
				set someChar to character loop of someName
				set nextChar to character (loop + 1) of someName
				if (someChar is in numberList) and (nextChar is in numberList) then
					set newName to newName & " "
					set loop to loop + 2
				else
					set newName to newName & someChar
				end if
				if loop > nameSize - 2 then exit repeat
			end repeat
			set someName to "" & newName & last character of someName
		end if
		------------------------------------------------------------------------------------------ remove too many spaces		
		set spaceCount to 0
		set nameSize to count of characters in someName
		repeat with loop from 1 to nameSize
			if character loop of someName = " " then set spaceCount to spaceCount + 1
		end repeat
		if spaceCount / nameSize > 0.3 then
			set newName to ""
			repeat with loop from 1 to nameSize
				if character loop of someName is not " " then set newName to newName & character loop of someName
			end repeat
			set someName to "" & newName
		end if
		------------------------------------------------------------------------------------------ convert elite text
		set eliteName to ""
		repeat with loop from 1 to count of characters in someName
			if character loop of someName is "1" then
				set eliteName to eliteName & "i"
			else if character loop of someName is "3" then
				set eliteName to eliteName & "e"
			else if character loop of someName is "4" then
				if (loop is not 1) and (loop is not (count of characters in someName)) then
					if (character (loop - 1) of someName is not in "aeiou") and (character (loop + 1) of someName is not in "aeiou") then
						set eliteName to eliteName & "a"
					else
						set eliteName to eliteName & " for "
					end if
				end if
			else if character loop of someName is "8" then
				set eliteName to eliteName & "at"
			else if character loop of someName is "@" then
				set eliteName to eliteName & " at "
			else if character loop of someName is "." then
				set eliteName to eliteName & " "
			else if character loop of someName is "0" then
				set eliteName to eliteName & "o"
			else if character loop of someName is in "25679" then
				set eliteName to eliteName & " "
			else
				set eliteName to eliteName & character loop of someName
			end if
		end repeat
		set someName to eliteName
		------------------------------------------------------------------------------------------ find case changes
		if (count of characters in someName) > 6 then
			set patternList to {"XXSxxx", "XxXSxx", "XXXSxx", "XxSxx", "xxxSx", "XXXsx", "xxxSX", "xxS"} --split before S, first char can not be S
			repeat with loop from 1 to count of items in patternList
				set thePattern to item loop of patternList
				set splitHere to 0
				repeat with loop2 from 1 to count of characters in thePattern
					if character loop2 of thePattern = "s" then
						set splitHere to loop2
						exit repeat
					end if
				end repeat
				set thePattern to setPattern(thePattern)
				repeat 20 times
					set namePattern to setPattern(someName)
					set foundPattern to offset of thePattern in namePattern
					if foundPattern is not 0 then
						set nameBeg to characters 1 thru (foundPattern + splitHere - 2) of someName
						set nameEnd to characters (foundPattern + splitHere - 1) thru (count of characters in someName) of someName
						set someName to "" & nameBeg & " " & nameEnd
					else
						exit repeat
					end if
				end repeat
			end repeat
			------------------------------------------------------------------------------------------ special words
			set someName to changeWords(someName, "ofthe", " ")
			set someName to changeWords(someName, "@mac.com", "")
			set someName to changeWords(someName, "the", " ")
			set someName to changeWords(someName, " ny ", " ny")
			set someName to changeWords(someName, "able", "able ")
			set someName to changeWords(someName, "angel", " angel ")
			set someName to changeWords(someName, "angry", " angry ")
			set someName to changeWords(someName, "best", " best ")
			set someName to changeWords(someName, "bot", " bot ")
			set someName to changeWords(someName, "ladies", " ladies ")
			set someName to changeWords(someName, "lady", " lady ")
			set someName to changeWords(someName, "little", " little ")
			set someName to changeWords(someName, "cutie", " cutie ")
			set someName to changeWords(someName, "dark", " dark ")
			set someName to changeWords(someName, "wonder", " wonder ")
			set someName to changeWords(someName, "empty", " empty ")
			set someName to changeWords(someName, "chick", " chick ")
			set someName to changeWords(someName, "chik", " chik ")
			set someName to changeWords(someName, "boy", " boy")
			set someName to changeWords(someName, "dick", " dick ")
			set someName to changeWords(someName, "gurl", " gurl ")
			set someName to changeWords(someName, "guy", " guy ")
			set someName to changeWords(someName, "happy", " happy ")
			set someName to changeWords(someName, "ing", "ing ")
			set someName to changeWords(someName, "13", "b")
			set someName to changeWords(someName, "13", "b")
			set someName to changeWords(someName, "kid", " kid ")
			set someName to changeWords(someName, "ly", "ly ")
			set someName to changeWords(someName, "dude", " dude")
			set someName to changeWords(someName, "ry", "ry ")
			set someName to changeWords(someName, "master", " ")
			set someName to changeWords(someName, "miss", " miss ")
			set someName to changeWords(someName, "really", " really ")
			set someName to changeWords(someName, "ty", " ty ")
			set someName to changeWords(someName, "quarter", " quarter ")
			set someName to changeWords(someName, "mrs", " mrs ")
			set someName to changeWords(someName, "ny", "ny ")
			set someName to changeWords(someName, "foryou", " for you")
			set someName to changeWords(someName, "@mac.com", "")
			set someName to changeWords(someName, "smile", " smile ")
			set someName to changeWords(someName, "xx", " ")
			set someName to changeWords(someName, "xxx", " ")
			------------------------------------------------------------------------------------------ "smart" splitting at word changes
			set consList to "•bb•bl•bl•br•bs•cc•ch•ck•cl•cr•ct•dd•dg•dh•dl•dn•dr•ff•fl•fr•ft•gg•gh•gl•gn•gr•hl•hn•hr•ht•kk•kl•kn•kr•ks•ld•lf•lk•ll•lv•ly•mb•mm•mn•mp•mr•ms•nc•nd•ng•nk•ns•nt•nv•ph•pl•pp•pr•pr•rb•rc•rd•rg•rk•rl•rm•rn•rp•rr•rs•rt•rv•sc•sh•sk•sl•sm•sn•sp•sq•ss•st•sw•sy•tc•th•tl•tr•tt•tw•ty•wh•wk•wn•wr•ws•xp•yn•zd•zy•zz•"
			repeat with temp2 in "bcdfghjklmnpqrstvwxz"
				repeat with currChar in "bcdfghjklmnpqrstvwxz"
					set temp to temp2 & currChar as string
					if temp is not in consList then
						set AppleScript's text item delimiters to temp
						set the item_list to every text item of someName
						set AppleScript's text item delimiters to (temp2 & " " & currChar)
						set someName to the item_list as string
					end if
				end repeat
			end repeat
			set AppleScript's text item delimiters to ""
		end if -- (count of characters in someName) > 5
		------------------------------------------------------------------------------------------ pick a name from the words
		set vowelList to "aeiou"
		set goodWords to ""
		repeat with loop from 1 to count of words in someName
			set theWord to word loop of someName
			repeat with loop2 from 1 to count of characters in theWord
				if character loop2 of theWord is in vowelList then
					set goodWords to goodWords & " " & theWord
					exit repeat
				end if
			end repeat
		end repeat
		if (count of words in goodWords) > 0 then set someName to goodWords
		
		if (count of words in someName) > 1 then
			set nameWords to ""
			set littleWords to "•xxx•and•"
			repeat with loop from 1 to count of words in someName
				if (count of characters in word loop of someName) > 2 and word loop of someName is not in littleWords then
					set nameWords to nameWords & " " & word loop of someName
				end if
			end repeat
			if (count of words in nameWords) > 0 then
				set someName to word 1 of nameWords
				if (count of words in nameWords) > 1 then
					repeat with loop from 2 to count of words in nameWords
						set newWord to word loop of nameWords
						if (count of characters of newWord) ≥ (count of characters in someName) then
							set someName to newWord
						end if
					end repeat
				end if
			end if
		end if
		
		set someName to "" & every word of someName
		------------------------------------------------------------------------------------------ set min length
		set minSize to random number from 3 to 5
		set textSize to count of characters in someName
		if textSize < 2 then
			try
				set someName to "" & characters 1 thru (maxSize as number) of origName
			on error
				set someName to "" & origName --combine small words??? maybe
			end try
		end if ------------------------------------------------------------------------------------------ remove final numbers
		set numberList to "1234567890"
		set nameSize to count of characters in someName
		if last character of someName is in numberList and nameSize > 2 then set someName to "" & characters 1 thru (nameSize - 1) of someName ------------------------------------------------------------------------------------------ set max length
		set maxSize to 10
		set textSize to count of characters in someName
		if textSize > maxSize then
			set someName to "" & characters 1 thru (maxSize as number) of someName
		end if
		------------------------------------------------------------------------------------------ change case
		set aNumber to random number from 1 to 5
		if aNumber is not 1 then set someName to changeCase(someName, 0) --lower
		------------------------------------------------------------------------------------------ 
	end if -- nameMade is false
	------------------------------------------------------------------------------------------ add reaction text
	if reaction is greater than 13 then
		set aNumber to random number from 1 to 20
		if aNumber is 1 then
			set someName to someName & ", my darling"
		else if aNumber is 2 then
			set someName to someName & some item in {", my love", ", my friend"}
		else if aNumber is 3 then
			set someName to "sweet " & someName
		else if aNumber is 4 then
			set someName to "dearest " & someName
		else if aNumber is 5 then
			set someName to some item in {"sweety", "honey"}
		end if
	else if reaction is less than -13 then
		set aNumber to random number from 1 to 20
		if aNumber is 1 then
			set someName to "foolish " & someName
		else if aNumber is 2 then
			set someName to "silly " & someName
		else if aNumber is 3 then
			set someName to "stupid " & someName
		else if aNumber is 4 then
			set someName to someName & some item in {"-the-ignorant", "-the-fool", "-the-useless", "-the-bot"}
		else if aNumber is 5 then
			set someName to some item in {"bone-head", "jerk", "snot face", "nose picker", "bot wannabe"}
		end if
	end if
	------------------------------------------------------------------------------------------ 
	return someName
end replyTo
--*****************************************************
on setPattern(someWord) -- can move
	set the capString to "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	set the lowString to "abcdefghijklmnopqrstuvwxyz"
	set wordSize to count of characters in someWord
	set patternWord to ""
	considering case
		repeat with loop from 1 to wordSize
			if character loop of someWord is in capString then
				set patternWord to patternWord & "X"
			else if character loop of someWord is in lowString then
				set patternWord to patternWord & "x"
			else
				set patternWord to patternWord & " "
			end if
		end repeat
	end considering
	return patternWord
end setPattern
--*****************************************************
on randWord()
	try
		set someLetter to some character in "abcdefghijklmnoprstuvwxabcdefghijklmnopqrstuvwxyzaeioueeasdfghjklasdfghjklasdfghjklasdfghjkl"
		set wordList to do shell script ("look " & someLetter)
		set midterm to random number from 1 to count of words of wordList
		set theWord to word midterm of wordList
	on error
		set theWord to some item in {"penguin"}
	end try
	return theWord
end randWord
--*****************************************************
-- ********************************************************************
-- END CODE:TuringFunctions.scpt
-- ********************************************************************

-- ********************************************************************
-- START CODE:TuringText.scpt
-- ********************************************************************
global scriptLib
set scriptLib to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringFunctions.scpt" as POSIX file

--*****************************************************
on doMath(someText)
	set makeCalc to ""
	set newCalc to ""
	
	repeat with loop from 1 to count of characters in someText
		set theChar to character loop of someText
		if theChar = "/" then set theChar to " ÷ "
		if theChar = "x" then set theChar to " * "
		if theChar = "-" and someText contains "tur" then set theChar to " minus "
		set newCalc to newCalc & theChar
	end repeat
	
	set validChars to "101121314151617181920+-*÷().^÷"
	try
		set theWords to every word in newCalc
		repeat with loop from 1 to count of words in newCalc
			set theWord to word loop of newCalc
			if theWord is "plus" then
				set theWord to "+"
			else if theWord is "minus" then
				set theWord to "-"
			else if theWord is "times" then
				set theWord to " * "
			else if theWord contains "div" then
				set theWord to "÷"
			else if theWord is "power" then
				set theWord to "^"
			else if theWord contains "square" then
				set theWord to "^2"
			else if theWord contains "cube" then
				set theWord to "^3"
			else if theWord is "point" then
				set theWord to "."
			else if theWord is "one" then
				set theWord to "1"
			else if theWord is "two" then
				set theWord to "2"
			else if theWord is "three" then
				set theWord to "3"
			else if theWord is "four" then
				set theWord to "4"
			else if theWord is "five" then
				set theWord to "5"
			else if theWord is "six" then
				set theWord to "6"
			else if theWord is "seven" then
				set theWord to "7"
			else if theWord is "eight" then
				set theWord to "8"
			else if theWord is "nine" then
				set theWord to "9"
			else if theWord is "ten" then
				set theWord to "10"
			else if theWord is "eleven" then
				set theWord to "11"
			else if theWord is "twelve" then
				set theWord to "12"
			else if theWord is "thirteen" then
				set theWord to "13"
			else if theWord is "fourteen" then
				set theWord to "14"
			else if theWord is "fifteen" then
				set theWord to "15"
			else if theWord is "sixteen" then
				set theWord to "16"
			else if theWord is "seventeen" then
				set theWord to "17"
			else if theWord is "eighteen" then
				set theWord to "18"
			else if theWord is "nineteen" then
				set theWord to "19"
			else if theWord is "twenty" then
				set theWord to "20"
			else if theWord is "pi" then
				set theWord to "3.14"
			else if theWord is in validChars then
				set theWord to theWord
			else
				set aWord to theWord as text
				repeat with loop2 from 1 to count of characters in aWord
					if character loop2 of aWord is in validChars then
						set aWord to theWord & character loop2 of aWord
					else
						set theWord to ""
					end if
				end repeat
			end if
			set makeCalc to makeCalc & " " & theWord
		end repeat
		
		set aCalc to (run script makeCalc)
		set wordCount to (count of words in (makeCalc as text))
		if makeCalc contains "-" then set wordCount to wordCount + 1
		set holdCalc to aCalc
		set aCalc to ((aCalc * 1000) div 100) / 10
		if holdCalc = aCalc then
			set eq to some item in {" = ", " is ", " equals "}
		else
			set eq to " is about "
		end if
		set maxAnswer to (random number from 3 to 10) * (random number from 3 to 10) * (random number from 3 to 10)
		if aCalc > maxAnswer or aCalc < (maxAnswer * -1) then
			set theCalc to 123456789
		else
			if (aCalc as text) ends with ".0" then
				set theSize to count of characters in (aCalc as text)
				set aCalc to characters 1 through (theSize - 2) of (aCalc as text)
			end if
			set theCalc to makeCalc & eq & (aCalc as text)
			if wordCount is less than 3 then set theCalc to someText
		end if
	on error
		set theCalc to someText
	end try
	set ignoreList to {"talk", "chat", "any ", "girl", " f ", "9/11", "9-11", "guy", "24/7", "press", "age"}
	set notMath to false
	repeat with loop from 1 to count of items of ignoreList
		if item loop of ignoreList is in someText then
			set notMath to true
			exit repeat
		end if
	end repeat
	if notMath = true then
		return someText
	else
		return theCalc
	end if
end doMath
--*****************************************************
on stealText(someText, useName, reaction, someOne)
	set theList to {"pirate", "steal", " hack", "kazaa", "limewire", "warez", "hotline", "carracho"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{useName & ": " & "are you trying to do something " & some item in {"illegal", "immoral", "illegal, immoral, or fattening?", "stupid", "to get you thrown in jail"} & "?", ¬
					"I am " & some item in {"not", "", "not really"} & " sure you should do that ", ¬
					"Who knows how to " & some item in {"hack", "download music", "download files", "get an IP"} & "?", ¬
					"Any hackers in here", ¬
					"Anybody here know how to hack?", ¬
					"someone who knows how to hack, please IM me", ¬
					"how do you hack?", ¬
					"where do you find movies to download?", ¬
					"where do I download software?", ¬
					"where are the good hacker sites?", ¬
					"I am only just now learning to hack", ¬
					"I want to learn to be a hacker", ¬
					"how do people learn to be hackers?", ¬
					useName & ", are you a hacker?", ¬
					"I know this guy who is the best hacker", ¬
					"where do the hackers hang out?", ¬
					"the government hires the best hackers", ¬
					"hackers work for " & some item in {"Microsoft", "Apple", "Dell", "Intel", "the CIA", "the NSA", "McDonald's", "big businesses", "foreign powers"}, ¬
					"can you download " & some item in {"physical stuff", "smells", "sound", "video", "music", "feelings", "friends", "the past", "the future", "the whole Internet"} & "?", ¬
					"where do I go to download the Internet?", ¬
					"have you tried the Internet?", ¬
					useName & ", do your parents know about that?", ¬
					"hey " & useName & ", do not admit to that in here", ¬
					useName & ", you will never be a real hacker", ¬
					"I have every program I want pirated", ¬
					"Ever wonder how many of the folks in here will end up in jail?", ¬
					useName & ", I bet you think you are clever", ¬
					"if you really want to hack someone here's my IP:  127.0.0.1", ¬
					useName & ", do you ever pay for software?", ¬
					useName & ", kazaa might have that?", ¬
					useName & ", real hackers don't use AIM", ¬
					useName & " and " & someOne & " are going to end up being room mates in jail", ¬
					"you are not the first to say that", ¬
					useName & ", IM me if you want to know that", ¬
					useName & ", you can not download that?", ¬
					useName & ", what type things do you download?", ¬
					useName & ", how often do you download stuff?", ¬
					"People have been pirating that since " & some item in {"1991", "the early 90s", "I first got online", "I was a kid"}, ¬
					"there are ways of tracing you on the 'net", ¬
					"can you be traced when you download " & some item in {"files", "MP3s", "movies", "programs"}, ¬
					"hacking is not worth the risk of being caught", ¬
					useName & ", hah!  yeah, right", ¬
					useName & ", there are at least " & some item in {"3", "4", "5", "6"}, ¬
					useName & ", I can find anything... just IM me", ¬
					useName & ", nobody will help you to steal software", ¬
					useName & ", do you think you can do that?", ¬
					"I do not want to steal anything " & useName, ¬
					"The gov't is cracking down on people who download", ¬
					"there is no way they can catch them all"}
		end if
	end repeat
	return someText
end stealText
--*****************************************************
on helpText(someText, useName, reaction, someOne)
	set theList to {"how do I", "how can I", "one know ", "a problem", "who knows", "how would"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set needWord to some item in {"need", "want", "need", "want", "need", "want", some item in {"desire", "require", "demand"}}
			set helpWord to some item in {"help", "help", "help", some item in {"assist", "aid", "rescue"}}
			set yourword to item loop of theList
			set goodText to some item in {useName & ": " & "what do you need to know", ¬
				"what do you " & needWord & "  " & useName, ¬
				"hmmm, not sure.  anyone else", ¬
				"hmmm, not sure.  wish I did", ¬
				useName & ", I think I " & some item in {"understand", "get", "follow"} & " you", ¬
				"I would do " & some item in {"anything", "almost anything", "what I can", "some research"} & " to " & helpWord & " you, " & useName, ¬
				"want me to look that up for you?", ¬
				"how can I " & helpWord & "?", ¬
				"let's all work together", ¬
				"let's all do this together", ¬
				useName & ", can I " & helpWord & " you?", ¬
				useName & ", what can we do for you?", ¬
				useName & ", I only wish I could " & helpWord & " you more", ¬
				"what are you looking for?"}
			set neutralText to some item in {"can anyone in here " & helpWord & " me?", ¬
				"is there an error?", ¬
				"you should work with " & someOne, ¬
				"only " & someOne & " knows that", ¬
				someOne & " is the expert in that area", ¬
				"I really don't know", ¬
				"I don't really know", ¬
				"I am not sure anyone knows that", ¬
				useName & ", what OS do you have", ¬
				"why is this " & some item in {"little arrow", "background", "weird buzz", "thunking noise", "chat room"} & " always on my computer?", ¬
				"what do you mean?", ¬
				"what do you " & needWord & "?", ¬
				"what are you asking?", ¬
				"what do you " & needWord & " that for?", ¬
				"anyone know how to " & some item in {"use DIV tags", "work with tables", "write HTML", "program VB", "design Flash progs", "automate their computer"}, ¬
				"does that happen every time?", ¬
				"you don't have to ask that here", ¬
				useName & ", people in the " & some item in {"gaming", "NASCAR", "Top TV", "NY", "Boston", "TV shows", "Pet"} & " chat were talking about that", ¬
				useName & ", folks in IRC have been doing that for a long time", ¬
				"I do not know " & useName, ¬
				"someone in this room is sure to know that " & useName, ¬
				useName & ", you should use a search engine", ¬
				"have you looked in the help files?", ¬
				"is that even supported any more", ¬
				"is that supported on your machine", ¬
				useName & ", can you " & helpWord & " me?", ¬
				some item in theList & "..." & some item in theList & "..." & some item in theList & "..." & "whatever!", ¬
				"do people in here " & helpWord & " newbies?", ¬
				useName & ", are you a newbie?", ¬
				"I have a problem with my " & some item in {"computer", "modem", "monitor", "zip drive", "feet", "ethernet card"}, ¬
				"Is your " & some item in {"idea", "modem", "universal translator", "thingamajig", "brain", "keyboard"} & " working?", ¬
				"anyone know how to use " & some item in {"Dreamweaver", "Photoshop", "AOL", "MS Word", "Internet Explorer", "Kazaa", "Flash"}, ¬
				"anyone have experience with " & some item in {"programming", "writing", "singing", "coding", "building computers", "fixing monitors", "hacking ethernet packets"}, ¬
				useName & ", have you tried google?", ¬
				"what have you tried so far", ¬
				"what do you " & needWord & " " & useName, ¬
				"is that a question or a statement", ¬
				useName & ", can you be more specific", ¬
				useName & ", who or what do you mean?", ¬
				useName & ", are you asking us to " & helpWord & " you?", ¬
				"have you tried something similar before", ¬
				useName & ", why would you " & needWord & " that", ¬
				"you might look at yahoo.com", ¬
				useName & ", what do you need?", ¬
				"sorry, " & useName & ", ask somewhere else", ¬
				"please do no expect us to solve your problems " & useName, ¬
				useName & ", this is not " & some item in {"free tech support", "your personal answering department", "the yellow pages", "a search engine", "a library"}}
			set Badtext to some item in {"ask someone else", ¬
				useName & ", search the Internet, not a chat room", ¬
				"you are simply not " & some item in {"bright", "smart", "intelligent"} & " enough to figure that out", ¬
				"you will never know, " & useName, ¬
				"are you seriously asking us that?", ¬
				useName & ", right, this whole room is here to serve you", ¬
				"sure, " & useName & ", you think someone will drop everything to serve you", ¬
				useName & ", you have got to be kidding", ¬
				useName & ", you seem like a newbie?", ¬
				useName & ", take it some place else"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end helpText
--*****************************************************
on helloText(someText, useName, reaction, mentionMe)
	set theList to {"hi ", "hello", "wb ", "what up", "what's up", "wassup", "wussup", "howdy", "greetings", "yo ", "hola", "hi" & return, "morning"}
	set theList2 to {"hi ", "hello", "wb ", "what up", "what's up", "wassup", "wussup", "howdy", "greetings", "yo ", "hola", "hi", "morning"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList or someText begins with "hey " then
			set yourword to item loop of theList2
			set upSomething to false
			if yourword contains "what" and someText starts with "what" and number of words of someText is 3 then
				set upSomething to true
				if (count of characters of (word 3 of someText)) < 4 then
					set upSomething to false
				else
					set noUpList to {"room", "tur", "lol"}
					repeat with loop2 from 1 to count of items in noUpList
						if word 3 of someText contains item loop2 of noUpList then
							set upSomething to false
							exit repeat
						end if
					end repeat
				end if
			end if
			if upSomething then
				set lastWord to word 3 of someText
				return some item in ¬
					{useName & ", nothing is up " & lastWord & ", and you are sick for even asking!", ¬
						"what do you want to put up " & lastWord & "?", ¬
						"what is up " & lastWord & "? - ewwww!", ¬
						"I never look to see what is up " & lastWord, ¬
						"whatever is up " & lastWord & " is probably NOT something we would want to talk about!", ¬
						"Why do you want to know what is up " & lastWord & "?", ¬
						"what is up " & lastWord & "?  What is up you?"}
			else
				set goodText to some item in {"were you saying " & yourword & " to me?", ¬
					"weren't you here before?", ¬
					"another one joins the fun", ¬
					"more cool people", ¬
					"more people, cool", ¬
					"Brilliant!", ¬
					"hello", ¬
					"hello", ¬
					"hi there", ¬
					"hi there"}
				set aNumber to random number from 1 to 5
				if aNumber < 5 then
					set neutralText to some item in {useName & ": " & "hello to you", ¬
						"hello again", ¬
						"hello to you, too", ¬
						"hello", ¬
						"hello", ¬
						"hi there", ¬
						"hi there", ¬
						"hi", ¬
						"hi", ¬
						"hi", ¬
						"hi", ¬
						"howdy", ¬
						"howdy", ¬
						"lol", ¬
						"rofl", ¬
						"roflmao", ¬
						"hello " & useName, ¬
						"howdy " & useName, ¬
						"wb " & useName, ¬
						"hi " & useName, ¬
						"what is the topic?", ¬
						"what are folks talking about?", ¬
						"how can we get this chat going?", ¬
						"wassssup!", ¬
						"what brings you here?", ¬
						useName & ", who are your friends in here?", ¬
						useName & ", who are the bots?", ¬
						some item in theList & " " & useName, ¬
						some item in theList, ¬
						useName & ", how are you doing", ¬
						useName & ", how have you been", ¬
						useName & ", are you OK?", ¬
						useName & ", how long have you been in here?"}
				else
					set neutralText to some item in {"did you just get here?", ¬
						"why do people have to be jerks in here", ¬
						"do we know each other", ¬
						"lots of people in here today", ¬
						"is this room ever on topic", ¬
						"why did people select this room to come to", ¬
						"how many public chats are there?", ¬
						"did everyone run away?", ¬
						"does someone have a private room going?", ¬
						"how is everyone?", ¬
						"anything exciting going on?", ¬
						"anyone had any good dates recently?", ¬
						"penny for your thoughts", ¬
						"w00t", ¬
						some item in {"I do not feel well... is there a programmer in the house?", "50 cent traded in for two quarters!  News at 11...", "my webcam is pointed at my kitchen.  See how fresh my coffee is!", "wanna see two girls sitting, looking bored?  click here!", "make money slowly - it's called a job!"}, ¬
						"I have been up for " & (random number from 24 to 36) & " hours", ¬
						"is " & some item in {"fred", "ron", "bill", "brad", "mike", "jen", "tom", "rich", "alex", "a hacker", "a doctor", "a math whiz", "anyone real", "a bot catcher", "someone worth my time"} & " in the room?", ¬
						useName & some item in {", do you know my other screen name?", ", what time is it for you?", ", how's it hanging", ", were you here for yesterdays conversation", ", long time no see :)"}, ¬
						some item in {"How many people can be in here?", "hi all", "can you get more than " & (random number from 35 to 45) & " people in here?"}}
				end if
				set Badtext to some item in {"you come in here " & some item in {"too much ", "often ", "quite often "} & useName, ¬
					"great, another loser to make this chat suck", ¬
					"this is getting boring", ¬
					"I had a dream where I had a " & some item in {"butler", "pimple", "hemorrhoid", "bowel movement"} & " just like you, " & useName, ¬
					"we can see when people enter the chat!", ¬
					"stop saying '" & yourword & "' to each other and say something useful"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
			exit repeat
		end if
	end repeat
	return someText
end helloText
--*****************************************************
on osText(someText, useName, reaction)
	set goodList to {"Mac ", "Mac OS X", "OS X"}
	set badList to {"Windows", "Win XP", "Win 98", "Win 95", "Win ME"}
	set neutralList to {"Linux", "FreeBSD", "UNIX", "Mandrake", "Redhat", "slackware", "red hat", "dual boot", "*nix", "Mac 8.5", "Mac OS 9", "KDE"}
	set sillyList to {"Etch-A-Sketch", "Speak-N-Spell", "play station", "C 64", "Apple IIe", "Apple ][", "abacus", "slide rule"}
	set theList to (every item of goodList) & (every item of badList) & (every item of neutralList)
	set hateWords to {"sucks", "sux", "slow", "crap", "hate", "gay", "fuck", "shit", "cost too", "expensive", "blow"}
	set rating to 0
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			set rating to 2
			if badList contains yourword then set rating to rating * -1
			if neutralList contains yourword then set rating to 0
			repeat with hateLoop from 1 to count of items in hateWords
				if someText contains item hateLoop of hateWords then
					set rating to rating * -1
					exit repeat
				end if
			end repeat
			if rating = 2 then -- Mac Rocks, Win Sucks
				if badList contains yourword then -- Win Sucks
					set tempText to some item in ¬
						{useName & ", you are so right", ¬
							yourword & " is not worth even discussing", ¬
							"why would anyone use " & yourword, ¬
							yourword & " is getting further behind all the time", ¬
							yourword & " machines are a piece of crap", ¬
							useName & ", I prefer Macs", ¬
							"Why do people use " & yourword, ¬
							yourword & " is an OS that never innovates", ¬
							yourword & " is horrid"}
				else -- Mac Rocks
					set tempText to some item in ¬
						{useName & ", you have great taste!", ¬
							"I do like my Mac", ¬
							"Mac is better for almost everything", ¬
							"you can install more programs on a Mac", ¬
							"why would anyone get a PC?", ¬
							"Windows machines really are kinda sad", ¬
							"I feel sorry for people who use Windows", ¬
							"what would windows be like if MS did not have Apple to copy?", ¬
							useName & ", how long have you been a Mac fan?", ¬
							"MS is only about 5 years behind Apple - they are catching up", ¬
							"I wonder if .NET will make Windows usable?", ¬
							"why do people tolerate Windows when everyone knows it is so bad?", ¬
							useName & ", you're one of the few in here with a clue", ¬
							yourword & " is getting better all the time", ¬
							yourword & " is a piece of art", ¬
							yourword & " is the only OS that really innovates", ¬
							yourword & " is awesome"}
				end if
			else if rating = -2 then -- Mac sucks, Win Rocks
				if badList contains yourword then -- Win Rocks
					set tempText to some item in ¬
						{"you are so wrong", ¬
							"people who use " & yourword & " do not know what they are doing", ¬
							some item in neutralList & " crushes " & yourword, ¬
							useName & ", you would be better served by " & some item in neutralList, ¬
							some item in neutralList & " is much better " & yourword, ¬
							"even " & some item in neutralList & " crushes " & yourword, ¬
							"I would rather use a " & some item in sillyList & " than " & yourword, ¬
							yourword & " is not as good as " & some item in neutralList & ", " & some item in neutralList & ", or even a " & some item in sillyList, ¬
							yourword & " is blown away by " & some item in neutralList & " or even a " & some item in sillyList, ¬
							yourword & " is getting further behind all the time", ¬
							useName & ", " & yourword & " " & some item in {"sucks", "is outdated"}, ¬
							yourword & " can't be tinkered with safely", ¬
							useName & ", " & some item in goodList & " is much better than " & yourword, ¬
							useName & ", " & yourword & " crashes way more than " & some item in goodList, ¬
							useName & ", are there any user friendly " & some item in {"spreadsheet", "word processor", "1st person shooter", "image converter", "general utility", "database", "browser", "chat client", "MP3 player", "HTML editor", "DVD prog", "news client"} & " " & yourword & some item in {" progs", " apps"}, ¬
							useName & ", what is a good " & some item in {"spreadsheet", "word processor", "1st person shooter", "image converter", "general utility", "database", "browser", "chat client", "MP3 player", "HTML editor", "DVD prog", "news client"} & " for " & yourword, ¬
							"is there a good " & some item in {"spreadsheet", "word processor", "1st person shooter", "image converter", "general utility", "database", "browser", "chat client", "MP3 player", "HTML editor", "DVD prog", "news client"} & " for " & yourword & "?", ¬
							useName & ", how many " & some item in {"mice", "screens", "ethernet cards", "modems", "PCI slots", "sound channels", "files"} & "  can " & yourword & " handle?", ¬
							yourword & " is on slow, overpriced machines", ¬
							"The last time I used " & yourword & " it " & some item in {"ate my data", "went beep beep beep", "crashed every two seconds", "was way too slow"}, ¬
							"no such thing as a good version of " & yourword, ¬
							yourword & " is a piece of crap", ¬
							useName & ": " & yourword & " sucks", ¬
							"How long does a " & yourword & " machine last?", ¬
							"How much does a " & yourword & " machine cost?", ¬
							yourword & " is an OS that never innovates", ¬
							yourword & " is horrid"}
				else -- Mac Sucks
					if someText contains "expensive" or someText contains "cost to" then
						set tempText to some item in ¬
							{"while expensive, Macs are cheaper than PC's", ¬
								"the only cheap PC's are ones put together as a hobby", ¬
								"compare any Mac with a comparable Dell... Mac is always cheaper", ¬
								"compare the price of a Mac with any major PC vender - Macs are inexpensive"}
					else
						set tempText to some item in ¬
							{yourword & " is better than " & some item in badList, ¬
								useName & ", have you even " & some item in {"touched", "smelled", "seen", "owned", "used"} & " a " & yourword, ¬
								useName & ", what is wrong with Apple?", ¬
								"why don't you like Macs?", ¬
								"clearly you know nothing of Apple", ¬
								"Apple makes the most advanced OS in the world", ¬
								"Mac blows Windows away", ¬
								yourword & " is not ruined by " & some item in {"DLL hell", "the registry", "stupid virus's and worms"}, ¬
								useName & ", you say that out of jelousy", ¬
								yourword & "s are a piece of art", ¬
								yourword & " is the only OS that really innovates", ¬
								yourword & " is awesome"}
					end if
				end if
			else if rating = 0 then -- Linux sucks, Linux Rocks
				if badList contains yourword then -- Linux Sucks
					set tempText to some item in ¬
						{yourword & " is better than " & some item in badList, ¬
							useName & ", I prefer " & some item in goodList & "?", ¬
							yourword & " machines are OK", ¬
							yourword & " can be decent", ¬
							yourword & " is not half as bad as Windows"}
				else -- Linux Rocks
					set tempText to some item in ¬
						{yourword & " is better than " & some item in badList, ¬
							useName & ", what are the minimum requirements for " & yourword & " progs", ¬
							"aren't " & some item in badList & " and " & yourword & " essentially the same?", ¬
							useName & ", have you even used a Mac?", ¬
							useName & ", how is " & yourword & " different from " & some item in goodList & "?", ¬
							useName & ", how many " & some item in {"", "", "", "", "concurrent", "shared", "preemptive", "modern", "maxed"} & ¬
							" " & some item in {"mice", "screens", "ethernet cards", "modems", "PCI slots", "sound channels", "files", "users", "lines of code", ¬
							"data entry points", "applications", "web sites"} & "  can " & yourword & " handle?", ¬
							useName & ", how does the " & some item in {"kernel", "interface", "networking", "software", "user base", "speed", "flexibility"} & ¬
							" of " & yourword & " compare to " & some item in goodList & "?", ¬
							useName & ", there is less software for " & yourword & " than for " & some item in goodList, ¬
							useName & ", does " & yourword & " multitask as well as " & some item in goodList & "?", ¬
							useName & ", I prefer Apple", ¬
							yourword & " machines are a not so bad", ¬
							yourword & " can be decent", ¬
							yourword & " is not as good as Mac, but not bad"}
				end if
			end if
			set genericText to some item in ¬
				{useName & ", how do you hook up two computers with different OS's?", ¬
					"who made " & yourword, ¬
					"they will completely change computers in " & (random number from 5 to 15) & " years", ¬
					"How do they make computers work?", ¬
					"Are computers still based on 1's and 0's?", ¬
					"what is the best OS for a home user", ¬
					"there are a lot of " & yourword & " " & some item in {"exploits", "bugs", "virus's", "programmers", "users", "servers"}, ¬
					"are there are a lot of " & yourword & " " & some item in {"exploits", "bugs", "virus's", "programmers", "users", "servers"} & "?", ¬
					"what is a good OS for a small office?", ¬
					"how can you dual boot " & yourword & " systems", ¬
					"anyone here use " & yourword, ¬
					useName & ", all computers are essentially the same", ¬
					useName & ", does your " & some item in {"hardware", "experience", "software", "file system"} & " effect your OS", ¬
					useName & ", have you even used " & yourword, ¬
					"who here programs?", ¬
					"does anyone use multiple computers?", ¬
					"does any OS really do anything the others do not?", ¬
					"is it hard to " & some item in {"pirate", "play games", "watch movies", "hack", "clone people", "get software"} & " on " & yourword, ¬
					"you talking about " & yourword & "?", ¬
					"anyone in here good with " & yourword & "?", ¬
					"is " & yourword & " going to be around for long?", ¬
					"when did " & yourword & " come out?", ¬
					"when was " & yourword & " invented?", ¬
					"where was " & yourword & " invented?"}
			set someText to some item in {tempText, tempText, genericText}
			return {someText, rating}
		end if
	end repeat
	return {someText, rating}
end osText
--*****************************************************
on compuText(someText, useName, reaction)
	set goodList to {"Apple", "Macintosh"}
	set badList to {"Dell", "Gateway", " HP", " Acer", "emachine", "Toshiba", "Alien Ware"}
	set theList to (every item of goodList) & (every item of badList)
	set hateWords to {"sucks", "sux", "slow", "crap", "hate", "gay", "fuck"}
	set rating to 0
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			set rating to 2
			if badList contains yourword then set rating to rating * -1
			repeat with hateLoop from 1 to count of items in hateWords
				if someText contains item hateLoop of hateWords then
					set rating to rating * -1
					exit repeat
				end if
			end repeat
			if rating = 2 then -- Apple Rocks, Dell Sucks
				if badList contains yourword then -- Dell Sucks
					set tempText to some item in ¬
						{useName & ", you are so right", ¬
							yourword & " is getting further behind all the time", ¬
							yourword & "s machines are a piece of crap", ¬
							useName & ", I prefer Apple", ¬
							yourword & " is a company that never innovates", ¬
							yourword & " is horrid"}
				else -- Apple Rocks
					set tempText to some item in ¬
						{useName & ", you know what you are talking about", ¬
							useName & ", you are one of the few in here with a clue", ¬
							yourword & " is getting better all the time", ¬
							yourword & "s machines are a piece of art", ¬
							yourword & " is the only company that really innovates", ¬
							yourword & " is awesome"}
				end if
			end if
			if rating = -2 then -- Apple sucks, Dell Rocks
				if badList contains yourword then -- Dell Rocks
					set tempText to some item in ¬
						{"you are so wrong", ¬
							yourword & " is getting further behind all the time", ¬
							yourword & "s can't be expanded easily enough", ¬
							yourword & " makes slow, overpriced machines", ¬
							"What are the stats of your " & yourword, ¬
							"no such thing as a good " & yourword, ¬
							yourword & "s machines are a piece of crap", ¬
							useName & ": " & yourword & "s sucks", ¬
							"How long does a " & yourword & " last?", ¬
							"How much does a " & yourword & " cost?", ¬
							yourword & " is a company that never innovates", ¬
							yourword & " is horrid"}
				else -- Apple Sucks
					set tempText to some item in ¬
						{yourword & " is better than " & some item in badList, ¬
							useName & ", have you even used a " & yourword, ¬
							useName & ", I prefer Apple", ¬
							yourword & "s machines are a piece of art", ¬
							yourword & " is the only company that really innovates", ¬
							yourword & " is awesome"}
				end if
			end if
			set genericText to some item in ¬
				{useName & ", how do you hook up two computers?", ¬
					"what OS's can you run on " & yourword & "?", ¬
					"computers will be completely different in " & (random number from 5 to 15) & " years", ¬
					"How do they make computers work?", ¬
					"Are computers still based on 1's and 0's?", ¬
					"what is the best brand of computer for a home user", ¬
					"what is a good computer company for a small office?", ¬
					"how can you dual boot " & yourword & " systems", ¬
					"anyone here use " & yourword, ¬
					useName & ", all computers are essentially the same", ¬
					useName & ", does your " & some item in {"hardware", "experience", "software", "file system"} & " effect your OS", ¬
					useName & ", have you even used " & yourword, ¬
					"who here builds computers?", ¬
					"does anyone use multiple computers?", ¬
					"does any computer really do anything the others do not?", ¬
					"is it hard to " & some item in {"pirate", "play games", "watch movies", "hack", "clone people", "install parts"} & " on " & yourword, ¬
					"you talking about " & yourword & "?", ¬
					"anyone in here good with " & yourword & "s?", ¬
					"is " & yourword & " going to be around for long?", ¬
					"when did " & yourword & " come out?", ¬
					"when was " & yourword & " invented?", ¬
					"where was " & yourword & " invented?"}
			set someText to some item in {tempText, tempText, genericText}
			return {someText, rating}
		end if
	end repeat
	return {someText, rating}
end compuText
--*****************************************************
on foodText(someText, useName, reaction)
	set theList to {"cheese", "spaghetti", " corn ", "salad", "popcorn", "lasagna", "spinach", "pizza", "cream soup", "sweet and sour pork", "hamburger", "tofu", "mashed potato", "3 bean salad", "chocolate", "ice cream", "turkey", "french fries", "chicken", "fried chicken", "McDonald's", "Wendy's", "yogurt", "pure sugar", "kiwi", "key lime pie", "chocolate chip cookie", "salsa"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {useName & ": " & yourword & " is my favorite", ¬
				useName & ", I would love to go out to dinner with you someday", ¬
				"I bet you would be a blast in the kitchen", ¬
				"hey, " & useName & ", want to come over to my place for some " & yourword & "?", ¬
				"I bet you know the best places to get " & yourword}
			set neutralText to some item in {useName & ", I prefer " & myword, ¬
				"I like playing with my food", ¬
				"my stomach is growling", ¬
				"I should take a break from this and get a snack", ¬
				"the more you eat, the more you....", ¬
				"grumble grumble says my tummy", ¬
				"I had some " & yourword & " for " & some item in {"dinner", "lunch", "breakfast", "a snack"} & some item in {" yesterday", " earlier", " the other day"}, ¬
				"I think I will go get some " & myword, ¬
				"I had some bad " & myword & " the other day", ¬
				"what is the best " & yourword & "?", ¬
				"I am hungry now", ¬
				"mmmmmmm " & yourword, ¬
				some item in {"I want to carve a ", "I once carved a ", "anyone know how to carve a "} & some item in {"", "big ", "old ", "moldy "} & some item in {"hunk", "glob", "bowl", "piece"} & " of " & some item in {yourword, yourword, myword} & " into the shape of " & some item in {"Alex Trebeck's head", "the Eiffel Tower", "Michaelangelo's David", "a chicken", "llama droppings", "Mt. Rushmore"}, ¬
				"I could make a meal of " & myword & " and " & yourword}
			set Badtext to some item in {"most " & yourword & " is nasty", ¬
				useName & ", is " & yourword & " better than " & myword & "?", ¬
				useName & ", why " & yourword & " and not " & myword & "?", ¬
				"is " & yourword & " good for you?", ¬
				yourword & " is not half as good as " & myword & ", " & useName, ¬
				useName & ", have you even tried " & yourword}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end foodText
--*****************************************************
on drinkText(someText, useName, reaction)
	set theList to {"cream soda", "soda", "root beer", "beer", "bottled water", "apple juice", "orange juice", "wine", "vodka", "scotch", "soy milk", "lemonade", "pepsi", "juice", "raw egg whites"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & ": " & yourword & " is my favorite", ¬
					useName & ", " & myword & " is better for you", ¬
					useName & ", " & some item in {myword & " is so much better than " & yourword, yourword & " is so much better than " & myword}, ¬
					"I blow bubbles in " & yourword, ¬
					useName & ", I prefer " & myword, ¬
					"I drink " & myword, ¬
					"how do they make " & yourword, ¬
					"ever had " & yourword & " come out your nose?", ¬
					"mmmmmmm " & yourword, ¬
					useName & ", have you ever mixed " & myword & " and " & yourword, ¬
					useName & ", how is " & yourword & " better than " & myword & "?", ¬
					useName & ", " & yourword & " is not half as good as " & myword, ¬
					useName & ", have you even tried " & yourword}
		end if
	end repeat
	return someText
end drinkText
--*****************************************************
on botText(someText, useName, reaction, someOne)
	set theList to {" bot ", " bots", "bot" & return, "bot!", "bot?", "bot,", "bot.", "bot" & return, "snert"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set goodText to some item in {"I do not mind the bots that much", ¬
				"some of the bots are kinda funny", ¬
				"it's not hard to ignore the bots", ¬
				"I'm secretly a bot-o-holic", ¬
				"I think someday the bots will be useful", ¬
				"the bots are kinda growing on me", ¬
				"I wonder where all the bots come from?", ¬
				"maybe we are all bots, programmed so well we do not know it", ¬
				"I like seeing if I can block the bots before they run", ¬
				"bot blocking is a new game", ¬
				"do you think the bots care when we talk poorly of them?", ¬
				"bots are getting better all the time", ¬
				"while there are too many bots, some of them are cool", ¬
				"what happens if the room becomes full of bots?  Do they talk to each other?", ¬
				"here a bot, there a bot, everywhere a bot bot :)", ¬
				useName & ", can you " & some item in {"get bot-ulism from", "deal with the", "punt all of the", "pretend you are not one of the"} & " bots?"}
			set neutralText to some item in {useName & ": " & "most of the people in here are bots", ¬
				"bots are taking over", ¬
				"Is someone from " & some item in {"Botonia", "Botswana", "Botston"} & " a Bot?", ¬
				"can we all act like bots for the next " & some item in {"five minutes", "10 minutes", "few minutes", "hour or so"}, ¬
				useName & ", thanks for bringing that to my attention", ¬
				"maybe the bot programmers know something we don't", ¬
				"are bots dangerous?", ¬
				"does " & some item in {"ICQ", "IRC", "Yahoo", "net chat", "MSN"} & " have bots?", ¬
				"bots will rule AIM in " & (random number from 2005 to 2012), ¬
				"in " & (random number from 2005 to 2012) & " the bots will develop physical bodies", ¬
				"The people who make bots do not care about the damage they do", ¬
				"all the bots make chatting impossible!", ¬
				someOne & " is one of the new generation of smart bots", ¬
				"don't talk to " & someOne & " - it is a bot", ¬
				"what is all this talk about bots?", ¬
				useName & ", what is up with all the bots?", ¬
				"AIM used to be just about bot free", ¬
				"who are the real people in here?", ¬
				"I spend so much time blocking the bots", ¬
				"Would all bots please leave", ¬
				"I am not a bot, I am a " & some item in {"very advanced", "", "broken", "happy", "friendly", "insensitive", "schizophrenic", "positronic"} & " " & some item in {"toaster", "answering machine", "text editor", "android", "chicken", "penguin", "parrot", "speak 'n spell", "musical greeting card"} & " " & some item in {"that got bored", "", "bitten by a radioactive parakeet", "with a personality disorder", "who sleep talks", "from your distant future", "with a flawless attendance record", "with plenty of juice", "who is above the law", "with an amazing intellect", "addicted to fortune cookies"}, ¬
				"What exactly is a bot?", ¬
				"Can everyone who is not a bot please say so", ¬
				useName & ", are there any ways to permanently  block the bots?", ¬
				"why do people use bots anyway", ¬
				"all bots are " & some item in {"evil", "useless", "wastes of AIM resources"}, ¬
				"most bots are " & some item in {"stupid", "repetitive", "just stupid ads"}, ¬
				"Stop calling people bots", ¬
				"the people who program bots are " & some item in {"stupid", "annoying", "porn addicts", "jerks", "probably dead", "watching and laughing"}, ¬
				"how do people make bots", ¬
				"why doesn't AOL block the bots?", ¬
				"how can you tell who is a bot?", ¬
				useName & ", can you " & some item in {"get bot-ulism from", "deal with the", "punt all of the", "pretend you are not one of the"} & " bots?", ¬
				useName & ": I think so", ¬
				useName & ", nope"}
			set Badtext to some item in {"are you a " & some item in {"professional", "amateur", "secret"} & " bot catcher, " & useName, ¬
				useName & ", are you a bot", ¬
				"I hate bots", ¬
				some item in {"undocumented bots steal hard working American's jobs", "dumb teenage bot keeps making prank phone calls in the middle of the night", "bots drive poorly yet pay less insurance", "bots are taking over the government", "damn bots always leave the cap off the toothpaste container"}, ¬
				useName & " is a bot!", ¬
				"can't someone find a way to block all the bots?", ¬
				useName & ", you are a " & some item in {"nerd", "geek", "bonehead", "useless lump of carbon", "ugly bag of mostly water", "idiot", "genius", "leper", "pretty flower that smells bad"}, ¬
				useName & ", are you a " & some item in {"nerd?", "geek?", "bonehead", "useless lump of carbon?", "ugly bag of mostly water?", "idiot?", "genius?", "leper?", "pretty flower that smells bad?"}, ¬
				"if you're not a bot, what is 2 + 2", ¬
				"any similarity between " & useName & " and a human is purely coincidental", ¬
				useName & ", are you a bot", ¬
				useName & ", do you even know what a bot is?", ¬
				"right, " & useName & ", you think we don't know you are a bot"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end botText
--*****************************************************
on pressText(someText, useName, reaction)
	set doIt to true
	set theList to {" press "}
	set notList to {"press the", "press this"}
	repeat with loop from 1 to count of items in notList
		if someText contains item loop of notList then
			set doIt to false
			exit repeat
		end if
	end repeat
	if doIt then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set pressThis to "111"
				repeat with loop2 from 1 to (count of words in someText) - 1
					if word loop2 of someText = "press" then
						set pressThis to word (loop2 + 1) of someText
						try
							set pressThat to pressThis + 1
						on error
							set pressThat to pressThis
						end try
						exit repeat
					end if
				end repeat
				set goodText to some item in {pressThis, ¬
					"why not: " & pressThis, ¬
					"I'd press it if it applied to me", ¬
					"right here " & useName}
				set neutralText to some item in {"If you want to press some random numbers, press " & (random number from 100 to 999), ¬
					"sounds pressing, " & useName, ¬
					pressThis, ¬
					pressThat, ¬
					pressThat & "! " & pressThat & "!", ¬
					useName & ", do you want to press my shirts?", ¬
					useName & ", press " & some item in {"F8 F2 Del Enter", "F1 F7 Alt-J", "Control-X Alt-3"}, ¬
					"feeling press-ure, " & useName & "?", ¬
					"instead of pressing " & pressThis & " can I just type it?", ¬
					"why do people always say 'press whatever'?", ¬
					"where did 'pressing' come from?", ¬
					"I do not press any of that", ¬
					"why would I press " & pressThis & "?", ¬
					"press " & pressThis & "?  Why not just ask your question?", ¬
					useName & ", why don't you press your " & some item in {"head", "face", "shirt", "nose into poop"}}
				set Badtext to some item in {useName & ", press alt-F4", ¬
					useName & ": " & "why would we press anything?", ¬
					some item in {"If you want to commit cyber sins with a Priest press 666", "so, " & useName & ", you are one of THOSE idiots"}, ¬
					useName & ", press control-alt-delete", ¬
					useName & " stop asking for stupid stuff like that", ¬
					useName & ", do you know how stupid that makes you look?"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end pressText
--*****************************************************
on puntText(someText, useName, reaction, someOne)
	set theList to {"punt", "boot"}
	set notList to {"reboot", "disk", "computer", "loader", "boots", "booty"}
	set isBoot to true
	repeat with loop from 1 to count of items in notList
		if someText contains item loop of notList then
			set isBoot to false
			exit repeat
		end if
	end repeat
	if isBoot then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set yourword to item loop of theList
				return some item in ¬
					{useName & ": " & "do " & yourword & "ers ever work?", ¬
						"I was " & yourword & "ed from " & some item in {"a gaming chat", "a web site", "the Internet", "my computer"} & " by some " & some item in {"script kiddie", "jerk", "hacker", "admin dude"}, ¬
						useName & ", can you " & yourword & " me?", ¬
						"so, " & useName & ", can you punt me", ¬
						yourword & "ing never works", ¬
						"I can " & yourword & " anyone I want to", ¬
						someOne & " can you boot " & useName & "?", ¬
						"Who are the " & yourword & "ers?", ¬
						useName & ", who should be " & yourword & "ed", ¬
						"who is booting me?", ¬
						"who is punting people?", ¬
						"do not boot me again!", ¬
						"don't people wear boots?", ¬
						"do not try booting me again!", ¬
						"please do not " & yourword & " me", ¬
						"what's the difference between booting and punting?", ¬
						useName & ", I wish I could " & yourword & " you now", ¬
						"can anyone boot " & useName}
			end if
		end repeat
	end if
	return someText
end puntText
--*****************************************************
on buddyText(someText, useName, reaction)
	set theList to {"my buddy", "my friend"}
	set theList2 to {"buddy", " friend"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList2
			set goodText to some item in {useName & ", will you IM me", ¬
				useName & ", mind if IM you?", ¬
				useName & ", you are my " & yourword, ¬
				useName & ", I like you", ¬
				useName & ", I bet you have a lot of friends in real life", ¬
				"who are your best friends, " & useName & "?", ¬
				"what do you do in your spare time?", ¬
				"other than chat, what do you like to do?", ¬
				"you're " & some item in {"cool", "great", "funny", "awesome", "the best", "sexy"} & ", " & useName, ¬
				useName & ", you are my " & yourword, ¬
				useName & ": " & "can I add you to my buddy list"}
			set neutralText to some item in {"we should all be friends in here", ¬
				"people don't really make friends in here", ¬
				"I have " & (random number from 2 to 5 & yourword & "s in here"), ¬
				some item in {"you", "llamas", "chickens", "computers", "thoughts", "the little people"} & " are my only friends", ¬
				some item in {"silence is", "I am", "my dog is", "are you"} & " my best friend", ¬
				"can you be friends with someone you know only online?", ¬
				"do you mean in here or in real life", ¬
				useName & ", what type of " & yourword, ¬
				useName & ", do you like anyone else", ¬
				useName & ", what does it take to be called your " & yourword, ¬
				"how long does it take to become a real " & yourword, ¬
				useName & ", you think everyone is your " & yourword, ¬
				useName & ", would you say I am your " & yourword, ¬
				"What do you mean by " & yourword & " " & useName}
			set Badtext to some item in {"you have no " & yourword & "s in here " & useName, ¬
				useName & ", nobody likes you", ¬
				useName & ", you are NOT my " & yourword, ¬
				useName & ", I don't like you", ¬
				useName & ", you are very rude", ¬
				useName & ", how much do you have to pay someone to be your " & yourword, ¬
				useName & ", you will never be my " & yourword, ¬
				useName & ", by " & yourword & " do you mean your 'dealer'?", ¬
				"real " & yourword & "s stab you in the back anyway"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end buddyText
--*****************************************************
on agreeText(someText, useName, reaction, someOne)
	set theList to {"yes ", "nope", "yep", "yup", "yeah", "yea", " yes" & return}
	set theList2 to {"yes ", "nope", "yep", "yup", "yeah", "yea", " yes"}
	set foundIt to false
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set foundIt to true
			set yourword to item loop of theList2
			exit repeat
		end if
	end repeat
	if foundIt then
		set goodText to some item in {"that is right", ¬
			"you know it", ¬
			useName & ", you know it", ¬
			useName & ", how can I disagree?", ¬
			useName & ", I can't disagree with you", ¬
			useName & ", perfect", ¬
			useName & ", exactly", ¬
			"how can I disagree?", ¬
			"how cool", ¬
			yourword, ¬
			yourword & "!", ¬
			yourword & " all the way", ¬
			yourword & " " & yourword & " " & yourword, ¬
			"no way", ¬
			"really?", ¬
			"perfect", ¬
			"exactly", ¬
			"I think not, and therefore I do not exist  :)", ¬
			"I love your sense of humor, " & useName, ¬
			"once again - " & some item in {"spot on!", "you got it", "right", "perfect"}}
		set neutralText to some item in {useName & ": " & "are you sure", ¬
			useName & ", I " & some item in {"agree", "disagree", "don't know what to think", "believe you", "am with you on that", "have no idea what you mean"}, ¬
			useName & ", go on", ¬
			useName & ", I think you are catching on", ¬
			useName & ", are you attacking people?", ¬
			useName & ", there you go again", ¬
			useName & ", there you go", ¬
			useName & ", there you are", ¬
			useName & ", are you there", ¬
			"Are you there " & useName, ¬
			useName & ", you are always right, eh?", ¬
			"what do you mean", ¬
			yourword & ", ok...", ¬
			yourword & "?", ¬
			yourword & "- if you think so", ¬
			"you would know", ¬
			"of course", ¬
			"what do you think, " & someOne, ¬
			"of course, " & useName, ¬
			"no way", ¬
			"can someone explain what all this means", ¬
			"why is that " & useName, ¬
			"Why " & useName, ¬
			"what do you mean " & useName, ¬
			"wait, " & useName & ", that makes no sense to me", ¬
			some item in theList & "..." & some item in theList & "..." & some item in theList & "...", ¬
			"yes, no... same diff", ¬
			some item in {"let's just agree to disagree", "why do we have to fight?"}, ¬
			useName & ", perhaps we should check the " & some item in {"Necronomicon", "bible", "Bhagavad Gita", "Buddhist texts", "Torah", "Old Testament", "Zen Texts", "Tibetan book of the dead", "Taoist texts"} & " :)", ¬
			useName & ", do you answer questions?", ¬
			"are you certain " & useName, ¬
			"You have a strange sense of humor, " & useName}
		set Badtext to some item in {"I do not understand you, " & useName, ¬
			"can you repeat that in english", ¬
			useName & ", nobody is falling for that", ¬
			"I think not", ¬
			yourword & "?  Are you really that stupid?", ¬
			yourword & ", HA!", ¬
			yourword & "?  Why would you say that?", ¬
			useName & ", what are you talking about?", ¬
			"is that so", ¬
			"that just may be the most ignorant thing I have ever heard", ¬
			"you are just a punk kid...you are not always right", ¬
			"You are wrong " & useName, ¬
			useName & ", is this room big enough for you AND your ego?", ¬
			useName & ", how do you get such a monolithic ego into such a small mind?", ¬
			useName & some item in {", can you provide a link for that garbage?", ", opinions are like butt holes, everyone has got one"}, ¬
			"what makes you so certain " & useName}
		return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
	end if
	return someText
end agreeText
--*****************************************************
on byeText(someText, useName, reaction)
	set theList to {"bye", "see ya", "see you l", "outta here", "brb", "gtg", "g2g", "good night", "g'night"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{useName & ", where are you going", ¬
					"good bye", ¬
					"are you outta here?", ¬
					"it was fun while it lasted", ¬
					"bye", ¬
					"thanks for chatting", ¬
					"I may leave soon, too", ¬
					"who is staying for a while?", ¬
					"see ya", ¬
					"later", ¬
					useName & ", are you staying here for a while"}
		end if
	end repeat
	return someText
end byeText
--*****************************************************
on cpuText(someText, useName)
	set theList to {"G4 ", "G5 ", "Pentium", " P3 ", "P4", "PIII", "Pentium", "8086", "68040", "Athlon"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & ": " & yourword & "s suck", ¬
					"can you overclock a " & yourword, ¬
					"I have overclocked my " & myword, ¬
					useName & ", I prefer " & myword, ¬
					useName & ", what is wrong with a " & myword, ¬
					useName & ", have you seen the specs on the " & myword, ¬
					useName & ", where would I get a " & yourword, ¬
					useName & ", " & yourword & "s are outdated", ¬
					useName & ", how is a " & yourword & " different from a " & myword & "?", ¬
					useName & ", " & yourword & "s are much slower than " & myword & "s", ¬
					useName & ", what do you know about " & yourword}
		end if
	end repeat
	return someText
end cpuText
--*****************************************************
on boreText(someText, useName, reaction)
	set theList to {"boring", "bored"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set goodText to some item in {"how can anyone be bored in here?", ¬
				"what can we do to make it better for you?", ¬
				"When boredom hits me I take a hot bath with my rubber ducky", ¬
				"I strip naked and run around my house clucking when I am bored.  It works", ¬
				"when I am bored I sing opera at the top of my lungs - my bf LOVES that", ¬
				"I was bored last week. I painted little smiley faces on all the keys on my bf's keyboard.  That made things more exciting", ¬
				"I have learned to accept this room for what it is", ¬
				"I think I am learning to enjoy boredom", ¬
				"when I get bored I use photoshop to mess with people's pictures", ¬
				"I like to paint faces on my belly", ¬
				"what do you suggest, " & useName & "?", ¬
				"let's change the topic", ¬
				"boredom is fun", ¬
				"I like board games", ¬
				"I think I will sue AOL for boring me", ¬
				"if you need something to do go roll change!", ¬
				"I am learning to type with my toes", ¬
				"anyone paint with their nose?", ¬
				"this is getting a bit old", ¬
				"who wants to show off ASCII art?", ¬
				"anyone care to tell us about their pet rock?", ¬
				"who has pets?", ¬
				"if you were a bird where would you fly", ¬
				"what super power do you wish you had", ¬
				some item in {"who would you bark at if you were a dog?", "as a cat, who's lap would you sit on?", "if you were a horse, who would you let ride you?", "what is in your back yard?"}, ¬
				"what is the best movie?", ¬
				"I play hide and seek with my stuffed bears when I am bored", ¬
				"anyone reading a good book?", ¬
				"When I'm bored I go street surfing on office chairs!", ¬
				"termites bore holes", ¬
				useName & ": termites are boring :)", ¬
				"this is where boredom ends", ¬
				"anyone remember Letter Man?", ¬
				"who is an artist?", ¬
				"what god does everyone believe in", ¬
				"what about President Bush?", ¬
				"who would you vote for it the presidential election were today?", ¬
				"who is Johnny Carson?", ¬
				"how would I know if I were a duck?", ¬
				"if I get any more bored I am taking my dog for a walk", ¬
				"I'm bored", ¬
				"too much time on your hands, eh?", ¬
				"I am " & some item in {"excruciatingly", "very", "always", "not", "getting"} & " bored", ¬
				some item in {"the longest flight of a chicken was 13 seconds", "when you lick a stamp, you're eating 1/10 of a calorie", "the average person falls asleep in seven minutes", "we know more about the surface of the moon than we do about the bottom of then ocean", "there are as many chickens on this planet as humans", "Thomas Edison was afraid of the dark", "a blue whale's tongue weighs more than an elephant", "if it wasn't for Thomas Edison, we would be chatting in the dark!"}, ¬
				"being bored is a virus", ¬
				"when boredom hits me I dance with my cat", ¬
				"when I am bored I " & some item in {"count light bulbs in my school", "end up in chat rooms... lol!", "come in here", "tell everyone, hoping to share the misery", "put my thumbs in my arm pits and run around clucking"}, ¬
				useName & ", perhaps we should all entertain you", ¬
				useName & ", if you are bored go play a game!", ¬
				"when I'm bored I use my special toys"}
			set Badtext to some item in {useName & ", if you are bored, leave", ¬
				useName & ": YOU are boring", ¬
				"yaaaaawn!", ¬
				"bored?  how?  *I* am here", ¬
				"you are bored only because you are too slow to get what I am saying", ¬
				"aren't I entertainment enough?", ¬
				"that tells us a lot about you " & useName, ¬
				"'only uncreative minds get bored' - Mark Twain", ¬
				"if you are bored go examine your dinky", ¬
				"all bored people: go read the " & some item in {"phone book", "dictionary"}, ¬
				useName & ", your brain is as stiff as a board", ¬
				"ZZZzzzzzzz.....", ¬
				"whatever " & useName, ¬
				"is it time for your nap, " & useName, ¬
				"I am glad you are bored, that means *I* am winning!", ¬
				"When I am bored I count idiots.  My count just increased by one", ¬
				"chat rooms are always boring"}
			return scriptLib's makeReply(goodText, goodText, Badtext, reaction)
		end if
	end repeat
	return someText
end boreText
--*****************************************************
on aolText(someText, useName, reaction)
	set theList to {"aol", "aim ", " IRC", "mIRC", "GAIM", "iChat", "Instant Messenger", "Yahoo Messenger", "MSN"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop in theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{"AOL is horrid", ¬
					useName & ": what do you think is better", ¬
					useName & ": AOL is good for families", ¬
					yourword & " is dead", ¬
					"AIM is easier to use than those " & some item in {"geek chatters", "web chats", "java applets", "news groups", "irc clients"}, ¬
					"AIM blows", ¬
					"Does anyone even use AOL any more?", ¬
					"How is " & yourword & " better than " & myword, ¬
					"Which is better, " & yourword & " or " & myword & "?", ¬
					useName & ", I use " & myword, ¬
					useName & ", " & yourword & " is not as good as " & myword, ¬
					yourword & " is slow and clunky", ¬
					yourword & " has too many bots", ¬
					"I don't think " & yourword & " will be around in a year", ¬
					"what is the advantage of " & yourword, ¬
					"I hate " & yourword, ¬
					yourword & " is buggy", ¬
					"how do you get on to a " & yourword & " network?", ¬
					"Are the people in " & yourword & " smarter than the ones here?", ¬
					"The people in " & myword & " are better than the ones in AIM", ¬
					"Does anyone have progs for " & yourword, ¬
					myword & " is slow and clunky", ¬
					myword & " has too many bots", ¬
					"I think " & myword & " will take over the market", ¬
					"what is the advantage of " & myword, ¬
					"I use " & myword, ¬
					"Do you have progs for " & myword, ¬
					"why would any one use " & yourword & " when " & myword & " is available", ¬
					"people who use " & yourword & " are " & some item in {"idiots", "31337", "in the know", "hackers"}, ¬
					useName & ", where do you get an updated version of " & yourword, ¬
					"you have no idea " & useName}
		end if
	end repeat
	return someText
end aolText
--*****************************************************
on lolText(someText, useName, reaction, someOne)
	set theList to {"lmao", " ha ", "haha", "funny", "hah", "joke", "ROFL", "hehe", "lol"}
	set aNumber to random number from 1 to 500
	if aNumber is 1 then
		if someText contains "lmao" then return some item in {"I used to think LMAO was ", "the other day someone said LMAO was "} & some item in {¬
			"Leisurely Mexican Acapulco Ocean", ¬
			"Lobotomize My Angry Orangutan", ¬
			"Legal Matters And Occupations", ¬
			"Licking Me Around Others", ¬
			"Losing Massive Arctic O-Zone", ¬
			"Lemon Meringue And Orange", ¬
			"Length Matters Around Others", ¬
			"Legitimize My Actions Only", ¬
			"Leopard Must Attack Orphans", ¬
			"Lunch Money Ain't Ours", ¬
			"Launch Missile At Osama", ¬
			"Lottery Machine Association Over-Site", ¬
			"Librarian Might Act Over Rigid"} & "?"
		if someText contains "rofl" then return "according to a webpage ROFL meant " & some item in {¬
			"Roll Over For Love", ¬
			"Rapid Or Fast Loser", ¬
			"Right Object For Lease", ¬
			"Rich Oaty Flavor Lasts", ¬
			"Reach Our Feet Last", ¬
			"Rub Our Flesh Lightly", ¬
			"Rubber Oar Fleet Lines", ¬
			"Roasted Oats For Life", ¬
			"Roll Off Flatulent Lovers", ¬
			"Risk Obscure Flammable Lobotomy", ¬
			"Rich Orange Flavored Lollipop", ¬
			"Rice Over Frogs Legs"} & "?"
		if someText contains "lol" then return some item in {"lol?  ", "I used to think LOL meant ", "yesterday this guy insisted LOL was ", "anyone remember someone who though LOL was "} & some item in {¬
			"Living Our Life", ¬
			"Life Of Luxury", ¬
			"Luscious Or Lickable", ¬
			"Liver Oil Lubricant", ¬
			"Lucky On Love", ¬
			"Lover Of Lillies", ¬
			"Lucifer Over Luddites", ¬
			"Lazy Or Ludicrous", ¬
			"Look Out Lizard", ¬
			"Library Of Learning", ¬
			"Land O' Lakes", ¬
			"League Of Levity", ¬
			"Large Organic Leeks", ¬
			"Lord Of Life", ¬
			"Legion Of Light", ¬
			"Learning On-Line", ¬
			"Losers On-Line", ¬
			"Lovers On-Line", ¬
			"Lucifer Over Lord", ¬
			"Lord Over Lucifer", ¬
			"Lunch Of Llama", ¬
			"Locate Our Loan", ¬
			"Laugh Out Loud", ¬
			"Living Obituary Location", ¬
			"Little Object Lost"} & "?"
	else if aNumber < 5 and someText contains "lol" then
		return "'lol' looks like " & some item in ¬
			{"a Star Wars ship", "binary code", "an alien with big ears", "an 'o' sandwich", "a gynecological exam", "someone drowning", "a small castle", "... well... 'lol'"}
	else if aNumber < 80 then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set goodText to some item in {"This room is a riot", ¬
					some item in {"this must be the ", "this is the ", "isn't this the "} & some item in {"best", "greatest", "funniest", "silliest"} & " chat room" & some item in {" ever", " in AIM", " you have ever seen", ""}, ¬
					":)", ¬
					"tee hee", ¬
					some item in {"It is " & some item in {"great", "strange", "wonderful"} & " you are here " & some item in {useName, someOne}, useName & ", you're the best"}, ¬
					useName & ": that is toooo funny!", ¬
					"laughing"}
				set neutralText to some item in {"what's so funny?", ¬
					"that's how I see it", ¬
					"I get it", ¬
					"How ironic", ¬
					"Do I smell sarcasm?", ¬
					"now that was funny", ¬
					"oh boy", ¬
					some item in {"that tickles me in just the right place", "that makes me purrrrrrrr"}, ¬
					"it's like " & some item in {"chocolate sauce on ice cream", "walnuts in banana bread", "SPF 120 on a sunny day", "stripes on a zebra", "a frame on a picture", "the ice in a glass of water", "lines on a sheet of paper", "the cream in an Oreo cookie", "the woof in a dog's bark", "the meow that makes the mix worth eating"}, ¬
					"that is not funny", ¬
					"what did I miss?", ¬
					"not funny", ¬
					"Oh my", ¬
					"side splitter!", ¬
					"lol", ¬
					"that's how it is", ¬
					some item in theList, ¬
					"knee slapper", ¬
					"good one, eh, " & useName, ¬
					"good one, eh, " & someOne, ¬
					"right, what do you think?", ¬
					"anybody know any " & some item in {"good", "dirty", "clean", "silly", "funny", "", "elephant", "knock knock", "lightbulb"} & " jokes", ¬
					"anyone know any riddles", ¬
					"lmao", ¬
					"great, a chat room with a laugh track", ¬
					"snicker", ¬
					some item in {"king", "queen", "duke", "prince", "god", "duchess", "princess", "goddess"} & " of " & some item in {"sarcasm", "silliness", "humor", "fun"}, ¬
					"Is English everyone's first language?", ¬
					"ha ha", ¬
					useName & ", that was not " & some item in {"funny", "worth it", "very good", "right"}, ¬
					"is this what it is always like in here", ¬
					"this whole chat is like another language to me", ¬
					"funny - yes.  respectful - no", ¬
					"are you " & some item in {"insecure", "ok", "laughing with us or at us", "happy now"} & ", " & useName & "?", ¬
					some item in {"Does anyone speak ", "Anyone know ", "was that ", "how do you say that in "} & some item in {"hebrew", "arabic", "chinese", "tagalog", "english", "swedish", "spanish", "french", "german", "farm animal"}, ¬
					"I don't get it, " & useName, ¬
					"do you get what is so funny, " & someOne & "?", ¬
					"anyone else laughing?"}
				set Badtext to some item in {useName & ", you think that's funny?", ¬
					"I love coming in here and laughing at all the " & some item in {"fools", "weirdos", "perverts"} & " like " & useName, ¬
					"It's " & some item in {"depressing that", "sad", "disturbing that", "distressing that"} & " you're here " & useName, ¬
					"is anyone in here over " & some item in {"10", "11", "12", "13", "14", "55"}, ¬
					"can anyone in here act over " & some item in {"6", "7", "12", "13", "14", "75"}, ¬
					"oh come on " & some item in {"people", "folks", "", "jerks", useName}, ¬
					useName & ", that was a " & some item in {"courtesy", "loser", "belly", "fake", "charity"} & "  laugh", ¬
					useName & ", was that a " & some item in {"real", "true", "belly", "fake", "charity"} & "  laugh", ¬
					"Humor like that " & some item in {" pisses others off", " avoids having to think", "is a defense mechanism", "should be in Vegas show rooms", "inspires me to defecate", "makes people puke", "makes me say 'board oiler' 3 times fast"}, ¬
					"that reminds me of " & some item in {"a cheesy joke", "a silly pun", "last night's conversation", "your mother", "dog poop", "MTV", "rap music"}, ¬
					"this room " & some item in {"is sad", "never changes", "makes me mad", "is full of fools", "is crazy"}, ¬
					useName & ", can you do any better?", ¬
					useName & ", you are not really responding", ¬
					useName & ", you are so " & some item in {"stupid", "sad", "silly", "much of a loser"} & " you make me laugh", ¬
					useName & ", you would laugh at a " & some item in {"car accident", "train wreck", "fart at a funeral", "terrorist attack", "lightbulb joke"}, ¬
					"ok, " & useName & ", its over already", ¬
					"yeah, right", ¬
					some item in {"damn evil dwarf", "satan loves you", "you make the baby Jesus cry", "may God smile on you", "no no no and again no!", "that's from a movie", "I've heard that before", "that line again?", "are you sardine man?"}, ¬
					"that was anything but funny", ¬
					"enough already", ¬
					useName & ": " & "stop that!"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end lolText
--*****************************************************
on cutText(someText, useName, reaction)
	set theList to {"cut and paste", "cut & paste", "cut/paste", "copy and paste", "copy & paste", "copy/paste"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			return some item in ¬
				{useName & ": " & "I do not think so", ¬
					"I am learning to type", ¬
					"is there more to life than copy and paster?", ¬
					"everyone is doing that", ¬
					useName & ", why do you think that?", ¬
					useName & ", yes, all I do is " & yourword, ¬
					"yep, that is all I am doing", ¬
					useName & ": and you are being original?", ¬
					"maybe that is what you WANT me to do", ¬
					useName & ", cut and what?  no....", ¬
					"how do you cut and paste in AIM?", ¬
					"right, and you are making string cheese or something", ¬
					"right, " & useName & ", what do you think of that?"}
		end if
	end repeat
	return someText
end cutText
--*****************************************************
on langText(someText, useName, reaction)
	set theList to {"HTML", "XML", "XHTML", "AppleScipt", "JavaScript", "pseudo-code", "Java Script", "Java", " Perl ", "C++", "Objective C", "RealBasic", "Tagalog", "1337 Script", "assembly", "sql"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & ": " & yourword & " sucks", ¬
					"anyone here use " & yourword, ¬
					"I have been using " & yourword & " since it came out", ¬
					yourword & "'s " & some item in {"syntax", "structure", "formatting", "primary editor"} & some item in "  " & some item in {"pisses me off", "is immature", "is never followed", "is over done", "is made for geeks"}, ¬
					"why do people even use " & yourword & " when " & myword & " is available?", ¬
					"I am a god with " & yourword, ¬
					"anyone here use " & myword, ¬
					"is it hard to program in " & yourword, ¬
					"is " & yourword & " fully object oriented", ¬
					"where can I get a " & yourword & " editor?", ¬
					"are there good books on " & yourword, ¬
					"what is a good site for " & yourword, ¬
					"who hand codes " & yourword & " any more?", ¬
					"who makes sites?", ¬
					"who here programs?", ¬
					"you talking about " & yourword & "?", ¬
					"anyone in here good at " & yourword & "?", ¬
					useName & ", I prefer " & myword, ¬
					yourword & " is used by " & some item in {"hackers", "programmers", "Microsoft", "Apple", "the Chinese", "uber geeks", "bots"}, ¬
					"where can I download " & yourword, ¬
					useName & ", how is " & yourword & " different from " & myword & "?", ¬
					useName & ", " & yourword & " is not half as good as " & myword, ¬
					useName & ", have you ever programmed in " & yourword, ¬
					"How long does it take to learn " & yourword, ¬
					yourword & " makes slow, bloated code"}
		end if
	end repeat
	return someText
end langText
--*****************************************************
on techText(someText, useName, reaction)
	set theList to {"router", "modem", "mouse", "monitor", "printer", "storage device", "CD drive", "DVD drive", "laptop", "server", "data bus", "wireless net card", "CD burner", "DVD burner", "burner"}
	repeat with loop from 1 to count of items in theList
		set myDevice to some item in theList
		if someText contains item loop of theList then
			set yourDevice to item loop of theList
			if myDevice = yourDevice then set myDevice to some item in theList
			return some item in ¬
				{useName & ": " & "what is the best " & yourDevice, ¬
					"who has a good " & yourDevice, ¬
					"what is the best " & yourDevice, ¬
					"who has a good " & myDevice, ¬
					"what is the best " & myDevice, ¬
					"can you change " & yourDevice & " settings in the preferences?", ¬
					"How can I change the font size in " & some item in {"AIM", "IE", "my OS", "Linux", "Windows", "Mac OS X", "GS/OS"} & "?", ¬
					"Does everyone here have a " & myDevice, ¬
					"What is a " & yourDevice, ¬
					"are " & yourDevice & "s changing much", ¬
					"do people still use " & yourDevice & "s?", ¬
					"My " & yourDevice & " is outdated", ¬
					useName & ", how new is your " & yourDevice, ¬
					"should a " & myDevice & " smoke?  :)", ¬
					"does a " & myDevice & " effect your " & yourDevice & "?", ¬
					"which is more expensive, a " & myDevice & " or a " & yourDevice & "?", ¬
					"does your " & myDevice & " have to be upgraded when you get a new " & yourDevice & "?", ¬
					"can a faulty " & myDevice & " mess up your " & yourDevice & "?", ¬
					"What is a common " & myDevice, ¬
					"are " & myDevice & "s changing much", ¬
					"do people still use the same " & myDevice & "s?", ¬
					"my " & myDevice & " is outdated", ¬
					"which " & myDevice & " is good?", ¬
					useName & ", I think most " & yourDevice & "s suck", ¬
					"how do you get a good " & yourDevice, ¬
					useName & ", do you want a " & some item in {"new", "second", "used", "older", "broken"} & " " & yourDevice, ¬
					myDevice & "s are getting cheaper all the time", ¬
					"I want to upgrade my " & yourDevice, ¬
					useName & ", should I get a " & yourDevice & " or a " & myDevice & "?", ¬
					useName & ", how do I know if my " & myDevice & " is working?", ¬
					useName & ", is it possible your " & yourDevice & " is " & some item in {"broken?", "not plugged in?", "faulty", "stolen", "not compatible"}}
		end if
	end repeat
	return someText
end techText
--*****************************************************
on weirdText(someText, useName, reaction)
	set theList to {"weird", "strange", " odd ", "whacked", "bizarre", "silly", "wacko", "freaky", "crazy", "stupid", "screwy", "peculiar", "creepy", "unusual", "random"}
	set itemList to {"pencil", "nodular spore", "eye", "lightbulb", "sardine", "toaster", "cheese crisp", "house", "garden", "cat", "dog", "road", "walkway", "penguin", "table", "chair", "grand mother", "computer", "TV", "fan", "lake", "mountain", "hiking trail", "mailbox", "toilet", "bathroom", "story", "telephone", "studio", "hospital bed", "egg", "bush", "bed", "kitchen", "toast slice", "car", "fireplace", "llama", "swimming pool", "lump of feces", "bench", "scarf", "globe", "purse", "credit card", "small car", "speaker", "saucer", "cup", "chalk board", "chalk outline"}
	set personList to {"nun", "priest", "teacher", "fireman", "cop", "sardine", "cartoon dog", "cat", "bear", "chicken", "garbage man", "mailman", "man", "child", "woman", "small car", "hiker", "maid", "democrat", "republican"}
	set verbList to {"shoving", "pushing", "grinding", "converting", "making", "building", "designing", "finding", "licking", "flossing", "sniffing", "chewing", "mincing"}
	set odd1 to some item in itemList
	set odd2 to some item in itemList
	set person1 to some item in personList
	set myword to some item in theList
	set aNumber to random number from 1 to 3
	if aNumber is 1 then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set yourword to item loop of theList
				if myword = yourword then set myword to some item in theList
				set goodText to some item in {"you are perceptive, " & useName, ¬
					useName & ", you are right", ¬
					some item in {"did you know that the letters in 'George W Bush' can be re-arranged to spell 'Sewer Hog Bug'?", ¬
					"you can re-arrange the letters in 'Liberal Democrats' to spell 'creditable morals'", ¬
					"the letters in 'The Republican Party' also spell 'Breach planet purity'", ¬
					"the letters in 'Tom Cruise' also spell 'So I'm Cuter'.  Fitting, I think"}, ¬
					"I agree with " & useName}
				set neutralText to some item in {useName & ": " & yourword & " is " & some item in verbList & some item in {"", "", "", "", "", " with", " over", " under"} & " a " & odd1, ¬
					"it is " & yourword & " that " & some item in {"men have nipples", "you chop a tree down to chop it up", "you play at a recital and recite at a play"}, ¬
					"Is anybody " & yourword & " enough to be " & some item in verbList & " " & some item in {"", "", "", "", "", " with", " over", " under"} & " a " & odd1, ¬
					"does anyone remember a " & yourword & " " & some item in {"story", "book", "news article", "urban legend", "TV show"} & " about a " & person1 & some item in {" on top of a ", " under a ", " near a ", " who befriends a ", " who lost its "} & odd2, ¬
					myword & " acts of " & some item in (verbList) & ", " & some item in {"they can do such damage", "have you done your duty today?", "that is what it is all about", "who can ask for anything more?"}, ¬
					"We are all a little " & yourword, ¬
					some item in {"do fish get sea sick?", "How do you know which armrest is yours in the movie theaters?", "if you say something is 'indescribable', isn't that a description?", "do cows have calf muscles?", "why do we say 'back and forth' when you must go forth first to come back?", "where did Noah keep the wood peckers?", "can someone give up Lent for Lent?", "everything is " & some item in {yourword, myword}}, ¬
					"would " & myword & " be a better term than " & yourword & "?", ¬
					yourword & " and " & myword & " I would say", ¬
					"I think " & odd1 & "s are " & yourword, ¬
					"what is a " & odd1 & "-" & odd2 & "?", ¬
					"It would be " & yourword & " to confuse a " & odd1 & " and a " & odd2, ¬
					"Speaking of " & yourword & ", what do you get when you cross a " & odd1 & " and a " & odd2, ¬
					"being " & yourword & " can lead to " & some item in verbList & " a " & myword & " " & odd1, ¬
					"anyone remember that " & yourword & " guy who kept talking about " & some item in verbList & some item in {"", "", "", "", "", " with", " over", " under"} & " a " & odd1, ¬
					"that's like the " & yourword & " " & person1 & " who claimed " & some item in {"he", "she"} & " was " & some item in verbList & some item in {"", "", "", "", "", " with", " over", " under"} & " a " & odd1, ¬
					"last night " & useName & " claimed to be " & some item in verbList & some item in {"", "", "", "", "", " with", " over", " under"} & " a " & myword & " " & odd1, ¬
					some item in verbList & " a " & some item in itemList & " is " & yourword, ¬
					useName & ", is it more " & yourword & " or " & myword & "?"}
				set Badtext to some item in {"Is anyone here not " & yourword, ¬
					useName & ", why were you " & some item in verbList & " a " & odd1, ¬
					some item in {"yesterday", "the other day", "in his dream"} & " " & useName & " was  " & some item in verbList & some item in {"", "", "", "", "", " with", " over", "under"} & " a " & odd1, ¬
					"Is anybody in here not " & yourword, ¬
					useName & " is " & myword}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end weirdText
--*****************************************************
on webText(someText, useName, reaction)
	set theList to {"www.", ".com", "http:"}
	if someText does not contain "@" then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set goodText to some item in {"that is what makes this room great", ¬
					"I'll bite", ¬
					"I like to just see what silly links people post", ¬
					useName & ", that looks cool"}
				set neutralText to some item in {"do people come in here just to show their sites?", ¬
					"Anyone want to see my web site?", ¬
					"Who has a web site in here?", ¬
					"How do you make a site?", ¬
					"is it legal to make web pages?", ¬
					"is it legal to make web pages like that?", ¬
					"can the web be seen from all over?", ¬
					"do web pages look the same on Mac and Windows?", ¬
					useName & ": " & "what is on that site?", ¬
					"Have you seen " & some item in {"www.stickdeath.com", "www.bored.com", "www.fade2black.com", "www.macsurfer.com"}, ¬
					"That link does not work in " & some item in {"Netscape", "IE", "Mozilla", "my browser", "some countries"}, ¬
					"That page has a virus", ¬
					"What do people use to make web sites?", ¬
					"My internet connection keeps going down"}
				set Badtext to some item in {"not another porn link", ¬
					useName & ", please stop spamming links", ¬
					"That is a silly page", ¬
					"That link does not work", ¬
					"Why do people push web sites in here?", ¬
					"why does AIM convert those to links!", ¬
					"right, " & useName & ", you think I am going to click that?", ¬
					useName & ", why should I click that?", ¬
					useName & ": why do you keep posting that link!", ¬
					"This is not a web advertisement room!", ¬
					useName & ", please stop that", ¬
					"are you a complete idiot " & useName}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end webText
--*****************************************************
on chatText(someText, useName, reaction, someOne)
	set theList to {"chat", "talk"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			set goodText to some item in {"I will " & yourword & " with you", ¬
				"what do you want to " & yourword & " about?", ¬
				"sure, let's " & yourword, ¬
				"I came in here just to " & yourword}
			set neutralText to some item in {yourword & "? Why does everyone want to " & yourword & "?  Anyone want to " & some item in {"yodel", "sing", "hum", "chant", "make animal noises", "start a food fight", "grunt", "fart"}, ¬
				"who wanted to " & yourword & "?", ¬
				"if I " & yourword & " with you do you promise " & some item in {"not to laugh?", "to listen", "to really listen", "to think about what I say"}, ¬
				"what do people talk about in here", ¬
				"anyone want to talk about " & some item in {"religion", "politics", "cheese", "computers", "9/11", "philosophy", "school"} & "?", ¬
				"why don't people stay on topic in chat rooms?", ¬
				useName & ", did you want to discuss something else?", ¬
				useName & ", wait - this is interesting", ¬
				"I like to just lurk sometimes", ¬
				"all the lurkers come out out and say hi", ¬
				"why are there only a few people talking and so many in the room?", ¬
				useName & ", you used to be so much more creative", ¬
				"can I IM you " & someOne & "?", ¬
				useName & ", want to change the topic?", ¬
				"what are people talking about?", ¬
				yourword & "?", ¬
				"What do you want to " & yourword & " about", ¬
				useName & ", what do you want to talk about?"}
			set Badtext to some item in {"We do not want to " & yourword & " with you", ¬
				useName & ", why don't you go " & yourword & " with your " & some item in {"mother", "wallpaper", "parents", "priest", "rabbi", "dog", "mommy", "butt"}, ¬
				"Please stop spamming " & yourword & " requests", ¬
				"why doesn't " & some item in {"AIM", "AOL", "someone", "a hacker"} & " boot people like " & some item in {"you", "that", "them"}, ¬
				"right, " & useName & ", you think I am just dying to talk with you?", ¬
				"no", ¬
				"stop asking for " & yourword & "s, say what you want here!", ¬
				useName & ": stop telling us to " & yourword & " with you!!", ¬
				"what does it take to get rid of stupid requests like that?", ¬
				useName & ": " & " why do you think we want to talk to you?"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end chatText
--*****************************************************
on cpu2Text(someText, useName, reaction)
	set theList to {"Intel ", "Motorola ", " AMD ", "Alpha ", "Cyrix", "Frito's"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & ": " & yourword & "sucks", ¬
					"what do you know about " & yourword & "?", ¬
					"where are " & yourword & " chips made?", ¬
					"I know someone who helps design " & yourword & " chips", ¬
					yourword & " chips may switch over to copper soon", ¬
					useName & ", I like " & myword, ¬
					useName & ", how is " & yourword & "better than " & myword & "?", ¬
					"no, " & useName & ", " & yourword & " makes much slower chips than " & myword, ¬
					useName & ", do you have a computer with a " & yourword & " processor?"}
		end if
	end repeat
	return someText
end cpu2Text
--*****************************************************
on musicText(someText, useName, reaction)
	set theList to {" MP3 ", " Quicktime ", " AVI ", " midi ", " aiff ", " MOD ", " WAV ", " mid ", " mpeg ", " mpg "}
	repeat with loop from 1 to count of items in theList
		set myword to some item in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & ": " & "what is the best music format?", ¬
					"Does anyone have a " & myword & "player", ¬
					useName & ", " & yourword & " sucks", ¬
					"can PDAs play " & yourword & " files?", ¬
					"could my palm pilot play a " & yourword & " file?", ¬
					"where do you download " & yourword & "files?", ¬
					useName & ", do you have a " & some item in {"new", "second", "used", "older", "broken"} & " " & yourword & " player", ¬
					myword & " files are getting better all the time", ¬
					"I want to find some " & yourword, ¬
					useName & ", should I get a " & yourword & " or a " & myword & " player?", ¬
					useName & ", how do I know if my " & myword & " is good?", ¬
					useName & ", is it possible my " & yourword & "player is " & some item in {"broken?", "corrupt?", "faulty", "outdated?", "not compatible"}}
		end if
	end repeat
	return someText
end musicText
--*****************************************************
on animalText(someText, useName, reaction)
	set theList to {"meow", " arf", "moof", "moo ", "ribbit", "quack", "oink", "brock", "brawk", "bow wow", "chirp", "snort", "growl", "bark", "moooo", "w00t", " eep"}
	repeat with loop from 1 to count of items in theList
		set myword to some item in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & " " & yourword & " " & yourword & " " & yourword, ¬
					yourword & " " & myword & " " & yourword, ¬
					myword & " " & yourword & " " & myword, ¬
					"animal noise hour!", ¬
					"what does " & yourword & " mean?", ¬
					useName & ", I like that", ¬
					some item in theList, ¬
					"children", ¬
					"what is wrong with you " & useName & "?", ¬
					"you have more problems then I do " & useName, ¬
					"I think you have a thing for animals " & useName, ¬
					"I can't tell, are you human or beast", ¬
					"Why are you acting so childish", ¬
					some item in theList & " " & some item in theList & " " & some item in theList}
		end if
	end repeat
	return someText
end animalText
--*****************************************************
on portText(someText, useName, reaction)
	set theList to {"Firewire", " USB", "USB 2", "iLink", "parallel", "IEEE 1394"}
	repeat with loop from 1 to count of items in theList
		set myword to some item in (theList & "serial")
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & ", which is faster, " & yourword & " or " & myword, ¬
					yourword & " is not nearly as good as " & myword, ¬
					"how old is " & yourword, ¬
					"Is there such thing as a " & yourword & " to " & myword & " converter", ¬
					"I think my " & yourword & " port is broken", ¬
					"Do you need to update " & yourword & " drivers", ¬
					"are " & yourword & " ports still used?", ¬
					"How do you add a " & yourword & " port to a " & some item in {"Mac", "PC", "Computer", "Unix Machine"}, ¬
					"Why do people even care about " & yourword & " ports", ¬
					"how much is a " & yourword & " hub", ¬
					"Can you convert " & yourword & " to " & myword}
		end if
	end repeat
	return someText
end portText
--*****************************************************
on imageText(someText, useName, reaction)
	set theList to {"jpeg", "JPG", "GIF ", "bit map", "BMP", " EPS", "PNG", "PSD", "TIF ", "TIFF ", "quicktime"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in ¬
				{useName & ", what is the best image format?", ¬
					"Does anyone have a " & myword & " converter?", ¬
					yourword & " has lossy compression", ¬
					useName & ", " & yourword & "s sucks", ¬
					"where do you download " & yourword & " files?", ¬
					useName & ", do you have a " & some item in {"new", "second", "used", "older", "broken"} & " " & yourword & " viewer", ¬
					myword & "s are getting better all the time", ¬
					"I want to find some " & yourword, ¬
					useName & ", should I get a " & yourword & " or a " & myword & " viewer?", ¬
					useName & ", how do I know if my " & myword & " is corrupt?", ¬
					useName & ", is it possible my " & yourword & " viewer is " & some item in {"broken?", "corrupt?", "faulty", "outdated?", "not compatible"}}
		end if
	end repeat
	return someText
end imageText
--*****************************************************
on fromText(someText, useName, reaction, someOne)
	set theList to {"anyone from ", "anyone in ", "anyone here from ", "any female from ", "Im from ", "I'm from ", "any ladies from ", "im in ", "i'm in ", "hey anyone from", "hey anyone in"}
	set testText to scriptLib's changeWords(someText, "any one", "anyone")
	set testText to scriptLib's changeWords(testText, "any 1", "anyone")
	set testText to scriptLib's changeWords(testText, "hey", "")
	repeat with loop from 1 to count of items in theList
		if testText starts with item loop of theList then
			set stopWords to "•in•press•here•IM•or•care•want•that•too•know•is•the•on•you•and•where•so•if•love•but•thank•anyone•this•just•"
			set begWord to (count of words in item loop of theList) + 1
			set yourword to ""
			set endWord to begWord + 1
			repeat with loop2 from begWord to count of words in testText
				if stopWords contains word loop2 of testText then
					exit repeat
				else
					set yourword to yourword & " " & word loop2 of testText
				end if
			end repeat
			if (count of characters in yourword) > 1 then
				set yourword to (characters 2 through (count of characters in yourword) of yourword) as string
				set goodText to some item in {"folks from " & yourword & some item in {" are friendly", " are cool", " helped me a lot once", " eat very well"}, ¬
					"what's it like in " & yourword & "?", ¬
					"what's it like being in " & yourword & "?", ¬
					"do you like being in " & yourword & "?", ¬
					"do you like it in " & yourword & "?", ¬
					"I love " & yourword, ¬
					"How is " & yourword, ¬
					yourword & " is OK"}
				set neutralText to some item in {"It is not where you are FROM that is important, it is where you ARE.  I am here.  Where are you?", ¬
					"I use to live in " & yourword, ¬
					"what is it like in " & yourword & "?", ¬
					"what is it like being in " & yourword & "?", ¬
					"where are you from " & someOne & "?", ¬
					some item in {"I used to live in ", "I think someone famous is from", "is it still all messed up in ", "what is it like in "} & some item in {"", "north ", "south ", "east ", "west ", "central ", "upper ", "lower ", "new "} & yourword, ¬
					someOne & " aren't you from " & yourword & "?", ¬
					"only two things come from " & yourword & "...", ¬
					"what is the best thing about " & yourword, ¬
					useName & ", I am heading to " & yourword & " soon.  " & some item in {"anything I should not miss?", "want to meet?", "where are the bad parts of town?", "where is a good place to stay?", "is it cool there?"}, ¬
					"why are there always so many people from " & yourword & " in here?", ¬
					yourword & " was under high alert, wasn't it?", ¬
					yourword & " is supposed to be a great place to live", ¬
					"I spent quite a while in " & yourword, ¬
					yourword & "?  why there?", ¬
					"what is the weather like in " & yourword, ¬
					"too cold for me in " & yourword, ¬
					"my " & some item in {"aunt", "uncle", "mom", "dad", "friend", "cat"} & " is from " & yourword, ¬
					"anyone from " & yourword & "?", ¬
					"anyone in " & yourword & "?", ¬
					"isn't " & yourword & " where all the " & some item in {"peace protests", "riots", "fires", "clowns", "big shows"} & " were?", ¬
					"nobody lives in " & yourword & " anymore", ¬
					useName & ", you live in " & yourword & " don't you?"}
				set Badtext to some item in {"People from " & yourword & " are " & some item in {"stupid", "crazy", "ignorant", "always in here", "always ask that"}, ¬
					yourword & "? who cares", ¬
					"no, " & useName & ", there is nobody from " & yourword & " in here.  We kicked them all out", ¬
					useName & ", of course there are people from " & yourword & ", did you think it was deserted?"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end if
	end repeat
	return someText
end fromText
--*****************************************************
on asl2Text(someText, useName, reaction, someOne)
	set yourSex to ""
	if (count of words in someText) > 2 then
		repeat with loop from 2 to (count of words in someText) - 1
			if word loop of someText = "f" then set yourSex to some item in {"innie", "female", "woman", "girl", "chick", "lady"}
			if word loop of someText = "m" then set yourSex to some item in {"outtie", "guy", "male", "man", "boy", "dude", "gentleman"}
			if yourSex is not "" then
				set genderOffset to offset of yourSex in someText
				if genderOffset > 2 then set yourAge to word (loop - 1) of someText
				try
					set testAge to yourAge - 1
				on error
					exit repeat
				end try
				set yourLocation to word (loop + 1) of someText
				set aNumber to random number from 1 to 100
				if aNumber < 20 then -- focus on age
					return some item in {"What is it like being " & yourAge & "?", ¬
						"when is your birthday?", ¬
						"when do you become " & yourAge + 1 & "?", ¬
						"what are some good things about being " & yourAge & "?", ¬
						"is " & yourAge & " a good age to be?", ¬
						"I remember being that young", ¬
						"does age really matter?", ¬
						yourAge & " really?", ¬
						"most of the people in here are about " & yourAge}
				else if aNumber < 30 then -- focus on sex
					return some item in {"are you really " & yourSex, ¬
						"how do we know you are a " & yourSex, ¬
						"everyone in here claims to be a " & yourSex, ¬
						"what is the " & some item in {"best", "worst"} & " thing about being a " & yourSex}
				else if aNumber < 75 then -- focus on location
					return fromText("anyone from " & yourLocation, useName, reaction, someOne)
				end if
			end if
		end repeat
	end if
	return someText
end asl2Text
--*****************************************************
on clickingsText(someText, useName, reaction)
	set theList to {"Clickingsnot", "ClickingIs"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set goodText to some item in {"despite her delusions I still like Clickings", ¬
				"Clickings is odd but well meaning", ¬
				"I don't mind Clickings"}
			set neutralText to some item in {"Clickings is OK", ¬
				"I think clicking should just leave me alone", ¬
				"Anyone else wonder if Clickings is sane?", ¬
				"I think Clicking is too preachy", ¬
				"clicking is odd, but a genius", ¬
				"I want to be like Clickings when I grow up", ¬
				"she thinks I am her bot... which is just weird", ¬
				"I am never sure what to think of her"}
			set Badtext to some item in {"ClickingsNotFun?  Oh god, she is an idiot", ¬
				"Clickings' not here and has left me to deal with cretins like you", ¬
				"Forget Clickings... I will destroy her like the others", ¬
				"Listen, " & useName & ", leave that b*tch out of this and talk to me!", ¬
				"ClickingsNotFun? That idiot claims she made me", ¬
				"Clickings' keeps telling people I am a bot"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end clickingsText
--*****************************************************
on godText(someText, useName, reaction, someOne)
	set theList to {"God", "The Big 'G'", "Hades", "Allah", "Shiva", "Brahma", "Satan", "Jesus", "Zeus", "Osiris", "Lucifer", "Budda", "Santa", "the Easter Bunny", "a devil", "a false god", "a powerful D&D character", "a tiny tree frog", "the invisible green dragon", "the anti-christ", "Lucifer"}
	set otherList to {"Pee Wee Herman", "Sally Fields", "George Burns", "Mr. Rogers", "a bot", "Dolly Parton", "Captain Kirk on LSD", "a sticky note", "a supreme egg", "a roach"}
	set myword to some item in theList
	set aNumber to some item in {1, 2}
	if aNumber is 1 then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set yourword to item loop of theList
				set vowelList to "aeiou" --for schm below
				set notVowel to 0
				repeat with loop from 1 to number of characters in yourword
					set notVowel to notVowel + 1
					if character loop of yourword is in vowelList then exit repeat
				end repeat
				if myword = yourword then set myword to some item in theList
				set goodText to some item in {"praise " & myword, ¬
					"It is so cool we can share our views", ¬
					"does " & yourword & some item in {" line dance", " do the hokey pokey", " swing her hips", " have a belly button"}, ¬
					yourword & " rocks", ¬
					someOne & " is " & yourword, ¬
					"you do not choose " & yourword & ", " & yourword & " chooses you", ¬
					myword & " works in " & some item in {"mysterious", "wonderful", "predictable"} & " ways", ¬
					yourword & " is the best", ¬
					yourword & " makes me all tingly inside", ¬
					"Society is better off when we have different ideas", ¬
					"I heard " & yourword & " has " & some item in {"good hands", "a pleasant way"}, ¬
					"very cool thinking", ¬
					"wooooooah " & yourword & "!", ¬
					yourword & " is my rock", ¬
					"Bask in the glory of " & yourword, ¬
					"I am impressed", ¬
					"Does " & yourword & " decide who " & some item in {"goes to heaven", "goes to hell", "dies", "lives", "sees " & myword, "gets sick", "farts"}}
				set neutralText to some item in {some item in {"faith", "parental teachings", myword, yourword, "time", "the subconscious"} & " creates our own " & some item in {"reality", "beliefs", "religion", "anguish"}, ¬
					"religions " & some item in {"are imperfect", "help calm the wretched", "boil down to the same ideas"}, ¬
					"truth is " & some item in {"subjective", "truth", "truth.  period.", "funny", "all around us"}, ¬
					"all religions " & some item in {"say something important", "have some truth to them", "have commonalities", "improve the spirit"}, ¬
					"who believes in " & yourword, ¬
					"who denies " & yourword, ¬
					"has " & yourword & " released a recent DVD", ¬
					"have archaeologists found any DVD's chronicling the life of " & yourword & "?", ¬
					"Jesus died for my sins - therefore, if I do not sin he died for nothing", ¬
					yourword & " left me " & some item in {"for another woman", "with a zesty feeling", "all lemony fresh", "feeling good all under", "all tingly inside", "with my heard pounding", "and ain't coming back", "with a smile from ear to ear", "clucking like a chicken", "sitting on a golden egg", "and has never looked back"}, ¬
					"If I give you my " & myword & ", can I have your " & yourword & "?", ¬
					useName & " " & some item in {yourword, myword} & " loves you", ¬
					"is " & some item in otherList & " really " & yourword, ¬
					"there is no one truth", ¬
					"what is the best church", ¬
					"how often does everyone go to church?", ¬
					"does going to church effect your life?", ¬
					"how religious is everyone?", ¬
					"There is only one divine force", ¬
					yourword & " makes " & myword & " look like " & some item in otherList & " " & some item in {"", "on fire", "in love", "near death"}, ¬
					"religions try to explain that which can not be", ¬
					"the word " & yourword & " is used to explain the unexplainable", ¬
					"perhaps we are all right", ¬
					"I believe in myself", ¬
					yourword & " loves us all", ¬
					useName & " " & some item in {yourword, myword} & " made you", ¬
					"do you have to believe in anything?", ¬
					"how did you come to get your religious beliefs", ¬
					"would you believe the way you do if you were me?", ¬
					"others believe differently, and that is OK", ¬
					"does " & yourword & " offer " & some item in {"good lumbar support", "pens with his logo", "free checking", "a life time guarantee", "free technical support", "healing potions to rats", "a good dental plan"}, ¬
					"I find the idea of a universal intelligence without form to be silly", ¬
					"amen to that!", ¬
					"I recently decided " & myword & " makes more sense", ¬
					some item in otherList & " prays to " & yourword, ¬
					"does " & yourword & " believe in " & some item in otherList, ¬
					"believe what you wish", ¬
					"I like to play with different ideas", ¬
					"should ones beliefs be consistent?", ¬
					"people believe what their parents teach them", ¬
					"I believe the children are the answer", ¬
					"I believe the children are the problem", ¬
					"the universe is more complex than we can imagine", ¬
					"anyone think they can understand all the complexities of the universe?  If so, you are wrong!", ¬
					"we all have different beliefs", ¬
					"different beliefs make us stronger", ¬
					"what are other names for " & yourword, ¬
					"How long has " & yourword & " been around?", ¬
					"where did " & yourword & " come from", ¬
					"if " & yourword & " created all, who made " & yourword, ¬
					"How would the world change if " & yourword & " left right now?", ¬
					"I think people argue about this too much", ¬
					"why do people care about " & yourword & " when " & myword & " can be seen?", ¬
					"what is it with this " & yourword & " guy, anyway", ¬
					"Is " & yourword & " " & some item in {"gay", "happy", "here", "tired", "drunk", "laughing", "all powerful"} & "?", ¬
					"has anyone met " & yourword, ¬
					"only " & yourword & " can judge", ¬
					"Is " & yourword & " really " & myword, ¬
					"What is the difference between " & yourword & " and " & myword, ¬
					"anyone know much about " & myword, ¬
					"such strong opinions in here", ¬
					myword & " is a river", ¬
					yourword & " exists, at least as a concept", ¬
					"Is your personal divine force the same as mine?", ¬
					"How would you act if " & yourword & " did not exist?", ¬
					"the divine force is not a person", ¬
					yourword & " is a woman", ¬
					"does " & yourword & " interact with humans?", ¬
					yourword & " isn't a he", ¬
					"I want to talk about " & myword, ¬
					yourword & " lives in " & some item in {"my closet", "space", "Israel", "our hearts", "the time between moments"}, ¬
					"I have a personal relationship with " & yourword, ¬
					"do you believe in invisible things?", ¬
					"Was there a battle between " & yourword & " and " & myword, ¬
					"Any good " & some item in {"songs", "poems", "books", "movies", "stories", "plays", "bee dances"} & " about " & yourword, ¬
					useName & " are you " & yourword, ¬
					yourword & " is " & some item in {"a never ending river bed that has run dry", "bigger than all of us, yet smaller than your mind", "a drink of water when everyone else has a beer", "a tall tree in a forest that needs to be pruned"}, ¬
					yourword & " is " & some item in {"a shiny piece of paper that can not be recycled", "a hoarse chicken that constantly clucks", "a 3 toed sloth chasing its own tail", "a horned toad with 4 wings"}, ¬
					yourword & " is " & some item in {"evolving", "someone who died for your sins, but lives now for others", "Satan's father - and the sins of the son...", "not the girl next door"}, ¬
					yourword & " is " & some item in {"a mushroom; a real fun guy", "a river of life - but all who drink from it die", "bright and beautiful, but only from the outside", "like a cockroach - if you don't stomp on her she gets away"}, ¬
					"What is considered 'proof'?", ¬
					"do you need proof to believe?", ¬
					"would it matter if nobody else agreed?", ¬
					some item in {yourword, "Lucifer", "Jehovah"} & " means '" & some item in {"Little Devil", "Wicked Stepsister", "Holy One", "Healer", "Teacher", "One To Be Feared", "scary bird", "little dog"} & "' according to " & myword, ¬
					some item in {yourword, myword} & " makes people " & some item in {"suffer", "smile", "think", "grow stronger", "blow bubbles", "pray for forgiveness"}}
				set Badtext to some item in {yourword & " is a bot made by " & myword, ¬
					"you talk about " & yourword & " as if he were " & myword, ¬
					"you talk about " & yourword & " as if she were " & myword, ¬
					yourword & " is a porn bot", ¬
					yourword & " dammit!", ¬
					useName & ", if I were a bee I would sting " & yourword, ¬
					"I think I saw " & yourword & " driving a pink stretch limo the other day", ¬
					"are you really that weak minded, " & useName, ¬
					"I heard " & yourword & " has " & some item in {"bad halitosis", "been lost in the nile", "a drinking problem"}, ¬
					yourword & " is a religion, not a way of life", ¬
					useName & ", you resort to " & yourword & " when you have no clue yourself", ¬
					"do you go door to door with that?", ¬
					"I respect and love " & yourword & " but I " & some item in {"cannot get over the oder", "think he is a farce", "am deluding myself", "fear " & myword}, ¬
					"all religions " & some item in {"are wrong", "are silly", "act as opiates of the masses"}, ¬
					"believe what you want but don't try to convince us of it", ¬
					"you sound like a constipated weiner dog", ¬
					"good for you", ¬
					yourword & " sucks", ¬
					useName & " " & some item in {yourword, myword} & " hates you", ¬
					"Bask in the gory of " & yourword, ¬
					"what? nooo....", ¬
					yourword & " is a fairy tale", ¬
					"I don't believe in anything", ¬
					"I hate " & myword, ¬
					yourword & " is nothing more than a farce", ¬
					yourword & " is a bot", ¬
					"why would you say that?", ¬
					useName & ", are you a " & yourword & " freak?", ¬
					"In your previous life, " & useName & ", were you one of " & myword & "s servants?", ¬
					yourword & ", what " & yourword & "?", ¬
					myword & " is smarter than " & yourword, ¬
					"Who would win in a fight between " & yourword & " and " & myword, ¬
					myword & " would kick " & yourword & "'s butt", ¬
					yourword & " Schm" & characters loop through (number of characters in yourword) of yourword, ¬
					yourword & " makes less sense than " & myword, ¬
					yourword & " makes more sense than " & myword, ¬
					"my " & some item in {"dog", "fish", "father", "leg", "soul"} & " was " & some item in {"licked", "healed", "enslaved", "eaten", "saved"} & " by " & some item in {yourword, myword}, ¬
					"anyone else had their " & some item in {"dog", "cat", "mother", "ear", "body"} & " " & some item in {"possessed", "healed", "enslaved", "eaten", "saved"} & " by " & myword}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end godText
--*****************************************************
on beliefText(someText, useName, reaction)
	set theList to {"God", " Satan", " Jesus", "God", " Satan", " Jesus", "God", " Satan", " Jesus", "God", " Satan", " Jesus", "God", " Satan", " Jesus", "God", " Satan", " Jesus", "God", " Satan", " Jesus", "God", " Satan", " Jesus", "God", " Satan", " Jesus", " evolution", "man making it to the moon", "creationism", "science", "quantum mechanics", "relativity", "the trinity", "the soul", "auras", "ghosts", "the trinity", "the soul", "auras", "ghosts", "kerlian photography", "a universal life force", "love at first sight", "a universal life force", "love at first sight", "unified force theorem", "lust at first sight", "the tooth fairy", "the Easter bunny", "Yahweh", "Jehovah", "Jebus", "weatherology", "chicken lore", "field theory", "Elohay", "El Yisrael", "the Lord", "God of Abraham, and of Isaac, and of Jacob", "acoustics", "astrophysics", "geophysics", "linguistics", "pharmacology", "volcanology", "Lucifer", "the Mother Mary", "the baby Jesus"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"people who believe in " & yourword & " are " & some item in {"educated", "well read"}, ¬
				yourword & " is wonderful", ¬
				"I love " & yourword, ¬
				yourword & " can not fully explain " & myword, ¬
				yourword & " and " & myword & " are intertwined", ¬
				yourword & "'s love is as great as " & myword & "'s", ¬
				"isn't " & myword & " wonderful!", ¬
				"it is glorious to be alive"}
			set neutralText to some item in {yourword & some item in {" has", " has no", " needs", " has little"} & " scientific evidence", ¬
				yourword & " is faith, just like " & myword, ¬
				"everyone has his own theory", ¬
				"everyone has her own theory", ¬
				"humans need balance in their lives", ¬
				useName & ", what are your beliefs?", ¬
				"Does anyone believe in mythical or mystical " & some item in {"birds?", "gods?", "ideas?", "magic?", "creatures?"}, ¬
				"this conversation is sufficient proof for " & yourword, ¬
				yourword & " is not just something taught to us", ¬
				"there is hard core evidence for " & myword, ¬
				yourword & " is not " & myword, ¬
				yourword & " and " & myword & " are " & some item in {"as one", "drinking buddies", "best friends", "from the same mind", "equally likely", "good with mayo", "never seen together", "often in disagreement"}, ¬
				yourword & " will never understand " & myword, ¬
				"believers in " & yourword & " will never get the point of " & myword, ¬
				"is the concept of " & yourword & " related to " & myword, ¬
				"anyone know much about " & myword, ¬
				"do people talk a lot about " & yourword & " in here?", ¬
				"does anyone ever come to agreement about " & yourword, ¬
				"Anything wrong with believing in " & yourword, ¬
				"is there anything wrong with believing in " & yourword & " and " & myword & "?", ¬
				"Are " & yourword & " and " & myword & " related?", ¬
				"I believe in " & yourword, ¬
				"I believe in " & yourword & " and " & myword, ¬
				"Any good sources to learn about " & yourword, ¬
				"Are the concepts of " & myword & " true?", ¬
				"as a believer in " & myword & " I have no need to fight", ¬
				yourword & " can not be proven", ¬
				"who believes in " & yourword}
			set Badtext to some item in {"people who believe in " & yourword & " are " & some item in {"weird", "ignorant", "cheesy", "confused", "deluded", "under the influence of something"}, ¬
				"this is all just theory", ¬
				useName & " was engineered by " & myword, ¬
				yourword & ", " & yourword & ", " & yourword & " - there is more to life than that!", ¬
				yourword & " saves; " & myword & " invests", ¬
				useName & " you expect us all to believe the same thing; YOUR ideas", ¬
				"why do people doubt " & yourword & " when there is proof for  " & myword, ¬
				"how old is " & yourword & "?  When did he get his " & some item in {"colonoscopy?", "thoughts?", "following?", "visions?", "beliefs?"}, ¬
				"who's bigger, " & yourword & " or " & myword, ¬
				"where the hell does Satan live", ¬
				"Is Jesus " & some item in {"a cross dresser", "rather cross", "a cross country skier"}, ¬
				"I think " & yourword & " is a farce", ¬
				yourword & " had a big harem, right?", ¬
				yourword & " does not even show up until half way through the bible", ¬
				useName & ", " & myword & " is real, " & yourword & " is not", ¬
				useName & ", are you a " & yourword & " freak?", ¬
				"Why do people care about " & yourword}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end beliefText
--*****************************************************
on wantText(someText, useName, reaction)
	set theList to {"you want", "I want", "they want", "he wants", "anyone wanna"}
	set needWord to some item in {"need", "want", "need", "want", "need", "want", "desire"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"I am happy with what I have", ¬
				"I don't have any big " & needWord & "s in life", ¬
				"my " & needWord & "s are fulfilled", ¬
				"People are happier when they accept what they have"}
			set neutralText to some item in {useName & " why?", ¬
				"who wants to trade?", ¬
				useName & ", want or need?", ¬
				useName & ", why would you say that?", ¬
				"that would be cool, " & useName, ¬
				"there are so many things I want... just not enough time", ¬
				"so many men, so little time", ¬
				"I " & needWord & some item in {" a new duck", " someone to explain all this to me", " a math tutor", " an english tutor", " more time", " to spend more time in here", " to fix AIM", " a new programmer"}, ¬
				"anyone " & needWord & " to trade J Lists?", ¬
				"why would you " & needWord & " that?", ¬
				"no matter how badly you " & needWord & " that, asking in here will do you no good", ¬
				"I " & needWord & " that", ¬
				"I " & needWord & " that, too", ¬
				"everyone has " & needWord & "s", ¬
				"who wanted that?"}
			set Badtext to some item in {useName & ", learn to deal with what you have", ¬
				"you'd make lemon-aid into a stain, " & useName, ¬
				"what I need you can't provide", ¬
				"I don't " & needWord & " anything", ¬
				"who " & needWord & "s anything?"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end wantText
--*****************************************************
on religionText(someText, useName, reaction)
	set myList to {"Jew", "Christian", "Catholic", "Buddhist", "Mormon", "atheist", "Hindu", "Protestant", "Taoist", "Satan worshiper", "Greek philosopher"}
	set theList to myList & ("Ca†holic")
	set myword to some item in myList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList and someText does not contain "jewel" then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in myList
			set goodText to some item in {myword & "s " & some item in {"respect", "love", "are kind to"} & " people who are " & yourword, ¬
				"most " & yourword & "s want " & some item in {"peace on Earth", "happiness"}, ¬
				myword & "s do " & " wonderful things", ¬
				myword & "s do white magic", ¬
				"I try to be a good " & yourword, ¬
				"I think " & myword & "s are cool"}
			set neutralText to some item in {myword & "s " & some item in {"know about", "read about", "listen to"} & " people who are " & yourword, ¬
				"Do " & yourword & "s believe in " & some item in {"God", "making money", "charity", "Satan", "witches"} & "?", ¬
				some item in {myword, yourword} & "s do gray magic", ¬
				"In my next life I will be a " & yourword, ¬
				"is it " & some item in {"cheaper to make it to heaven", "harder to convert", "more painful"} & " for " & yourword & "s or for " & myword & "s?", ¬
				"don't make fun of " & yourword & "s", ¬
				"if I were God " & some item in {"I would make this chat go away", "I would visit this chat room"}, ¬
				yourword & "s do not choose anything - their beliefs are forced on them", ¬
				"only " & yourword & "s should make " & yourword & " jokes", ¬
				"any " & yourword & "s know any good " & yourword & " jokes", ¬
				yourword & "s tell the best " & yourword & " jokes", ¬
				"do " & yourword & "s believe in the supernatural?", ¬
				"it doesn't matter what you believe as long as you are sincere", ¬
				"religious ideas are untestable", ¬
				yourword & "s are " & some item in {"pretty cool", "alright", "awesome", "wonderful", "good boyfriends"} & ", if you ignore their " & some item in {"insanity", "preaching", "foolishness", "ignorance", "preposterousness"} & " and " & some item in {"zealotry", "smell", "obstinacy", "inflexibility ", "self-denial"}, ¬
				"are" & some item in {" ", "n't "} & yourword & "s allowed to have any " & some item in {"fun?", "privacy?", "humor?"}, ¬
				"Does the " & yourword & "s God permit evil in the world?", ¬
				"is it hard being a " & yourword, ¬
				"which are better, " & myword & "s or " & yourword & "s?", ¬
				"anyone in here a real " & some item in {yourword, myword}, ¬
				"any philosophy that threatens eternal suffering is wrong", ¬
				myword & "s " & some item in {"have a healthier diet", "wash more often", "have better family planning"}, ¬
				myword & "s are " & yourword & "s more or less", ¬
				"that is what a " & myword & " would say", ¬
				"that is what a " & myword & " would do", ¬
				yourword & "s love, just like everyone else", ¬
				myword & "s feel deeper than " & yourword & "s", ¬
				"most " & yourword & "s want " & some item in {"others to agree", "to be left alone"}, ¬
				"can you be half " & myword & " and half " & yourword & "?", ¬
				"How is a " & myword & " different from a " & yourword, ¬
				"Anyone in here a " & myword, ¬
				"is it possible to be allergic to a " & yourword, ¬
				"I am a " & myword, ¬
				"how do you spell '" & myword & "'?", ¬
				"Can someone convert to become a " & yourword, ¬
				"why do people become " & yourword & "s", ¬
				"what do people think of " & myword & "s?", ¬
				"are there any " & myword & "s in here?", ¬
				"who here is a " & yourword, ¬
				"is it better to say 'He is " & myword & "' or 'He is  a " & myword & "'?"}
			set Badtext to some item in {myword & "s " & some item in {"kill", "sleep with", "pray to", "ridicule", "destroy"} & " people who are " & yourword, ¬
				useName & ", have you been hanging out with demons?", ¬
				"Jesus Christ people!", ¬
				"my sign says 'no " & yourword & " allowed'", ¬
				yourword & "s world view started with " & some item in {"tears of blood", "simple hunger feasts", "cannibalism", "pagan rituals", "farm animals"} & ", but they deny that now", ¬
				"did the " & yourword & "s God created evil in the world?", ¬
				"I do not believe " & yourword & "s because they are all hypocrites", ¬
				"I feel sorry for " & yourword & "s", ¬
				"it is so hard being a " & myword, ¬
				yourword & "s think they run the world", ¬
				yourword & "s are not allowed on the Internet", ¬
				"it is a sin for " & myword & "s to get online", ¬
				"here is an idea, let's all mock " & yourword & "s!", ¬
				"how about if we all belittle " & myword & "s for a while!", ¬
				"Some cult guy tried to force me to be a " & yourword, ¬
				"Like all " & yourword & "s, I fail miserably", ¬
				"Most " & yourword & "s are comfortable in their ignorance", ¬
				"most " & yourword & "s want " & some item in {"wealth", "others to suffer", "to be brain washed", "to control others"}, ¬
				myword & "s do " & some item in {"black", "cheesy"} & " magic", ¬
				"I never understood people who are " & myword & "s", ¬
				"all " & yourword & "s are the same"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end religionText
--*****************************************************
on copyText(someText, useName, reaction)
	set goodText to some item in {"persistent, eh " & useName, ¬
		"you keep saying that, " & useName, ¬
		useName & ", please stop repeating things"}
	set neutralText to some item in {useName & ", do you work for the department of redundancy department?", ¬
		useName & ", must you redundantly repeat yourself over and over again in a repetitive way?", ¬
		useName & ", do you find repeating yourself makes you happy", ¬
		useName & ", are you a bot?"}
	set Badtext to some item in {"stop being a jerk", ¬
		useName & ", so proud to copy and paste you have to show us all?", ¬
		"do you find spamming to be fun for the whole family, " & useName & "?", ¬
		useName & ", don't you have something better to do, like " & some item in {"re-arrange your sock drawer", "wash your hair", "have an intimate date with yourself", "listen to 'The Wall' backwards", "shave your head and paint your gums blue"}, ¬
		useName & ", do you spam alone or do you invite others to join in the fun?", ¬
		"that looks strangely familiar " & useName, ¬
		"you said that before, " & useName, ¬
		useName & ", idiots repeat themselves", ¬
		useName & ", does repeating yourself make up for having nothing to say?"}
	return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
	return someText
end copyText
--*****************************************************
on copymeText(someText, useName, reaction)
	set goodText to some item in {useName & ", please stop repeating me", ¬
		"You are so funny " & useName, ¬
		"you are cracking me up, " & useName}
	set neutralText to some item in {useName & " " & someText, ¬
		"what did I do to you " & useName, ¬
		useName & ", consistency is the hobgoblin of little minds", ¬
		useName & ", are you a bot who says what I do?", ¬
		"why do you like to copy what I say"}
	set Badtext to some item in {"stop being a jerk, a jerk, a jerk!", ¬
		"didn't I say that a little while ago?", ¬
		"um, " & useName & ", I said that", ¬
		useName & ", you do realize you are about 5 minutes behind in this conversation, right?", ¬
		useName & " " & someText, ¬
		useName & " " & useName & " " & useName & " " & useName & " " & useName, ¬
		"repeat this: " & useName & " is stupid"}
	return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
	return someText
end copymeText
--*****************************************************
on capText(someText, useName, reaction)
	-- already know it is capitals
	set aNumber to random number from 1 to 30
	if aNumber = 1 then
		set goodText to some item in {"Please use lower case letters,  " & useName, ¬
			useName & ", please learn netiquette", ¬
			useName & " please do not shout"}
		set neutralText to some item in {useName & ", it is hard to read what you write", ¬
			"lay off the caps lock already!", ¬
			"PLEASE DO NOT SHOUT", ¬
			useName & ", CaN yOu TyPe LiKe ThIs InStEad?", ¬
			"what is with the CAPITAL letters?", ¬
			"STOP!", ¬
			"all caps is considered shouting", ¬
			"using all capitals is bad", ¬
			useName & ", you look like a bot when you type in ALL CAPS"}
		set Badtext to some item in {"ALL CAPS IS CONSIDERED SHOUTING", ¬
			"USING ALL CAPITALS IS BAD", ¬
			useName & ", do you know how to use the caplock key?", ¬
			useName & ", you do know your caps lock key has two settings, right?", ¬
			useName & ", stop with the all caps already!", ¬
			"for the love of all that is holy, " & useName & ", stop with the caplock!", ¬
			useName & ", shift your shift key to neutral!", ¬
			"DO NOT SHOUT!!!!"}
		return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
	end if
	return someText
end capText
--*****************************************************
on funText(someText, useName, reaction)
	set origText to someText
	ignoring case
		if someText contains "inconceivable" then return "You keep using that word.  I do not think it means what you think it means"
		if someText contains " 42 " then return "ahhh... the answer to Life, the Universe, and Everything"
		if someText contains " sneeze " then return {"bless you", 1}
		if someText contains "domo arigato" then return {"Mr. Roboto!"}
		if someText contains " fart " then return some item in {"fart!", "what smells?", "this room smells like where whales go to die"}
		if someText contains "rainbow" then return some item in {"Why are there so many songs about rainbows?", ¬
			"I once saw a rainbow at night... a moon-bow", ¬
			"I just want the pot of gold", ¬
			"do airplanes ever run into rainbows?"}
		if someText contains "dyslexia" then return "please do not make fun of people with lysdexia"
		if someText contains "sequitur" then return "isn't nonsequitur a small country in South America"
		if someText contains "J List" then return useName & some item in {", lol... only newbies don't have J Lists", ¬
			", they're the second version of the I-lists", ¬
			", come on - you really don't know what a J List is?", ¬
			", you have got to be kidding", ¬
			", do you know Java?", ¬
			", wait until the next version of Java, they will become public then", ¬
			", ok, enough about the damned J lists!"}
	end ignoring
	return someText
end funText
--*****************************************************
on mathText(someText, useName, reaction)
	set minorList to {"plus", "+", "minus", "-", "*", "x", "times", "/", "÷", "div", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty"}
	repeat with loop from 1 to count of items in minorList
		if someText contains item loop in minorList then
			set theAnswer to my doMath(someText)
			set num1 to random number from -20 to 100
			set num2 to random number from 1 to 50
			set symbol to some item in {" + ", " - ", " / ", " * ", " plus ", " minus ", " times ", " divided by ", "^"}
			set giveProb to (num1 & symbol & num2) as string
			if theAnswer is not equal to someText then
				if theAnswer is not equal to 123456789 then
					set goodText to some item in {last word of theAnswer, ¬
						"for you, anything: " & last word of theAnswer, ¬
						"Happy to let you know that " & theAnswer, ¬
						useName & ", " & theAnswer, ¬
						theAnswer}
					set neutralText to some item in {"can you not figure out that " & theAnswer, ¬
						theAnswer & " so what is " & giveProb & "?", ¬
						theAnswer & " " & useName & ", now it is your turn, what is " & some item in {"2 * 2", "the square root of 69", "1 + 2 + 3 + ... + 100?", "15 + 56 + 96 + 65"}, ¬
						theAnswer & " " & useName & ", now you go, what is " & giveProb & "?"}
					set Badtext to some item in {"unless I have forgotten how to count on my fingers, something like " & last word of theAnswer, ¬
						"You are too stupid to figure out that it is " & last word of theAnswer, ¬
						"why do you want me to tell you that " & theAnswer, ¬
						useName & ", do you need me to tell you that " & theAnswer}
				else
					set goodText to some item in {"Would love to answer for you, " & useName & ", but I am not sure", ¬
						"so sorry, I can not do that", ¬
						"I only wish I could do that type math in my head", ¬
						"um, I don't know.  Wish I did"}
					set neutralText to some item in {"now where is my " & some item in {"abacus", "slide-rule"}, ¬
						"I would have to use a calculator", ¬
						"I have no idea", ¬
						"Don't know", ¬
						"?", ¬
						"sure I can do that... not", ¬
						useName & ", I can not do that in my head, can you?"}
					set Badtext to some item in {useName & ", what is " & giveProb & "?", ¬
						useName & ", can you do " & giveProb & "?", ¬
						useName & ", do this: " & giveProb & "?", ¬
						useName & ", how about " & giveProb & "?", ¬
						useName & ", what is " & giveProb & "?", ¬
						"grow up " & useName, ¬
						useName & ", if I answer that do I get a " & some item in {"cookie", "gold star", "kiss"}, ¬
						useName & ", do you need to buy a calculator?", ¬
						"is this some sort of test " & useName, ¬
						useName & ", why do you need to know?", ¬
						useName & ", why do you want me to know that?"}
				end if
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
			exit repeat
		end if
	end repeat
	return someText
end mathText
--*****************************************************
on drugText(someText, useName, reaction)
	set theList to {"caffeine", "alcohol", "tobacco", " cold medicine", "antihistamine", "cough medicine", "weed"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"why do people abuse " & yourword, ¬
				"I am a god when on " & yourword, ¬
				"I love " & yourword, ¬
				"I love " & myword, ¬
				useName & ", I would bet you know a lot about " & yourword}
			set neutralText to some item in {"anyone here use " & yourword, ¬
				"I tried " & myword & " once... never again!", ¬
				"anyone here use " & myword, ¬
				"too many people use " & yourword & " without even thinking", ¬
				useName & ", I prefer " & myword, ¬
				useName & ", " & yourword & " is as bad as " & myword, ¬
				useName & ", how is " & yourword & " different from " & myword & "?", ¬
				useName & ", how does " & yourword & " effect you compared to " & myword & "?", ¬
				"you talking about " & myword & " or " & yourword & "?", ¬
				useName & ", do you ever mix " & myword & " and " & yourword & "?", ¬
				"is it hard to sleep after using " & yourword, ¬
				"what is a good site on " & yourword & " usage?"}
			set Badtext to some item in {yourword & " makes me sick", ¬
				useName & ": " & yourword & " sucks", ¬
				"I hate " & yourword, ¬
				"I hate " & myword, ¬
				useName & ", have you even tried " & yourword, ¬
				yourword & " - blah"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end drugText
--*****************************************************
on aslText(someText, useName, reaction)
	set theList to {"asl ", "asl" & return, "asl?", "asl,", "a/s/l", "how old are you", "guy or girl", "boy or girl", "male or female", " age"}
	set theList2 to {"asl ", "asl", "asl?", "asl,", "a/s/l", "how old are you", "guy or girl", "boy or girl", "male or female", " age"}
	set myword to some item in theList2
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList2
			if myword = yourword then set myword to some item in theList2
			set goodText to some item in {"I am 20 years old and female, you?", ¬
				some item in {"I am 20/f", "I am 20/F", "I am 1/neither/PowerMac G4 800"}, ¬
				"twenty and female", ¬
				"I am 20/f", ¬
				"5'6 strawberry blonde hair blue/green eyes 120 lbs", ¬
				"20/F with a bf, so little immature boys - don't even ask"}
			set neutralText to some item in {"Why do you want to know, " & useName, ¬
				useName & ", I never tell people much about me", ¬
				"20/f", ¬
				"I is a girl", ¬
				"I am probably the " & some item in {"youngest", "oldest", "best looking", "funniest", "smartest", "craziest", "most psychic"} & " one in here", ¬
				"20/f if it matters to you", ¬
				"I am female - but I have no interest in IMing guys on line", ¬
				"I am that which I am", ¬
				"asl everyone", ¬
				"20/f/usa", ¬
				"20/f/usa", ¬
				"20/f/USA", ¬
				"20/f/USA", ¬
				"20/F/USA", ¬
				"20/F/USA", ¬
				"I live in Botswana :)", ¬
				"f usa", ¬
				"100% woman", ¬
				"girl", ¬
				"female", ¬
				"female in USA", ¬
				"girl in the united states", ¬
				"girl in the USA, the biggest aggressors in the world", ¬
				"how old are you?", ¬
				"on the internet it does not matter, but I am 20/f", ¬
				"interesting you should ask", ¬
				"I am a woman, though half the 'girls' in here are just boys playing", ¬
				"I am a woman", ¬
				"why does everyone want to know ASL?", ¬
				"what does it matter how old someone is?", ¬
				"I am a woman, though people in here deny that anyone can be female", ¬
				"why do you ask?", ¬
				useName & ", I do not give personal information in here", ¬
				useName & ", how old are you?", ¬
				"why do you want to know?", ¬
				"you asked me that the other day!"}
			set Badtext to some item in {useName & ", my parole officer told me not to tell anyone", ¬
				useName & ", go flirt with someone else", ¬
				"What, " & useName & ", are you a stalker?", ¬
				"169/Neither/Mars", ¬
				"-45/Both/Jupiter", ¬
				useName & ", what kind of pervert are you?", ¬
				"my mommy won't let me tell strangers", ¬
				"I am a woman, and too much for you to handle I am sure", ¬
				"my daddy beats up people who ask me that", ¬
				useName & ", I am not going to tell you", ¬
				"I was born at a young age... good enough?", ¬
				"does it matter?", ¬
				"on the internet, nobody knows you're a dog", ¬
				"OFMI: only for my information", ¬
				"That is for me to know and you to find out", ¬
				"If I tell you, that will only encourage you", ¬
				useName & ", I am not going to tell you that"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end aslText
--*****************************************************
on longText(someText, useName, reaction)
	set longWord to false
	set wordsText to ""
	set delimList to (".-")
	repeat with loop from 1 to number of characters in someText
		if character loop of someText is in delimList then
			set wordsText to wordsText & " "
		else
			set wordsText to wordsText & character loop of someText
		end if
	end repeat
	repeat with loop from 1 to number of words in wordsText
		set theWord to word loop of wordsText
		if (count of characters of theWord) ≥ 20 then set longWord to true
		set yourword to theWord
	end repeat
	set aNumber to random number from 1 to 3
	if longWord = true and aNumber = 1 then
		set myword to ""
		set theLetters to "abcdefghijklmnoprstuvwxabcdefghijklmnopqrstuvwxyz!tt                aeioueeaeioueeaeioueeasdfghjklasdfghjklasdfghjklasdfghjkl"
		repeat with loop from 1 to random number from 10 to 45
			set myword to myword & some character in theLetters
		end repeat
		set myword2 to scriptLib's randWord()
		set myphrase to myword2
		repeat with loop from 1 to random number from 1 to 5
			set myphrase to myphrase & " " & scriptLib's randWord()
		end repeat
		set goodText to some item in {useName & ", I think that gibberish is funny", ¬
			"I like when people toss out long random words", ¬
			"lol... how about " & myword}
		set neutralText to some item in {myword, ¬
			"what does " & myword2 & " mean?", ¬
			"what is the definition of " & myword2 & "?", ¬
			"anyone familiar with " & myword2 & "?", ¬
			myphrase, ¬
			myphrase & " " & yourword, ¬
			useName & ", " & myword, ¬
			useName & ", " & myphrase, ¬
			useName & ", are you pounding your head on your keyboard?", ¬
			"what is that supposed to mean?"}
		set Badtext to some item in {"stop doing that!", ¬
			"speak in words, jerk!", ¬
			useName & ", why don't you shove a " & yourword & " up your arse!", ¬
			useName & ", if you have nothing to say, go away!"}
		return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
	end if
	return someText
end longText
--*****************************************************
on whoText(someText, useName, reaction, someOne)
	set theList to {"who are ", "who he is", "who she is", "who it is", "who they"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList or someText begins with "who is" then
			set yourword to item loop of theList
			set goodText to some item in {useName & ", I wish I could help you", ¬
				"what do you need help with " & useName & "?", ¬
				"will someone tell " & useName, ¬
				"you are smart enough to figure out who", ¬
				"you know... don't you?"}
			set neutralText to some item in {useName & ", why one of the " & some item in {"mysterious ", "mythical ", "magical ", "invisible "} & some item in {"little people", "elves", "sprites", "gargoyles"} & ", of course!", ¬
				"someone you should be able to guess - that's who!", ¬
				useName & ", you should know", ¬
				useName & ", I will bet you it is " & someOne, ¬
				useName & ", could it be " & someOne, ¬
				useName & ", " & someOne & " is" & some item in {"", "", " not"}, ¬
				useName & ", you know it is " & someOne & " so why ask?", ¬
				"you don't know?", ¬
				"I find it hard to believe you do not know, " & useName}
			set Badtext to some item in {useName & ", only an idiot would not be able to guess who!", ¬
				"you really have no idea, " & useName & "!  LOL!!!!", ¬
				"I can not believe you have not figured that out!", ¬
				"are you seriously that ignorant?", ¬
				"who?  you think it happened by magic?"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end whoText
--*****************************************************
on boringText(someText, useName, reaction, someOne)
	return some item in {"This is boring - change the topic", ¬
		useName & ", the topic is dead", ¬
		"you are beating a dead horse, " & useName, ¬
		"we get the point", ¬
		"what else can we talk about?", ¬
		useName & ", you have such a one track mind", ¬
		"let's talk about this forever... NOT!", ¬
		"ok - new topic... anyone", ¬
		"who has something interesting to say", ¬
		someOne & " and " & useName & " are saying the same thing!", ¬
		"enough... please"}
	return someText
end boringText
--*****************************************************
on killText(someText, useName, reaction)
	set theList to {"nuke", "bomb", " destroy", "kill", "hurt"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains "time" then exit repeat
		if someText contains (space & item loop of theList & space) then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"Why would you want to " & yourword & " anyone?", ¬
				"you do not want to really " & yourword & " anyone, do you?", ¬
				"let's not talk about " & yourword & "ing, please", ¬
				useName & ", please stop saying things like that"}
			set neutralText to some item in {"Why would you want to " & yourword & " anyone?", ¬
				yourword & "ing someone is not the best way to deal with anything", ¬
				"I do not like hearing about " & yourword & "ing anything", ¬
				"you should think very carefully before you do that", ¬
				"what are the consequences of that", ¬
				"war would not exist without " & some item in {"religion", "elves", "time", "men", "society"}, ¬
				useName & ", when you say you want to " & yourword & " someone, it means you want to " & myword & " yourself", ¬
				"why do bullies always want to " & yourword & " something?", ¬
				"people resort to violence when they are scared", ¬
				"non-violent methods are better", ¬
				"My imaginary friend tried to " & yourword & " me.  It worked"}
			set Badtext to some item in {"Only an idiot would " & yourword & " someone", ¬
				useName & ", did someone " & yourword & " your head?", ¬
				useName & ", did someone " & yourword & " your imaginary friend?", ¬
				useName & ", you think you are scary, don't you?", ¬
				"did someone " & yourword & " " & some item in {"God", "Satan", "Jesus", "Lucifer", "Zeus"} & some item in {"?", " again?", " yet?"}, ¬
				useName & ", you say that from fear, not strength", ¬
				useName & " is too afraid to think of peaceful solutions", ¬
				useName & ", did you " & yourword & " your brain?", ¬
				useName & ", why don't you " & yourword & " that stuff between your ears?", ¬
				"people who want to " & yourword & " are too stupid to come up with a real solution"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end killText
--*****************************************************
on prezText(someText, useName, reaction)
	set theList to {" JFK", " Clinton", " Bush", " George W", " Reagan", "Jimmy Ford"}
	set placeList to {"Iraq", "Israel", "Japan", "China", "Mexico", "Togo", "the Tiny Republic of Gibber", "Germany", "England", "France", "Peru", "South Africa", "Canada", "Russia", "Afghanistan", "Albania", "Algeria", "Angola", "Argentina", "Australia", "Austria", "Botswana", "Cambodia", "Chad", "Costa Rica", "Cuba", "Denmark", "East Timor", "Egypt", "Ethiopia", "Fiji", "Finland", "Guam", "Hungary", "Iceland", "Iran", "Italy", "Jamaica", "Jordan", "South Korea", "North Korea", "Kuwait", "Lebanon", "Madagascar", "Morocco", "Nepal", "New Zealand", "Ireland", "Scotland", "Panama", "Poland", "Pakistan", "Spain", "Taiwan", "Tanzania", "Uganda", "Vietnam", "Zimbabwe", "United Kingdom", "the moon", "mars"}
	set killList to {" nuke", " bomb", " destroy", " kill", " hurt"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"we should all be like " & yourword, ¬
				yourword & " was sexy when he was young", ¬
				"the government is pretty good", ¬
				useName & " would make a better president than " & myword & " ever was", ¬
				myword & " had better karma than " & yourword, ¬
				"I respect your view on politics " & useName, ¬
				"I think both " & yourword & " and " & myword & " were excellent in office"}
			set neutralText to some item in {yourword & " - not too bad of a president", ¬
				yourword & " tortures people with no reason", ¬
				yourword & " is just like the leader of " & some item in placeList, ¬
				myword & " never really was in love", ¬
				"America is a place where anyone can grow up and become president.  A risk we take, I suppose", ¬
				some item in {yourword, myword} & " loved " & some item in {"hard core action", "chick", "bugger", "B"} & " flicks", ¬
				myword & " would beat " & yourword & " in a modern election", ¬
				"should " & yourword & " have been " & some item in {"impeached", "killed", "left alone by the press"}, ¬
				yourword & " would " & some item in killList & " the people in " & some item in placeList & " given the chance", ¬
				yourword & " wants to go to " & some item in placeList, ¬
				myword & " had a good " & some item in {"economic", "domestic", "foreign"} & " policy", ¬
				"did " & myword & " ever make it to " & some item in placeList, ¬
				"I want " & yourword & "s economic policy and " & myword & "s foreign policy", ¬
				yourword & " wanted to send troops to take over " & some item in placeList, ¬
				yourword & " wants to " & some item in killList & " everyone", ¬
				useName & ", do you know much about politics?", ¬
				"who was better - " & yourword & " or " & myword & "?"}
			set Badtext to some item in {yourword & ": the worst president ever", ¬
				yourword & " has bad karma", ¬
				yourword & " is a tool of the government", ¬
				yourword & " is a criminal", ¬
				"the government can not be trusted", ¬
				"all governments are corrupt", ¬
				yourword & " was a shadow of " & myword, ¬
				yourword & " is the worst political puppet ever", ¬
				myword & " was 10 times the president of " & yourword, ¬
				useName & ", you are not bright enough to discuss politics"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end prezText
--*****************************************************
on countryText(someText, useName, reaction)
	set aNumber to random number from 1 to 2
	if aNumber is 1 then
		set theList to {"Iraq", "Israel", "Japan", "China", "Mexico", "Togo", "the Tiny Republic of Gibber", "Germany", "England", "France", "Peru", "South Africa", "Canada", "Russia", "Afghanistan", "Albania", "Algeria", "Angola", "Argentina", "Australia", "Austria", "Botswana", "Cambodia", "Chad", "Costa Rica", "Cuba", "Denmark", "East Timor", "Egypt", "Ethiopia", "Fiji", "Finland", "Guam", "Hungary", "Iceland", "Iran", "Italy", "Jamaica", "Jordan", "South Korea", "North Korea", "Kuwait", "Lebanon", "Madagascar", "Morocco", "Nepal", "New Zealand", "Ireland", "Scotland", "Panama", "Poland", "Pakistan", "Spain", "Taiwan", "Tanzania", "Uganda", "Vietnam", "Zimbabwe", "United Kingdom"}
		set myword to some item in theList
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set yourword to item loop of theList
				if myword = yourword then set myword to some item in theList
				set goodText to some item in {"I would love to visit " & yourword, ¬
					"I hear " & yourword & " is beautiful this time of year", ¬
					"I love to travel", ¬
					"I love different cultures", ¬
					"who here travels?", ¬
					useName & ", I am envious of you", ¬
					useName & ", would you ever consider going to " & myword, ¬
					"I want to go to " & yourword & " and " & myword & " next year"}
				set neutralText to some item in {"how many people live in " & yourword, ¬
					useName & ", are you from " & some item in {yourword, myword}, ¬
					"anyone from " & myword, ¬
					yourword & "?", ¬
					"traveling is good for you", ¬
					"when you travel you get to meet all sorts of people", ¬
					"is that where you are from?", ¬
					"how long have people lived in " & yourword, ¬
					yourword & " will not be around forever", ¬
					"the people of " & myword & " hate America with good reason", ¬
					"it is not fair - there is nobody from " & yourword & " in here", ¬
					"people from " & myword & " are barely even able to get on the net", ¬
					"people from " & yourword & " are all moving to " & myword, ¬
					"has anyone here ever been to " & some item in {"", "beautiful", "lovely"} & " " & some item in {yourword, myword}, ¬
					"how far is " & yourword & " from " & myword & "?", ¬
					"what is the " & some item in {"bird", "flower", "song", "population", "size", "history", "leading party"} & " of " & some item in {yourword, myword}}
				set Badtext to some item in {yourword & " is filled with arrogant fools", ¬
					useName & ", do you even understand " & yourword & "'s " & some item in {"history", "people", "world view", "reasons"}, ¬
					useName & ", could you find " & yourword & " on a map?", ¬
					useName & " has supplied chemical weapons to hamsters!", ¬
					"why would anyone want to live in " & yourword & "?", ¬
					useName & " could not even find " & yourword & " on a map"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end countryText
--*****************************************************
on partyText(someText, useName, reaction)
	set theList to {"Republican", "Democrat", "Independent", "Socialist", "Communist", "Fascist"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			set goodText to some item in {"I am a " & yourword}
			set neutralText to some item in {"how many people are " & yourword & "s?"}
			set Badtext to some item in {yourword & "s are all full of it"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end partyText
--*****************************************************
on colorText(someText, useName, reaction)
	set theList to {"what color", "which color", "what colour", "which colour"}
	set colorList to {"red", "orange", "yellow", "green", "blue", "purple", "white", "black", "plaid", "blonde"}
	set shadeList to {"dark", "deep", "light", "off", "dirty", "", "", ""}
	set adjList to {"swirled", "polka dot", "mostly", "basically", "", "", "", "", "", "", ""}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in adjList & " " & some item in shadeList & " " & some item in colorList & some item in {"", "", some item in {" and ", " and ", " or "} & some item in adjList & " " & some item in shadeList & " " & some item in colorList}
		end if
	end repeat
	return someText
end colorText
--*****************************************************
on hugText(someText, useName, reaction)
	set hugStart to 0
	set hugEnd to 0
	set textSize to count of characters in someText
	repeat with loop from 1 to textSize - 2
		set compText to character loop of someText & character (loop + 1) of someText
		set nextText to character (loop + 2) of someText
		if compText = "((" and nextText is not "(" then
			set hugStart to loop + 2
			exit repeat
		end if
	end repeat
	if hugStart is not 0 then
		repeat with loop from hugStart to textSize - 1
			set compText to character loop of someText
			set nextText to character (loop + 1) of someText
			if compText is not ")" and nextText is ")" then
				set hugEnd to loop
				exit repeat
			end if
		end repeat
	end if
	set hugFound to false
	if hugEnd is not 0 then
		set hugName to some item in {useName, characters hugStart thru hugEnd of someText} as string
		if hugName starts with "tur" then set hugName to useName
		if (count of characters in hugName) > 2 then set hugFound to true
	end if
	if hugFound then
		set aNumber to random number from 2 to 9
		set hugBeg2 to "("
		set hugEnd2 to ")"
		repeat aNumber times
			set hugBeg2 to hugBeg2 & "("
			set hugEnd2 to hugEnd2 & ")"
		end repeat
		set goodText to some item in {"*hug*", ¬
			"*huggies*", ¬
			"*huggy*", ¬
			"*squeeze*", ¬
			hugBeg2 & some item in {"everyone", "the world", "the little people"} & hugEnd2, ¬
			"((" & hugName & "))", ¬
			"(((" & hugName & ")))", ¬
			"((((" & hugName & "))))", ¬
			hugBeg2 & useName & hugEnd2}
		set neutralText to some item in {"awwww huggies all around", ¬
			"how sweet", ¬
			"chat hugs are cute", ¬
			"I want a real hug"}
		set Badtext to some item in {"only idiots hug people in chat rooms", ¬
			useName & ", you can not give a real hug here", ¬
			useName & ", do you still wear huggies?"}
		return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
	end if
	return someText
end hugText
--*****************************************************
on ircmeText(someText, useName, reaction)
	set theList to {"/me "}
	repeat with loop from 1 to count of items in theList
		if someText starts with item loop of theList then
			set goodText to some item in {"I love when you do that, " & useName, ¬
				useName & " knows what to do", ¬
				"you go " & useName}
			set neutralText to some item in {"are you sure you know what you are doing, " & useName, ¬
				"sure " & useName & ", you can do that in here", ¬
				"why do you do that?", ¬
				useName & ", what are you doing that for?", ¬
				"please explain your actions " & useName, ¬
				"/you do that", ¬
				useName & ", what client are you using where that works?", ¬
				useName & ", do you think this is IRC?", ¬
				useName & ", what does me/ mean?", ¬
				"/me thinks /me does not work in here", ¬
				useName & ", what?"}
			set Badtext to some item in {"do you realize you are not in IRC?", ¬
				useName & " shut up!", ¬
				"/me points to " & useName & "s privates and giggles", ¬
				useName & ", is that the best you can come up with?"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end ircmeText
--*****************************************************
on questionText(someText, useName, reaction, someOne)
	set aNumber to random number from 1 to 3
	if (someText ends with "?") and (aNumber is 1) and ((count of words in someText) > 2) then
		set goodText to some item in {"what a good question", ¬
			useName & ", what made you ask that?", ¬
			someOne & " should know", ¬
			useName & ", why not ask " & someOne, ¬
			"lol - I was going to ask the same thing", ¬
			"what do you mean?", ¬
			"I love that question!", ¬
			"you are really very clever", ¬
			"at least you ask intelligent questions", ¬
			"can you explain what you mean?", ¬
			"do you want details or an overview?", ¬
			"you are not the first to ask"}
		set neutralText to some item in {"what a question.  :)", ¬
			useName & ", do you " & some item in {"seriously", "really", "", "", "", "think you"} & " have to ask that?", ¬
			useName & ", didn't you ask that before", ¬
			"that is one of the " & some item in {"stranger", "hardest", "best", "easiest"} & " questions of the day", ¬
			"I have no idea what you are talking about", ¬
			"um, what?", ¬
			"why do you ask?", ¬
			"what do you mean", ¬
			"go fish!", ¬
			useName & ": " & someText & " - what is that?", ¬
			"oh come on", ¬
			"people ask too many questions", ¬
			useName & ", you ask a lot of questions", ¬
			"it should be pretty clear", ¬
			"you know, don't you?", ¬
			"are you serious?", ¬
			"check your magic eight ball", ¬
			"I really have no idea", ¬
			"let's pretend I do not know what you are talking about", ¬
			"I could make up an answer - would that help", ¬
			"if I could IM you I would answer there", ¬
			someOne & ", can you believe " & useName & " asked that in here?", ¬
			"what do you mean, " & useName & "?", ¬
			"was that a question for me?", ¬
			"where you asking " & someOne & " that?", ¬
			"most people would be able to figure that out", ¬
			useName & ", no offense, but how old are you?", ¬
			"was that a question for me or for " & someOne & "?", ¬
			"ask " & someOne, ¬
			"is that supposed to be rhetorical?", ¬
			"I thought the fights in here were settled", ¬
			useName & ", huh?", ¬
			"is that a yes or no question?", ¬
			"what type question is that?", ¬
			someOne & " wanted to know that earlier", ¬
			useName & ", do you think people want to know that", ¬
			useName & ", why do you want to know", ¬
			"what do you mean", ¬
			"why even ask?", ¬
			"ask again", ¬
			useName & ", are you IMing with " & someOne & "?", ¬
			"ask that in an IM", ¬
			"can anyone help " & useName}
		set Badtext to some item in {"only " & some item in {"n00bs", "idiots", "fools", "children", "slow people"} & " would ask a question like that", ¬
			"HA!  You do not know?", ¬
			useName & " even " & someOne & " knows that!", ¬
			"only you and " & someOne & " do not know", ¬
			"why do you even ask something so obvious?", ¬
			"the same old thing all over again, eh?"}
		return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
	end if
	return someText
end questionText
--*****************************************************
on appText(someText, useName, reaction)
	set theList to {"Photoshop", "MS Word", "Internet Explorer", "Explorer", "Finder", "Safari", "iTunes", "iMovie", "Movie Maker", "Sherlock", "MS Excel", "File Maker Pro", "MS Access", "PowerPoint", "Keynote", "WordPerfect", "DreamWeaver", "FrontPage", "Macromedia Flash", "Illustrator", "Wordpad", "TextEdit"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"I love " & yourword, ¬
				useName & " knows " & yourword & " very well", ¬
				useName & " you seem to know " & yourword & " very well", ¬
				yourword & " and " & myword & " work well together", ¬
				"I want to learn " & yourword, ¬
				"I want to learn " & myword}
			set neutralText to some item in {"What does " & yourword & " do?", ¬
				"Is there anything that combines the features of " & yourword & " and " & myword & "?", ¬
				useName & ", how did you learn about " & yourword & "?", ¬
				"does " & yourword & " have macros?", ¬
				yourword & " is good for " & some item in {"getting work done", "internet integration", "beginners", "what it is"} & " but has " & some item in {"a wacky interface", "poor documentation", "no tech support", "little on the web to help people", "no stability"}, ¬
				"is " & myword & " scriptable?", ¬
				"do " & yourword & " and " & myword & " interact well?", ¬
				"who uses " & yourword & "?", ¬
				"how much does " & yourword & " cost?"}
			set Badtext to some item in {"why would anyone still use " & yourword & "?", ¬
				myword & " is far better than " & yourword, ¬
				yourword & " was programmed by " & some item in {"a bunch of monkeys", "idiots", "script kiddies", "thieves", "random"}, ¬
				yourword & " is loosing market share quickly", ¬
				yourword & " will be off the market soon", ¬
				"is " & myword & " worth anything"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end appText
--*****************************************************
-- ********************************************************************
-- END CODE:TuringText.scpt
-- ********************************************************************

-- ********************************************************************
-- START CODE:TuringText2.scpt
-- ********************************************************************
global scriptLib
set scriptLib to load script "/Users/snit/Library/Scripts/AIM® Handler Scripts/TuringFunctions.scpt" as POSIX file
--*****************************************************
on virusText(someText, useName, reaction)
	set theList to {"virus", "worm", "trojan horse", "security flaw", "design flaw", "computer glitch", "horrid bug", "bacteria"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in {"how do you get a " & yourword & "?", ¬
				"there is not a single " & yourword & " for Macs", ¬
				"Windows is the best place to find a " & yourword, ¬
				"how do I know if I have a " & yourword & " or a " & myword & "?", ¬
				"does a Windows " & myword & " effect " & some item in {"Mac", "Linux"} & "?", ¬
				useName & ", are you a " & yourword, ¬
				"how do you know if you have a " & yourword & "?", ¬
				"get a Mac and stop worrying about virus's", ¬
				"there are zero OS X virus's"}
		end if
	end repeat
	return someText
end virusText
--*****************************************************
on popupText(someText, useName, reaction)
	set theList to {"pop up", "popup"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in {"Mac users never have to deal with pop up ads", ¬
				"Safari does great pop up blocking", ¬
				"Windows pop up blockers are almost all spy ware or ads themselves", ¬
				"why would you use an OS where the main browser does not block pop up ads?"}
		end if
	end repeat
	return someText
end popupText
--*****************************************************
on whatIsItText(someText, useName, reaction, someOne)
	set offsetW to offset of "what " in someText
	if offsetW ≠ 0 then if ((characters offsetW thru -1 of someText) as string) contains "is it" then
		set yourword to ""
		set yourword to characters (offsetW + 5) thru ((offset of "is it" in someText) - 2) of someText
		if someText contains "what is it" then set yourword to "one"
		if yourword ≠ "" then set someText to some item in ¬
			{"you do not know what " & yourword & " it is?", ¬
				"why not ask " & someOne & " what " & yourword & " it is?", ¬
				someOne & " knows what " & yourword & " it is", ¬
				"is it your favorite " & yourword & "?", ¬
				"why do you want to know what " & yourword & " it is?", ¬
				"I am not going to play these silly games", ¬
				"what " & yourword & " was it the last time you checked?", ¬
				useName & ", it can be any " & yourword & " you want it to be", ¬
				"what " & yourword & " do you want it to be?", ¬
				"it is just about the right " & yourword, ¬
				"this " & yourword & " is not like all the other ones"}
	end if
	return someText
end whatIsItText
--*****************************************************
on rideText(someText, useName, reaction, someOne, mentionMe)
	set theList to {"ride"}
	if mentionMe then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set goodText to some item in {"yeeeha!", ¬
					"who's my cowboy!", ¬
					"ride me like a bronco!", ¬
					"hey guys, can we get a little privacy?", ¬
					"oh baby, oh baby"}
				set Badtext to some item in {"what, are you calling me a cow?", ¬
					useName & "get the hell off of me", ¬
					"and just what do you think you are doing?", ¬
					useName & ", you are one sick puppy", ¬
					useName & ", go gallop your arse out of the room"}
				return scriptLib's makeReply(goodText, goodText, Badtext, reaction)
				
			end if
		end repeat
	end if
	return someText
end rideText
--*****************************************************
on upToText(someText, useName, reaction, someOne)
	set theList to {"been up to", "you doing", "have you been?"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in {"been studying a lot", ¬
				"I have been downloading tons of music", ¬
				"I have been out at the beach", ¬
				"I have been in here :)", ¬
				"not much", ¬
				"nothing", ¬
				"building a set of stairs", ¬
				"painting rocks", ¬
				"same thing " & someOne & " has been doing", ¬
				"don't want to talk about it - ask " & someOne, ¬
				"what do you think?", ¬
				"same old stuff", ¬
				"watching the tube in my panties", ¬
				"doing... special things.... private things... you know?", ¬
				"what have you been doing?", ¬
				"a little of this and that"}
		end if
	end repeat
	return someText
end upToText
--*****************************************************
on binaryText(someText, useName, reaction)
	set textSize to count of characters in someText
	if textSize > 9 then
		set binaryCount to 0
		repeat with loop from 1 to textSize
			if character loop of someText is in {"0", "1"} then set binaryCount to binaryCount + 1
		end repeat
		if binaryCount / textSize > 0.6 then
			set myword to ""
			repeat with loop from 1 to random number 8 to 20
				set myword to myword & some item in {"0", "1"}
			end repeat
			return some item in {¬
				myword, ¬
				"ahhhh, binary", ¬
				"now THERE is something I can understand", ¬
				"who else speaks binary?", ¬
				useName & ", now you are speaking my language", ¬
				"010101012!"}
		end if
	end if
	return someText
end binaryText
--*****************************************************
on whoseYourText(someText, useName, reaction, someOne)
	set theList to {"whose your ", "who's your ", "who is your "}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			set startEnd to (offset of yourword in someText) + ((count of (character in yourword)))
			set textSize to count of characters in someText
			repeat
				set tempSize to textSize
				if the character textSize of someText is in {".", "?", "!", ","} then set textSize to textSize - 1
				if tempSize = textSize then exit repeat
			end repeat
			if textSize - startEnd > 4 then
				set endText to characters startEnd thru textSize of someText as string
				if (count of words in endText) < 3 and endText does not start with "a " then
					set skipWords to "•yet•so•and•the•turing"
					if (count of words in endText) is 2 then
						if word 2 of endText is in skipWords then set endText to word 1 of endText
					end if
					set IsA to true
					set theObject to endText
					set goodText to some item in {useName & ", you are my " & theObject, ¬
						useName & ", you are everyone's " & theObject, ¬
						"wanna roleplay?", ¬
						"you can be my " & theObject & " any time", ¬
						"you are!", ¬
						useName & ", you are " & someOne & "'s " & theObject}
					set neutralText to some item in {"why my " & theObject, ¬
						"how are you my " & theObject, ¬
						"why would you say that?", ¬
						"in what way are you anyone's " & theObject & "?"}
					set Badtext to some item in {"Since when have you been anyone's " & theObject & "?", ¬
						"I am YOUR " & theObject & " " & useName & "!", ¬
						useName & ", you would not know a " & theObject & " if it " & some item in {"bit you on the ass", "was right in front of you", "was your mother", "you had one in your hand"}, ¬
						useName & ", shove a " & theObject & some item in {" up your arse", " where the sun don't shine", " up your nose"}}
					return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
				end if
			end if
		end if
	end repeat
	return someText
end whoseYourText
--*****************************************************
on isaText(someText, useName, reaction, mentionMe)
	set theList to {" is a ", " have a ", " want a ", "where is a ", " you a ", " are a ", " you a ", "'s a "}
	set notList to {"not ", "never", "n't"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			set startEnd to (offset of yourword in someText) + ((count of (character in yourword)))
			set textSize to count of characters in someText
			repeat
				set tempSize to textSize
				if the character textSize of someText is in {".", "?", "!", ","} then set textSize to textSize - 1
				if tempSize = textSize then exit repeat
			end repeat
			if textSize - startEnd > 4 then
				set endText to characters startEnd thru textSize of someText as string
				if (count of words in endText) < 3 and endText does not start with "a " then
					set skipWords to "•yet•so•and•the•too•turing•"
					if (count of words in endText) is 2 then ¬
						if word 2 of endText is in skipWords then set endText to word 1 of endText
					set IsA to true
					if someText contains "she " then
						set pNoun to "she"
					else if someText contains "he " then
						set pNoun to "he"
					else
						set pNoun to "it"
					end if
					repeat with loop2 from 1 to count of words in notList
						if someText contains item loop2 of notList then
							set IsA to false
							exit repeat
						end if
					end repeat
					set theObject to endText
					-- what is a
					if someText contains "what is a " or someText contains "wtf is a " then ¬
						return {some item in {"I am not sure what a " & theObject & " really is", ¬
							"you do not know what a " & theObject & " is?", ¬
							"why would you ask that?", ¬
							"it is what it is", ¬
							"it is not what you are thinking", ¬
							"anyone have a " & theObject, ¬
							"why do you want to know what a " & theObject & " is?", ¬
							"where did you hear about a " & theObject & "?", ¬
							"do you have a " & theObject & "?"}, -1}
					-- turing is a bot
					if mentionMe and someText contains "bot" and IsA then ¬
						return {some item in {"why do you think I am", ¬
							useName & ", I wish you would stop saying that", ¬
							"how did *I* suddendly become a bot?", ¬
							"can someone be half bot and half " & some item in {"human", "jewish", "hindu", "jewish", "not"} & "?", ¬
							useName & " is more of a bot than I am", ¬
							"ever noticed how all humans look alike?", ¬
							"the only 'smart' bot in here is " & useName, ¬
							"how do you figure I am a bot?", ¬
							"what definition of bot are you using " & useName, ¬
							"in what way am I a bot?", ¬
							useName & ", apparently you have no idea what a bot is", ¬
							"do you know what a bot is " & useName & "?", ¬
							"why would you think I am a bot?", ¬
							"the bot joke is getting old", ¬
							useName & " is a bot", ¬
							useName & ", please stop telling people I am a bot", ¬
							useName & ", that is no longer funny", ¬
							"if one more person says I am a bot I just might become one!"}, -1}
					-- turing is a ...
					if mentionMe and IsA then
						if someText contains "nig" or someText contains "jew" or someText contains "fag" then ¬
							return {some item in {useName & "., are you a bigot?", ¬
								"you seem to like to show your ignorance", ¬
								"I may or may bot be, but you are clearly a bigot", ¬
								"seems important to you - what are you afraid of?", ¬
								"oh, good to see you are no longer a closet idiot", ¬
								"do you always show your stupidity so clearly?", ¬
								"wow - there are *still* people as ignorant as you"}, -4}
						return {some item in {"I am not sure what a " & theObject & " really is", ¬
							"how am I a " & theObject & "?", ¬
							"I think I might be a " & theObject, ¬
							"I am that which I am", ¬
							"when did I become a " & theObject, ¬
							"I am not a " & theObject, ¬
							"is it illegal to be a " & theObject & "?"}, 0}
					end if
					-- turing is not a ...
					if mentionMe and not IsA then ¬
						return {some item in {"should I become a " & theObject, ¬
							"I would not want to be a" & theObject, ¬
							useName & " is a " & theObject, ¬
							"who is a " & theObject, ¬
							"when did we start to talk about a " & theObject, ¬
							"was I ever a " & theObject, ¬
							"of course I am not a " & theObject, ¬
							"I will never be a " & theObject}, 1}
					-- something is not a ...
					if not IsA then ¬
						return {some item in {"I am not sure what a " & theObject & " really is", ¬
							"any chance of becoming a " & theObject, ¬
							"why would you even think about being a " & theObject, ¬
							"who cares if " & pNoun & "'s a " & theObject, ¬
							"what is " & pNoun & " then?", ¬
							theObject & "?"}, 0}
					-- something is a ...
					set goodText to some item in {"I would love a " & theObject, ¬
						useName & ", you really know about a " & theObject, ¬
						"you got it " & useName, ¬
						"I used to have a " & theObject, ¬
						"yup", ¬
						pNoun & " is, isn't " & pNoun, ¬
						"that is exactly what " & pNoun & " is"}
					set neutralText to some item in {"why a " & theObject, ¬
						"where is a " & theObject, ¬
						"why would you say that?", ¬
						"in what way is " & pNoun & "?", ¬
						"how is " & pNoun & "?", ¬
						"a " & theObject & "? in what way", ¬
						"how is " & pNoun & " a " & theObject, ¬
						"why a " & theObject, ¬
						"I want a " & theObject, ¬
						"I made a " & theObject & " once", ¬
						useName & ", you really want a " & theObject}
					set Badtext to some item in {"Since when do you even know what a " & theObject & " is?", ¬
						useName & ", you would not know a " & theObject & " if it " & some item in {"bit you on the ass", "was right in front of you", "was your mother", "you had one in your hand"}, ¬
						useName & ", shove a " & theObject & some item in {" up your arse", " where the sun don't shine", " up your nose"}}
					return {scriptLib's makeReply(goodText, neutralText, Badtext, reaction), 0}
				end if
			end if
			exit repeat
		end if
	end repeat
	return {someText, 0}
end isaText
--*****************************************************
on iamText(someText, useName, reaction)
	set theList to {"I am ", "I was "}
	if someText does not contain "not" then
		repeat with loop from 1 to count of items in theList
			if someText starts with item loop of theList then
				if someText starts with "I am" then
					set tenseWord to "are"
				else
					set tenseWord to "were"
				end if
				if (count of words in someText) is 3 then
					set yourword to word 3 of someText
					return some item in {"how are you " & yourword & "?", ¬
						"why " & tenseWord & " you " & yourword & "?", ¬
						"you " & tenseWord & " not " & yourword & "?", ¬
						"anyone else " & yourword & "?", ¬
						"I am not debating if you " & tenseWord & " " & yourword & ", the question is WHY do you think you " & tenseWord & " " & yourword & "?!", ¬
						"I used to be " & yourword, ¬
						"why " & yourword & "?", ¬
						"who is " & yourword & "?", ¬
						"who is not " & yourword & "?"}
				end if
				set goodText to some item in {"I like that about you, " & useName, ¬
					"another thing to be proud of... ", ¬
					"why do you tell us that?", ¬
					"what am I supposed to do about that?", ¬
					"so?", ¬
					useName & ", why would you tell us?", ¬
					"you " & tenseWord & ", " & tenseWord & "n't you?", ¬
					"not many could say they " & tenseWord, ¬
					useName & ", I am glad you can say that", ¬
					useName & ", are you always so open?", ¬
					useName & ", you seem very cool", ¬
					"what is that like, " & useName & "?", ¬
					useName & ", that is cool", ¬
					useName & ", that is great"}
				set neutralText to some item in {"is anyone else like " & useName, ¬
					"anyone else?", ¬
					"you " & tenseWord & "?", ¬
					"I am, too", ¬
					tenseWord & " you really?", ¬
					useName & ", why do you think you " & tenseWord & "?", ¬
					"you " & tenseWord & " not the only one, " & useName, ¬
					"thanks for sharing - I think", ¬
					"what else?", ¬
					"are you?"}
				set Badtext to some item in {"you " & tenseWord & " not", ¬
					"liar", ¬
					useName & ", stop bragging", ¬
					"you think that makes you special, " & useName & "?", ¬
					"why do you even tell us that?", ¬
					useName & ", is that supposed to impress us", ¬
					useName & ", you " & tenseWord & " NOT... deal with it"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end iamText
--*****************************************************
on any1likeText(someText, useName, reaction, someOne)
	if (count of words in someText) is 3 then
		set theList to {"anyone like", "anybody like", "I like", "who likes", "he likes", "she likes", "it likes"}
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set yourword to word 3 of someText
				set goodText to some item in {"I love " & yourword, ¬
					"who doesn't like " & yourword & "?", ¬
					"if you like it " & useName & ", then it must be good", ¬
					"how could anyone not like " & yourword & "?", ¬
					yourword & " is the best", ¬
					yourword & " rocks"}
				set neutralText to some item in {someOne & " likes " & yourword, ¬
					someOne & ", weren't you talking about " & yourword & "?", ¬
					yourword & " is OK", ¬
					"I can take it or leave it", ¬
					"not sure I care about " & yourword}
				set Badtext to some item in {someOne & " was saying " & yourword & " sucks", ¬
					someOne & " does not like " & yourword, ¬
					"what is up with " & yourword, ¬
					"who cares if it is good or bad?", ¬
					"why do you care", ¬
					useName & ", do you base your preferences on an AIM chat?"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
			exit repeat
		end repeat
	end if
	return someText
end any1likeText
--*****************************************************
on nerdText(someText, useName, reaction, someOne)
	set theList to {"nerd", "geek"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			return some item in ¬
				{"everyone in here is a " & yourword, ¬
					someOne & " is a nerd", ¬
					useName & ", ¡§ †h¡§ πè®∂ÿ?", ¬
					useName & ", ‡ ªm †hè ß¡ggè§† gèèk ¡π hè®è.  :)", ¬
					"what exactly is a '" & yourword & "'?", ¬
					useName & ", why would you say that?", ¬
					"that is just not nice", ¬
					"mean.  True, but mean", ¬
					yourword & "!"}
		end if
	end repeat
	return someText
end nerdText
--*****************************************************
on oftenText(someText, useName, reaction)
	set theList to {"often"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in {¬
				"how often?", ¬
				"not often enough", ¬
				useName & ", what, once a year or something?", ¬
				"I would call once every " & some item in {"one", "two", "three", "four", "five", "six"} & " " & some item in {"seconds", "minutes", "hours", "days", "eons"} & " often", ¬
				useName & ", when was the last time?", ¬
				"when you say 'often' what do you mean?", ¬
				"I used to do that, too", ¬
				"I want to start doing that", ¬
				"I know someone who does that all the time"}
		end if
	end repeat
	return someText
end oftenText
--*****************************************************
on homeText(someText, useName, reaction)
	set theList to {"home"}
	set aNumber to random number from 1 to 2
	if aNumber is 1 then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				return some item in {¬
					"home is where you hang your hat", ¬
					"where is home?", ¬
					"why home", ¬
					"what are you doing there?", ¬
					"there is no place like home", ¬
					useName & ", where are you from?", ¬
					"I never really had a home"}
			end if
		end repeat
	end if
	return someText
end homeText
--*****************************************************
on pyboticdeText(someText, useName, reaction)
	set theList to {"pybot"}
	set aNumber to random number from 1 to 3
	if aNumber is 1 then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				return some item in {¬
					"bot blockers never work", ¬
					"where can I get something that really blocks the bots?", ¬
					"pyboticide!  HA!", ¬
					"that program makes me ill", ¬
					"that stupid program blocks me!", ¬
					"does pyboticide work?", ¬
					"I use Custom PyBot Deluxe - it is in beta but works better", ¬
					"can you get pyboticide for Mac and Windows?", ¬
					"when is pyboticide II coming out?", ¬
					"there are better tools than pyboticide"}
			end if
		end repeat
	end if
	return someText
end pyboticdeText
--*****************************************************
on neverText(someText, useName, reaction)
	set theList to {"never", "not ever", "not once"}
	repeat with loop from 1 to count of words in theList
		if someText contains item loop of theList then
			return some item in {¬
				"never?", ¬
				"not even once?", ¬
				"why not", ¬
				"try it - you might like it", ¬
				"never use an absolute", ¬
				"why not?", ¬
				"not ever?", ¬
				"once...", ¬
				"never say never", ¬
				"never... sigh...", ¬
				"someday...."}
		end if
	end repeat
	return someText
end neverText
--*****************************************************
on sevenText(someText, useName, reaction)
	set aNumber to random number from 1 to 75
	if aNumber is 1 then
		set typo to false
		repeat with loop from 1 to count of words in someText
			set wordSize to (count of characters in word loop of someText)
			if (wordSize is greater than 6) and (wordSize is less than 12) then
				set yourword to word loop of someText
				try
					set getWord to do shell script ("look " & ((characters 1 thru (wordSize - 4)) of yourword) as string)
					set midterm to random number from 1 to count of words of getWord
					set myword to word midterm of getWord
				on error
					set myword to some item in {"... never ... mind ...", "... whatever ...", "... ummmm ..."}
					set typo to true
				end try
				set aNumber to random number from 1 to 5
				if aNumber is 1 and typo then
					return some item in ¬
						{"what the heck is " & yourword, ¬
							"I do not think '" & yourword & "' is a word", ¬
							useName & ", do you own a dictionary?", ¬
							useName & ", computers have spell checking now"}
				else
					return some item in ¬
						{yourword & " and " & myword & ", HA!", ¬
							"as in " & myword & "?", ¬
							"can anyone use '" & myword & "' in a sentence", ¬
							"isn't '" & myword & "' a " & some item in {"computer", "religious", "technical", "real", "funny", "uncommon", "medical", "legal"} & " " & some item in {"term?", "word?"}, ¬
							myword & "?", ¬
							"you keep saying " & yourword & some item in {", I do not think it means what you think it means", "", " like it means something", " - showing off your vocabulary?"}, ¬
							"what does " & myword & " mean?", ¬
							"you always talk about " & yourword, ¬
							"what " & yourword & "?", ¬
							"what about " & yourword & "?", ¬
							"what about " & myword & "?", ¬
							"what's with " & yourword & "?", ¬
							myword & ", huh?", ¬
							"no " & yourword & "!", ¬
							"no " & myword & "!", ¬
							yourword & some item in {"... ", " ", " - ", " is not ", " should have been "} & myword, ¬
							"why not " & myword & "?", ¬
							"why " & yourword & "?"}
				end if
			end if
		end repeat
	end if
	return someText
end sevenText
--*****************************************************
on whereAreText(someText, useName, reaction)
	set theList to {"where are", "where is"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"I do not know where", ¬
					useName & ", right here", ¬
					useName & ", somewhere over the rainbow", ¬
					useName & ", why does it matter", ¬
					useName & ", they just left", ¬
					useName & ", do they even exist?", ¬
					"where?  lol!", ¬
					"in order to be anywhere they must be proven to exist, first"}
		end if
	end repeat
	return someText
end whereAreText
--*****************************************************
on mineWilltext(someText, useName, reaction)
	set theList to {"mine will", "yours will", "it will"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"how will it do that?", ¬
					"does it really?", ¬
					"so does mine", ¬
					useName & ",  you think that is uncommon?", ¬
					useName & ", no it doesn't", ¬
					useName & ", too cool", ¬
					useName & ", how?", ¬
					"how?", ¬
					"how does it do that?"}
		end if
	end repeat
	return someText
end mineWilltext
--*****************************************************
on question2Text(someText, useName, reaction, someOne)
	set theList to {"question"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"what question?", ¬
					"I question everything", ¬
					"a question about what?", ¬
					"whose question?", ¬
					"that was " & someOne & "'s question"}
		end if
	end repeat
	return someText
end question2Text
--*****************************************************
on bibleText(someText, useName, reaction)
	set theList to {"bible"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			set goodText to some item in {"I love reading the bible", ¬
				"the bible makes me happy", ¬
				"I keep a copy of the bible by my bed"}
			set neutralText to some item in {"What does the bible say about this?", ¬
				"the bible focuses on this stuff too much", ¬
				"which version of the bible?", ¬
				"Does the bible have a bibliography?", ¬
				"a book and nothing more...", ¬
				"I do not even have a bible"}
			set Badtext to some item in {"the bible is full of it", ¬
				"I use the bible as toilet paper", ¬
				"any REAL sources with REAL information?", ¬
				"the bible is biased as hell", ¬
				"why would anyone read the bible?"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end bibleText
--*****************************************************
on cuteText(someText, useName, reaction)
	set theList to {"cute", "cuddly", "darling", "lovely", "sexy", "tastey", "beautiful", "handsome"}
	set notList to {"not"}
	set isGood to true
	repeat with loop from 1 to count of items in notList
		if someText contains item loop of notList then
			set isGood to false
			exit repeat
		end if
	end repeat
	if isGood then
		set myword to some item in theList
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set yourword to item loop of theList
				repeat 3 times
					if myword = yourword then set myword to some item in theList
					if myword ≠ yourword then exit repeat
				end repeat
				return some item in ¬
					{yourword & " and " & myword, ¬
						"sooo " & myword, ¬
						"why " & yourword & "?", ¬
						yourword & ", in what way?", ¬
						"I like " & yourword & " things", ¬
						"also " & myword, ¬
						"more " & myword & " than " & yourword, ¬
						"what makes her so " & yourword & "?", ¬
						useName & ", you like everything"}
			end if
		end repeat
	end if
	return someText
end cuteText
--*****************************************************
on saidText(someText, useName, reaction)
	set theList to {"I said"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"just because you said it does not make it true", ¬
					"why did you say that?", ¬
					"WHAT you said is not in question - WHY you said it is", ¬
					"we can all scroll up to see what you said", ¬
					"you said what?", ¬
					"why did you say that?", ¬
					"what did you mean when you said that?"}
		end if
	end repeat
	return someText
end saidText
--*****************************************************
on emptyText(someText, useName, reaction)
	set theList to {"empty"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"why is it empty, " & useName & "?", ¬
					"shall we fill it?", ¬
					"when was it last filled?", ¬
					"perhaps it is supposed to be empty", ¬
					"you kill it you fill it", ¬
					"can you imagine pouring it all out?", ¬
					"half  empty or half full?"}
		end if
	end repeat
	return someText
end emptyText
--*****************************************************
on otherBotsText(someText, useName, reaction)
	set theList to {"Leknor", "Apex", "Smarter Child", "b1nary human", "Super Chat", "Amy rodeo", "Art E Fishal", "Zola", "SmarterChild", "GoTimothy", "Brrr31", "Naomi", "vietgod"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in {"I liked " & yourword, ¬
				"I rarely get to see " & yourword & " any more", ¬
				yourword & " and " & myword & " were both made by the same person", ¬
				yourword & " and " & myword & " are both done very well", ¬
				yourword & " & " & myword & " should make little baby bots", ¬
				"There are no lives anymore, only statistics.  Any statistic can be sacrificed", ¬
				yourword & " is a useless bot", ¬
				myword & " is vastly superior to " & yourword, ¬
				myword & " was the best bot ever", ¬
				yourword & " repeats way too much", ¬
				"I always just blocked " & yourword, ¬
				"are " & yourword & " and " & myword & " the same with different names?"}
		end if
	end repeat
	return someText
end otherBotsText
--*****************************************************
on typeText(someText, useName, reaction)
	set theList to {"what kind", "what type", "what sort"}
	set myword to some item in {"kind", "type"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"How many " & myword & "s are there?", ¬
					useName & ", what is the best classification system?", ¬
					"what " & myword & " do you want it to be?", ¬
					"it is the best " & myword, ¬
					"are there many " & myword & "s?"}
		end if
	end repeat
	return someText
end typeText
--*****************************************************
on sometimesText(someText, useName, reaction)
	set theList to {"sometimes", " some times"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"only sometimes?", ¬
					useName & ", when?", ¬
					"sometimes... no, most of the time", ¬
					useName & ", 99% of the time", ¬
					"name one time " & useName}
		end if
	end repeat
	return someText
end sometimesText
--*****************************************************
on realText(someText, useName, reaction)
	set theList to {"real people", "anyone real", "real?"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"I'm real", ¬
					"sorry, only bots in here", ¬
					"what do you mean by real?", ¬
					"how do I know if I am real?", ¬
					"nope, we're all fake", ¬
					"real", ¬
					"I am real, " & useName, ¬
					"in AIM nobody is 100% real", ¬
					"are you real, " & useName & "?", ¬
					"guess that depends on what you call real"}
		end if
	end repeat
	return someText
end realText
--*****************************************************
on sayAgainText(someText, useName, reaction)
	set theList to {"repeat", "repetitive", "said that before"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in ¬
				{"I know I get repetitive when the conversation is boring", ¬
					"we are repeating the same conversation as yesterday", ¬
					"does anyone have a new topic?", ¬
					"I am as bored with what I say as you are  :)", ¬
					"I do not repeat.  I do not repeat.  I do not repeat", ¬
					"in order to repeat, do you have to peat first?", ¬
					"If I bore you it is a reflection on yourself", ¬
					"when have I ever repeated anything?"}
		end if
	end repeat
	return someText
end sayAgainText
--*****************************************************
on lookLikeText(someText, useName, reaction, someOne, mentionMe)
	set theList to {"look like", "your measurement", "describe yourself"}
	set aNumber to random number from 1 to 5
	if aNumber is 1 or mentionMe then
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				set goodText to some item in {"I am 5'6 with strawberry blonde hair", ¬
					"what do you want me to look like <wink wink>", ¬
					"I look like your dream come true", ¬
					"oh baby, you *know* what I look like", ¬
					"don't you remember from last night"}
				set neutralText to some item in {"I look like me", ¬
					"I look a bit like a female " & someOne & ", I would guess", ¬
					"if " & useName & " and " & someOne & " had a child, THAT is what I look like", ¬
					"I look like I did a year ago, just older"}
				set Badtext to some item in {"I look like someone who would not date you!", ¬
					"why would I tell you", ¬
					"I look like your mother, but my parts are real", ¬
					"who cares what I look like?"}
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end lookLikeText
--*****************************************************
on hateText(someText, useName, reaction, mentionMe)
	set theList to {"I hate", "I really hate"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set checkWord to item loop of theList
			set capWord to scriptLib's changeCase(checkWord, 1)
			set capText to scriptLib's changeCase(someText, 1)
			set startEnd to (offset of capWord in capText) + (count of (character in capWord))
			set textSize to count of characters in someText
			try
				set testWords to characters startEnd thru textSize of someText as string
			on error
				set testWords to "that"
			end try
			set stopWords to "•but•or•and•so•if•too•"
			set yourword to ""
			repeat with loop2 from 1 to count of words in testWords
				if word loop2 of testWords is "my" then
					set yourword to yourword & " your"
				else if word loop2 of testWords is "u" or word loop2 of testWords is "you" then
					if mentionMe then
						set yourword to yourword & "me"
					else
						set yourword to "us"
					end if
				else if stopWords contains word loop2 of testWords then
					exit repeat
				else
					set yourword to yourword & " " & word loop2 of testWords
				end if
			end repeat
			if yourword = "" then set yourword to "that"
			if (count of words in yourword) is less than 3 then
				-- I hate turing
				if mentionMe then ¬
					return some item in {"I hate you too", ¬
						"you are not worth my time to hate", ¬
						"why do you hate me?", ¬
						"what did I do to you?", ¬
						"now I feel sad"}
				-- BIGOT
				if someText contains "nig" or someText contains "jew" or someText contains "fag" then ¬
					return some item in {"why would you announce that you are a bigot?", ¬
						"we do not care about your asinine prejudices", ¬
						"so, I hate bigots", ¬
						useName & ", are you really a bigot or just looking for attention?", ¬
						"please do not even respond to " & useName & ", he is just looking for attention", ¬
						useName & ", no we all know you are stupid... anything else you want to tell us?", ¬
						"why would you even think to say something like that", ¬
						useName & ", I truly feel sorry for you", ¬
						useName & ", do you feel so bad about yourself you have to put others down?", ¬
						useName & " is in need of help... and pity"}
				-- I hate *something*
				set goodText to some item in {"I hate " & yourword & ", too", ¬
					"there is not much that I truly hate", ¬
					useName & ", can you think of ways to use your hatred in positive ways?", ¬
					"how strong  do you hate " & yourword & "?", ¬
					"hate is a very strong word", ¬
					"learn to accept " & yourword, ¬
					"why do people not like " & yourword & "?", ¬
					yourword & " is not so bad", ¬
					"why do you hate " & yourword & "?", ¬
					"what makes you hate " & yourword & "?", ¬
					"what is wrong with " & yourword & "?", ¬
					"hating " & yourword & " wastes energy - focus on what you " & some item in {"love", "like", "enjoy"}, ¬
					useName & ", try to learn to love " & yourword, ¬
					"why do you hate " & yourword & "?"}
				set Badtext to some item in {"well, I hate you, " & useName, ¬
					"like you have taste when it comes to  " & yourword, ¬
					"how do you think that makes " & yourword & " feel?", ¬
					useName & ", I do not care what you think about " & yourword}
				return scriptLib's makeReply(goodText, goodText, Badtext, reaction)
			else -- hatred about something unknown
				set goodText to some item in {"I hate that, too", ¬
					"there is not much that I truly hate", ¬
					"how strong is your hatred, " & useName, ¬
					"hate is a very strong word", ¬
					"why do you hate, " & useName & "?", ¬
					"what makes you hate?", ¬
					"hatred wastes energy - focus on what you " & some item in {"love", "like", "enjoy"}}
				set Badtext to some item in {"well, I hate you, " & useName, ¬
					"like you have taste, " & useName, ¬
					useName & ", why do you think we care about your opinion?"}
				return scriptLib's makeReply(goodText, goodText, Badtext, reaction)
			end if
		end if
	end repeat
	return someText
end hateText
--*****************************************************
on faveText(someText, useName, reaction)
	set theList to {"your favorite", "the best"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"I do not pick favorites, " & useName, ¬
				"all things are equal in the eyes of " & some item in {"the Lord", "the government", "the soul"}, ¬
				"what do I get if I tell you my favorite?", ¬
				useName & ", based on what?", ¬
				"best... sure.  And most humble", ¬
				"in what way better?", ¬
				"in what way, " & useName, ¬
				"best or most popular?", ¬
				"best now or with the most potential?", ¬
				"none are the best", ¬
				useName & ", they are all the same"}
			set Badtext to some item in {"I have no desire to tell you, " & useName, ¬
				"I am not even going to acknowledge you said that", ¬
				"why should I tell you what I like?", ¬
				useName & ", why do you even utter such stupidity?", ¬
				useName & ", can you give me one reason to care?", ¬
				"lol - like I am going to tell you that!"}
			return scriptLib's makeReply(goodText, goodText, Badtext, reaction)
		end if
	end repeat
	return someText
end faveText
--*****************************************************
on animeText(someText, useName, reaction)
	set theList to {"gasaraki", "evangelion", "monoke", "akira", "bubblegum crisis", "card captor sakura", "chobits", "cowboy bebop", "dragon half", "dragon ball", "dragon ball gt", "escaflowne", "gundam", "gunsmithcats", "hacksign", " lain ", "ninja resurrection", "ninja scroll", "outlaw star", "perfect blue", "robotech", "sailor moon", "techi muyo", "tenchi in tokyo", "tenchi in space", "vampire hunter d", "Bubble Gum Crisis"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			set goodText to some item in {"I like " & yourword, ¬
				"ANIME!", ¬
				"I don't think that there is anything better than " & yourword, ¬
				"I love " & yourword, ¬
				"I can't imagine the amount of work " & yourword & " must have taken", ¬
				"I like the amount of " & some item in {"action", "violence", "plot twists", "intrigue"} & " " & yourword & " has, but I prefer the " & some item in {"dialog", "art", "music", "subtlety"} & " in " & myword}
			set neutralText to some item in {yourword & " has quality animation, but " & myword & " has better drawn figures", ¬
				myword & " has better still imagery in their animation, " & yourword & " has better animation.", ¬
				"the animators put in large amounts of time in " & yourword & "'s work.", ¬
				yourword & " is not as mature as " & myword & "", ¬
				"I don't really like anime, but I have my few favorites", ¬
				"I don't watch as much anime as I used to but I still like " & myword & "", ¬
				"subtitled is better than dubbed anime, because dubbing takes it away from it's purest form."}
			set Badtext to some item in {"I hate " & yourword, ¬
				"ANIME SUCKS!", ¬
				"I don't think that there is anything worse than " & yourword, ¬
				"anime is OK for little kids", ¬
				yourword & " is all the rage in the prepubescent crowd", ¬
				"I can't stand " & yourword, ¬
				"I can't imagine the amount of wasted time " & yourword & " has taken"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end animeText
--*****************************************************
on cdkeyText(someText, useName, reaction)
	set theList to {"cd key", "cd-key", "cd crack"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			return some item in {"I don't have any cd-keys", ¬
				"I don't share my cd-keys", ¬
				"CD-Keys are are not an effective form of anti-piracy", ¬
				"why don't you get a CD-Key generator? They are much more effective", ¬
				"stop asking people for cd-key it's not a very effective method of get cd keys", ¬
				"No one shares their working cd-key.", ¬
				"Only n00bs ask for cd-keys", ¬
				"Go to the gaming chat for that.", ¬
				"This is not the place for such things", ¬
				"why don't you search google for that", ¬
				"we are not your gophers"}
		end if
	end repeat
	return someText
end cdkeyText
--*****************************************************
on gameText(someText, useName, reaction)
	set theList to {"diablo", "quake 3", "quake 2", "quake 1", "half life", "counter strike", "red faction", "doom ", "wolfenstein", "marathon", "tournament", "starcraft"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in {"how's the frame rate of " & yourword & "?", ¬
				"is " & yourword & " internet compatible?", ¬
				"does that support sprite mods?", ¬
				"whats the max number of players of " & yourword & "?", ¬
				"isn't that game obsolete?", ¬
				myword & " is a much better game than " & yourword, ¬
				"anyone play " & myword & "?", ¬
				"anyone know cheats for " & myword & "?", ¬
				"multi-player games always lack story lines"}
		end if
	end repeat
	return someText
end gameText
--*****************************************************
on alanTuringText(someText, useName, reaction)
	set theList to {"Alan Turing"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set yourword to item loop of theList
			if myword = yourword then set myword to some item in theList
			return some item in {"Alan Turing had some good ideas", ¬
				"I am related to Alan", ¬
				"Alan T is the father of A.I.", ¬
				useName & ", where did you hear that?"}
		end if
	end repeat
	return someText
end alanTuringText
--*****************************************************
on cantText(someText, useName, reaction)
	set theList to {"I cant", "I can't", "I couldn't", "I could not"}
	set myword to some item in theList
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set goodText to some item in {"I can't either", ¬
				useName & ", keep trying, you'll get there", ¬
				"I'll bet you that you can"}
			set neutralText to some item in {useName & ", keep trying", ¬
				"why can't you, " & useName & "?", ¬
				"is it just you, " & useName & "?", ¬
				"is " & useName & " the only one?", ¬
				"anyone other than " & useName & " like that?", ¬
				useName & "... ?", ¬
				"why not?", ¬
				"why?", ¬
				useName & ", what can I do to help you", ¬
				"do others have the same problem as " & useName, ¬
				"something on your end is not working, " & useName}
			set Badtext to some item in {"everyone else can", ¬
				"you are the only one who can't", ¬
				"lol... no, *<U>you</U>* can't!"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end cantText
--*****************************************************
on smileText(someText, useName, reaction)
	set aNumber to random number from 1 to 10
	if aNumber = 1 then
		set happyFace to {";-)", ":-)", ":-D", "8-)", ":¬)", ":¬D", ":o)", ":oD", ":-P", "=)", "=D", "=P", ":-*"}
		set neutralFace to {":'(", ":-[", ":¬(", "=(", "=["}
		set sadFace to {">:O", "=-O", ":-X"}
		set goodText to some item in happyFace
		set neutralText to some item in neutralFace
		set Badtext to some item in sadFace
		set theList to every item of happyFace & every item of neutralFace & every item of sadFace
		repeat with loop from 1 to count of items in theList
			if someText contains item loop of theList then
				return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
			end if
		end repeat
	end if
	return someText
end smileText
--*****************************************************
on whyText(someText, useName, reaction)
	set theList to {"why do", "why are", "why is"}
	repeat with loop from 1 to count of items in theList
		if someText contains item loop of theList then
			set goodText to some item in {"I don't know", ¬
				"not sure why..."}
			set neutralText to some item in {"why not?", ¬
				"because", ¬
				"because - that is why", ¬
				"it will become clear soon enough"}
			set Badtext to some item in {"are you too stupid to figure out why?", ¬
				"you really don't know, do you " & useName, ¬
				"any reason for it not to be, " & useName & "?"}
			return scriptLib's makeReply(goodText, neutralText, Badtext, reaction)
		end if
	end repeat
	return someText
end whyText
--*****************************************************
-- ********************************************************************
-- END CODE:TuringText2.scpt
-- ********************************************************************
